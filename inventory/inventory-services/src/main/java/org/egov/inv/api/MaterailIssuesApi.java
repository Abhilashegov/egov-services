/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.egov.inv.api;

import org.egov.inv.model.ErrorRes;
import org.egov.inv.model.MaterialIssueRequest;
import org.egov.inv.model.MaterialIssueResponse;
import org.egov.inv.model.RequestInfo;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

@javax.annotation.Generated(value = "org.egov.inv.codegen.languages.SpringCodegen", date = "2017-11-08T13:51:07.770Z")

@Api(value = "materailIssues", description = "the materailIssues API")
public interface MaterailIssuesApi {

	@ApiOperation(value = "Create new indent issues.", notes = "This API is invoked when the issuing store issues materials against the indent raised in the system.", response = MaterialIssueResponse.class, tags = {
			"Indent Issue", })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "IndentIssue created Successfully", response = MaterialIssueResponse.class),
			@ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })

	@RequestMapping(value = "/materailIssues/_create", produces = {
			"application/json" }, consumes = {
					"application/json" }, method = RequestMethod.POST)
	ResponseEntity<MaterialIssueResponse> materailIssuesCreatePost(
			@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,
			@ApiParam(value = "Create  new") @Valid @RequestBody MaterialIssueRequest indentIssueRequest);

	@ApiOperation(value = "Get the list of indent issues.", notes = "This API is used to search the issues incurred for the indents raised in the system.", response = MaterialIssueResponse.class, tags = {
			"Indent Issue", })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "IndentIssue retrieved Successfully", response = MaterialIssueResponse.class),
			@ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })

	@RequestMapping(value = "/materailIssues/_search", produces = {
			"application/json" }, consumes = {
					"application/json" }, method = RequestMethod.POST)
	ResponseEntity<MaterialIssueResponse> materailIssuesSearchPost(
			@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,
			@ApiParam(value = "Parameter to carry Request metadata in the request body") @Valid @RequestBody org.egov.common.contract.request.RequestInfo requestInfo,
			@Size(max = 50) @ApiParam(value = "comma seperated list of Ids") @RequestParam(value = "ids", required = false) List<String> ids,
			@ApiParam(value = "material issue of the IndentIssue ") @RequestParam(value = "materialIssue", required = false) Long materialIssue,
			@ApiParam(value = "issued to employee of the IndentIssue ") @RequestParam(value = "issuedToEmployee", required = false) String issuedToEmployee,
			@ApiParam(value = "state id of the IndentIssue ") @RequestParam(value = "stateId", required = false) Long stateId,
			@Min(0) @Max(100) @ApiParam(value = "Number of records returned.", defaultValue = "20") @RequestParam(value = "pageSize", required = false, defaultValue = "20") Integer pageSize,
			@ApiParam(value = "Page number", defaultValue = "1") @RequestParam(value = "pageNumber", required = false, defaultValue = "1") Integer pageNumber,
			@ApiParam(value = "This takes any field from the Object seperated by comma and asc,desc keywords. example name asc,code desc or name,code or name,code desc", defaultValue = "id") @RequestParam(value = "sortBy", required = false, defaultValue = "id") String sortBy);

	@ApiOperation(value = "Update any of the indent issues.", notes = "This API is invoked to update the indent material issue information and during the workflow as well.", response = MaterialIssueResponse.class, tags = {
			"Indent Issue", })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "IndentIssue updated Successfully", response = MaterialIssueResponse.class),
			@ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })

	@RequestMapping(value = "/materailIssues/_update", produces = {
			"application/json" }, consumes = {
					"application/json" }, method = RequestMethod.POST)
	ResponseEntity<MaterialIssueResponse> materailIssuesUpdatePost(
			@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,
			@ApiParam(value = "common Request info") @Valid @RequestBody MaterialIssueRequest indentIssueRequest);

}
