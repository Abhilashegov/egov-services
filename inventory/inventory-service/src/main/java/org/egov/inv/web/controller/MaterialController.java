package org.egov.inv.web.controller;import org.egov.common.contract.request.RequestInfo;import org.egov.common.contract.response.ResponseInfo;import org.egov.inv.domain.model.AuditDetails;import org.egov.inv.domain.service.InventoryUtilityService;import org.egov.inv.domain.service.MaterialService;import org.egov.inv.web.contract.MaterialRequest;import org.egov.inv.web.contract.MaterialResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;import java.util.List;@RestController@RequestMapping("/materials")public class MaterialController {    private InventoryUtilityService inventoryUtilityService;    private MaterialService materialService;    public static final String SEQ_MATERIAL = "seq_material";    @Autowired    public MaterialController(InventoryUtilityService inventoryUtilityService,                              MaterialService materialService) {        this.inventoryUtilityService = inventoryUtilityService;        this.materialService = materialService;    }    @PostMapping("/_create")    public MaterialResponse create(@RequestBody @Valid MaterialRequest materialRequest,                                   @RequestParam(value = "tenantId") String tenantId) {        List<Long> materialIdList = inventoryUtilityService.getIdList(materialRequest.getMaterials().size(), SEQ_MATERIAL);        for (int i = 0; i <= materialIdList.size() - 1; i++) {            materialRequest.getMaterials().get(i)                    .setId(materialIdList.get(i).toString());            materialRequest.getMaterials().get(i).                    setAuditDetails(mapAuditDetails(materialRequest.getRequestInfo(), tenantId));        }        materialService.save(materialRequest);        return buildMaterialResponse(materialRequest);    }    private MaterialResponse buildMaterialResponse(MaterialRequest materialRequest) {        return MaterialResponse.builder()                .responseInfo(getResponseInfo(materialRequest.getRequestInfo()))                .materials(materialRequest.getMaterials())                .build();    }    private ResponseInfo getResponseInfo(RequestInfo requestInfo) {        return ResponseInfo.builder()                .apiId(requestInfo.getApiId())                .ver(requestInfo.getVer())                .resMsgId(requestInfo.getMsgId())                .resMsgId("placeholder")                .status("placeholder")                .build();    }    private AuditDetails mapAuditDetails(RequestInfo requestInfo, String tenantId) {        return AuditDetails.builder()                .createdBy(requestInfo.getUserInfo().getId().toString())                .lastModifiedBy(requestInfo.getUserInfo().getId().toString())                .createdTime(requestInfo.getTs())                .lastModifiedTime(requestInfo.getTs())                .tenantId(tenantId)                .build();    }}