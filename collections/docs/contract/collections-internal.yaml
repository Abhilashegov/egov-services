swagger: "2.0"
info:
  version: 0.0.0
  title: eGov Collection System  
  description: Collection Management System serves as revenue collection platform for all the billing systems through cash, cheque, dd, swipe machine. It also provides facility to integrate with multiple payment gateways in order to enable online payments. It is also integrated with financial system to post the ledger entries for every single receipt generated in the collection system.

host: phoenix-qa.egovernments.org
schemes:
  - https
basePath: '/v1/[API endpoint]'

paths: 
  /businessCategory/_search:
    post: 
      summary: Get the list of Business Category for the given tenantid.
      description: Provides a list of acceptable Business Categories. These Business Categories are unique to each tenant.
      parameters:
       -  name: requestInfo
          in: body
          description: Commmon request info for getting business categories.
          required: true
          schema:
            $ref: '#/definitions/RequestInfo'
       -  name: businessCategoryName
          in: query
          required: false
          description: The unique name of the Business Category.
          type: string
          minLength: 0
          maxLength: 64
          exclusiveMinimum: true
          exclusiveMaximum: false
       -  name: active
          in: query
          description: True will be set in cases where only active users are needed and False will be set when inactive users are needed and no value will be set when all users are needed.
          required: false
          type: boolean
          format: varchar
          default: true
          allowEmptyValue: true
       -  $ref: '#/parameters/tenantId'
       -  $ref: '#/parameters/fields'
       -  $ref: '#/parameters/sort'
       -  name: id
          in: query
          description: List of Unique Id of Business Category
          required: false
          type: array
          items:
            type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          schema:
            $ref: "#/definitions/BusinessCategoryRes"
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: '#/definitions/ErrorRes'
      tags: 
       - Business Category
  
  /businessCategory/_create:     
    post:
      summary: Create Business Category for the given tenentId.
      description: Create new Business Category with all the required parameters.
      parameters:
        - name: businessCategory
          in: body
          description: New Business Category Details.
          required: true
          schema:
            $ref: '#/definitions/BusinessCategoryReq'
      responses:
        '201':
          description: Business Category created sucessfully.
          schema:
            $ref: '#/definitions/BusinessCategoryRes'
        '400':
          description: tenantId was not provided or General service error
          schema:
            $ref: '#/definitions/ErrorRes'
      tags:
        - Business Category
        
  /businessCategory/{businessCategoryCode}/_update:
    parameters:
      - $ref: '#/parameters/businessCategoryCode'
    post:
      summary: Update existing Business Category.
      description: To update an existing business category details and to activate/deactivate business category.
      parameters:
        - name: businessCategory
          in: body
          description: Request header for the business category with new set of values.
          required: true
          schema:
            $ref: '#/definitions/BusinessCategoryReq'
      responses:
        '200':
          description: Business Category updated.
          schema:
            $ref: '#/definitions/BusinessCategoryRes'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ErrorRes'
      tags:
        - Business Category
        
  /businessDetails/_search:
    post: 
      summary: Business Details List.
      description: Get the list of Business Details based on input parameters.
      parameters:
       -  name: request_info
          in: body
          description: Commmon request info for getting business details.
          required: true
          schema:
            $ref: '#/definitions/RequestInfo'
       -  name: businessDetailsCode
          in: query
          required: false
          description: The unique business details Code.
          type: string
          minLength: 0
          maxLength: 64
          exclusiveMinimum: true
          exclusiveMaximum: false
       -  name: active
          in: query
          description: True will be set in cases where only active business details are needed and
            False will be set when inactive business details are needed and no value will
            be set when all business details are needed.
          required: false
          type: boolean
          format: varchar
          default: true
          allowEmptyValue: true      
       -  $ref: '#/parameters/pageSize'
       -  $ref: '#/parameters/pageNumber'
       -  $ref: '#/parameters/tenantId'
       -  $ref: '#/parameters/sort'
       -  name: id
          in: query
          description: List of Unique Id of User
          required: false
          type: array
          items:
            type: integer
          format: int64
       -  name: businessCategoryCode
          in: query
          required: false
          description: Code of Business Category.
          type: string
          minLength: 0
          maxLength: 50
          exclusiveMinimum: true
          exclusiveMaximum: false    
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/BusinessDetailsRes'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ErrorRes'
      tags: 
       - Business Details
  /businessDetails/_create:     
    post:
      summary: Create Business Details.
      description: Create new Business Details with all the required parameters.
      parameters:
        - name: businessDetails
          in: body
          description: Business Details.
          required: true
          schema:
            $ref: '#/definitions/BusinessDetailsReq'
      responses:
        '201':
          description: Business Details created sucessfully.
          schema:
            $ref: '#/definitions/BusinessDetailsRes'
        '400':
          description: Invalid input.
      tags:
        - Business Details
        
  /businessDetails/{businessDetailsCode}/_update:
    parameters:
      - $ref: '#/parameters/businessDetailsCode'
    post:
      summary: Update Business Details.
      description: To update an existing business details and to activate/deactivate business details.
      parameters:
        - name: businessDetails
          in: body
          description: Request header for the business details with new set of values.
          required: true
          schema:
            $ref: '#/definitions/BusinessDetailsReq'
      responses:
        '200':
          description: Business Details updated.
          schema:
            $ref: '#/definitions/BusinessDetailsRes'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ErrorRes'
      tags:
        - Business Details
        
  
  /receipts/_search:
    post:
      summary: Get the receipt(s) info for the billnumbers/instrument numbers/receipt numbers and business details.
      description: This API returns list of receipts created for the given servicecode and list of billNumbers/instrument numbers/receipt numbers.
      parameters:
        - name: request_info
          in: body
          description: Request to get the BillReceiptInfo for the given business details code and bill number(s).
          required: true
          schema:
            $ref: '#/definitions/RequestInfo'
        - $ref: '#/parameters/tenantId'
        - name: billNumbers
          in: query
          required: false
          description: List of bill numbers.
          type: array
          items:
            type: string
        - name: instrumentNumbers
          in: query
          required: false
          description: List of instrument numbers.
          type: array
          items:
            type: string
        - name: receiptNumbers
          in: query
          required: false
          description: List of receipt numbers.
          type: array
          items:
            type: string
        - name: serviceCode
          in: query
          required: true
          description: The unique Business Service Details code.
          type: string
          minLength: 0
          maxLength: 64
          exclusiveMinimum: true
          exclusiveMaximum: false    
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/BillReceiptInfoRes'
        '400':
          description: Invalid input.
          schema:
            $ref: '#/definitions/ErrorRes'
      tags:
        - Receipt
  
  /receipt/_create:
    post:
      summary: Validate and persist receipt without receipt number.
      description: This API generates a receipt number and persists the receipt with status as "PENDING" and pushes the receipt information to elasticsearch. The receipt details passed, in the bill, will be apportioned by the billing system based on the amount citizen is likely to pay.
      parameters:
        - name: billInfo
          in: body
          description: Receipt Creation Details passed as base64 encoded xml for example 
            <serviceCode>PT</serviceCode>
            <fundCode>01</fundCode>
            <functionaryCode>1</functionaryCode>
            <fundSourceCode>01</fundSourceCode>
            <departmentCode>REV</departmentCode>
            <displayMessage>Property Tax Collection</displayMessage>
            <paidBy>Nazeer Ahmed</paidBy>
            <partPaymentAllowed>1</partPaymentAllowed>
            <callbackForApportioning>1</callbackForApportioning>
            <overrideAccountHeadsAllowed>0</overrideAccountHeadsAllowed>
            <collectionType>F</collectionType>
            <collectionModeNotAllowed></collectionModeNotAllowed>
            <payees>
              <payee>
                <payeeName>Nazeer Ahmed</payeeName>
                <payeeAddress>61/8, chidambara rao veedhi, Kurnool, </payeeAddress>
                <payeeEmail></payeeEmail>
                <bills>
                    <bill refNo="694080" billDate="13/03/2017" consumerCode="1016029268">
                      <description>Property Tax Assessment Number 1016029268</description>
                      <consumerType>Private</consumerType>
                      <boundaryNum>9999</boundaryNum>
                      <boundaryType>Ward</boundaryType>
                      <totalAmount>10275</totalAmount>
                      <minimumAmount>0</minimumAmount>
                      <accounts>
                        <account glCode="1402002" order="55" description="Penalty Fines-2014-2015-1" isActualDemand="1" purpose="ARREAR_LATEPAYMENT_CHARGES">
                        <crAmount>226</crAmount>
                        <drAmount>0</drAmount>
                        <functionCode>9100</functionCode>
                      </account>
                      <account glCode="1100101" order="68" description="General Tax-2016-2017-1" isActualDemand="1" purpose="CURRENT_AMOUNT">
                        <crAmount>381</crAmount>
                        <drAmount>0</drAmount>
                        <functionCode>9100</functionCode>
                      </account>
                    </accounts>
                  </bill>
                </bills>
              </payee>
            </payees>
            along with common request info. 
          required: true
          schema:
            $ref: '#/definitions/PendingReceiptReq'
      tags:
        - Receipt  
      responses:
        '201':
          description: Receipt created sucessfully.
          schema:
            $ref: '#/definitions/BillReceiptInfoRes'
        '400':
          description: Invalid input.
  
  /receipt/_update:  
    post:
      summary: Update Receipt.
      description: This API updates receipt along with Instrument information. It also creates a voucher in Financial system based on configuration, if enabled. The created receipt goes through the workflow(if any) and pushes the receipt information to the elasticsearch index. Collection system will send the receipt number and link to generate receipt as a response. 
      parameters:
        - name: receiptnumber
          in: query
          required: true
          description: The unique receipt number.
          type: string
          minLength: 0
          maxLength: 50
        - name: billInfo
          in: body
          description: Receipt Creation Details passed as base64 encoded xml along with common request info.
          required: true
          schema:
            $ref: '#/definitions/CreateReceiptReq'
      tags:
        - Receipt  
      responses:
        '201':
          description: Receipt created sucessfully.
          schema:
            $ref: '#/definitions/BillReceiptInfoRes'
        '400':
          description: Invalid input. 

definitions:
  PendingReceiptReq:
    type: object
    description: Base64 encoded Bill XML with Request Info.
    properties:
      tenantId:
        type: string
        description: Unique id of tenant.
        format: varchar
      RequestInfo:
        $ref: '#/definitions/RequestInfo'
      receiptType:
        type: string
        enum:
           - COUNTER
           - FIELD
           - ONLINE
      BillInfo:
        $ref: '#/definitions/BillInfo'

  
  CreateReceiptReq:
    type: object
    description: Base64 encoded Bill XML.
    properties:
      tenantId:
        type: string
        description: Unique id of tenant.
        format: varchar
      RequestInfo:
        $ref: '#/definitions/RequestInfo'
      receiptType:
        type: string
        enum:
           - COUNTER
           - FIELD
           - ONLINE
      paymentInfoCash:
        $ref: '#/definitions/PaymentInfoCash'
      paymentInfoCard:
        $ref: '#/definitions/PaymentInfoCard'
      paymentInfoOnline:
        $ref: '#/definitions/PaymentInfoOnline'    
      paymentInfoCheque:
        type: array
        items:
          $ref: '#/definitions/PaymentInfoCheque'
      paymentInfoDD:
        type: array
        items:
          $ref: '#/definitions/PaymentInfoDD'
      paymentInfoBank:
        type: array
        items:
          $ref: '#/definitions/PaymentInfoBank'
          

  PaymentInfoCash:
    title: Payment information for the instrument type cash.
    description: This object is subclass of 'PaymentInfo' object for the instrument type cash.
    type: object
    properties:
      instrumentAmount:
        type: number
        format: double
        description: Amount of instrument.
  
  PaymentInfoCheque:
    title: Payment information for the instrument type cheque.
    description: This object is subclass of 'PaymentInfo' object for the instrument type cheque.
    type: object
    properties:
      instrumentAmount:
        type: number
        format: double
        description: Amount of instrument.
      bankCode:
        type: string
        description: Code of the Bank.
      branchName:
        type: string
        description: Name of the bank branch.
      chequeDate:
        type: string
        format: date
        description: Cheque date.
      chequeNumber:
        type: string
        description: Cheque number.
    required:
      - bankCode
      - branchName
      - chequeDate
      - chequeNumber    
  
  PaymentInfoDD:
    title: Payment information for the instrument type dd.
    description: This object is subclass of 'PaymentInfo' object for the instrument type dd.
    type: object
    properties:
      instrumentAmount:
        type: number
        format: double
        description: Amount of instrument.
      bankCode:
        type: string
        description: Code of the Bank.
      branchName:
        type: string
        description: Name of the bank branch.
      ddDate:
        type: string
        format: date
        description: DD date.
      ddNumber:
        type: string
        description: DD number.
    required:
      - bankCode
      - branchName
      - ddDate
      - ddNumber
      
  
  PaymentInfoBank:
    title: Payment information for the instrument type bank.
    description: This object is subclass of 'PaymentInfo' object for the instrument type bank.
    type: object
    properties:
      instrumentAmount:
        type: number
        format: double
        description: Amount of instrument.
      bankCode:
        type: string
        description: Code of the Bank.
      accountNumber:
        type: string
        description: Bank Account number to which the amount is deposited.
      transactionDate:
        type: string
        format: date
        description: Date on which the amount is deposited to bank account.
      transactionNumber:
        type: string
        description: Bank transaction number.
    required:
      - bankCode
      - accountNumber
      - transactionDate
      - transactionNumber
      
  PaymentInfoCard:
    title: Payment information for the instrument type card.
    description: This object is subclass of 'PaymentInfo' object for the instrument type card.
    type: object
    properties:
      instrumentAmount:
        type: number
        format: double
        description: Amount of instrument.
      instrumentNumber:
        type: string
        description: Card number.
      transactionNumber:
        type: string
        description: Transaction number of POS.
      expiryMonth:
        type: string
        description: Card expiry month.
      exiryYear:
        type: string
        description: Card expiry year.
      cvvNumber:
        type: string
        description: CVV number of card.
        
  PaymentInfoOnline:
    title: Payment information for the instrument type card.
    description: This object is subclass of 'PaymentInfo' object for the instrument type card.
    type: object
    properties:
      instrumentAmount:
        type: number
        format: double
        description: Amount of instrument.
      paymentGatewayCode:
        type: string
        description: Code of the payment gateway to which the payment request has to be redirected.
        
  BillInfo:
    type: object
    properties:
      businessDetailsCode:
        type: string
        description: BusinessDetails code.
      fund:
        type: string
        description: Fund code.
      functionary:
        type: string
        description: Functionary code.
      fundSource:
        type: string
        description: Fund source code.
      department:
        type: string
        description: Department code.
      displayMessage:
        type: string
        description: Remarks to be displayed on receipt.
      paidBy:
        type: string
        description: Paid by person name.
      partPaymentAllowed:
        type: boolean
        description: Part payment is allowed if the value is True, otherwise part payment is not allowed.
      callbackForApportioning:
        type: boolean
        description: Callback billing system if the value is True, else use default apportioning logic provided by collections.
      overrideAccountHeadsAllowed:
        type: boolean
        description: Override account heads is allowed if the value is True, not allowed otherwise.
      transactionReferenceNumber:
        type: string
        description: To be used by third party applications to send the transaction id generated at their end.
      source:
        type: string
        description: To be used by third party applications, to send the source name.
      collectionModesNotAllowed:
        type: array
        items: 
          type: string
        description: List of collection modes not allowed.
      collectionType:
        type: array
        description: Type of collection.
        items:
          type: string
          enum:
           - COUNTER
           - FIELD
           - ONLINE
      payees:
        type: array
        items:
          $ref: '#/definitions/BillPayeeDetails'
  
  BillPayeeDetails:
    type: object
    properties:
      payeeName:
        type: string
        description: Consumer name defined in bill.
      payeeAddress:
        type: string
        description: Consumer address defined in bill.
      payeeEmail:
        type: string
        description: Consumer email defined in bill.
      billDetails:
        type: array
        items:
          $ref: '#/definitions/BillDetails'
  
  BillDetails:
    type: object
    properties:
      refNo:
        type: string
        description: Bill number.
      billDate:
        type: string
        format: date
        description: Bill date.
      consumerCode:
        type: string
        description: Consumer code defined in bill.
      consumerType:
        type: string
        description: Consumer type defined in bill.
      boundaryNumber:
        type: string
        description: Boundary code of the consumer defined in bill.
      boundaryType:
        type: string
        description: Boundary type of the consumer defined in bill.
      billDescription:
        type: string
        description: Summarized bill description.
      minimumAmount:
        type: number
        format: double
        description: Minimum bill amount to be paid.
      totalAmount:
        type: number
        format: double
        description: Total bill amount to be paid.
      billAccountDetails:
        type: array
        items:
          $ref: '#/definitions/BillAccountDetails'
  
  BillAccountDetails:
    type: object
    properties:
      glcode:
        type: string
        description: Chart of account code.
      order:
        type: integer
        format: int32
        description : Order number used for apportioning amount in case of part payment.
      accountDescription:
        type: string
        description : Account description to be printed on receipt.
      creditAmount:
        type: number
        format: double
        description: Credit account head amount.
      debitAmount:
        type: number
        format: double
        description: Debit account head amount.
      functionCode:
        type: string
        description: Funtion Code
      isActualDemand:
        type: boolean
        description: True for tax/charges/penalty. False for advances(if any).
      purpose:
        type: array
        description: Purpose of Account head.
        items:
          type: string
          enum:
           - ARREAR_AMOUNT
           - CURRENT_AMOUNT
           - ADVANCE_AMOUNT
           - ARREAR_LATEPAYMENT_CHARGES
           - CURRENT_LATEPAYMENT_CHARGES
           - CHEQUE_BOUNCE_PENALTY
           - REBATE
           - OTHERS
        
        
  BillReceiptInfo:
    type: object
    properties:
      billNumber: 
        type: string
        description: This is the Bill Number sent to Collection system in billInfoXML.
      event: 
        type: string
        description: CREATED, CANCELLED, INSTRUMENT_BOUNCED
      receiptNumber:
        type: string
        description: Receipt Number generated in Collection system.
      receiptDate:
        type: string
        format: date
        description: Receipt Date.
      payeeName:
        type: string
        description: Consumer name sent in billInfoXML.
      payeeAddress:
        type: string
        description: Consumer address sent in billInfoXML.
      businessName:
        type: string
        description: Name of the billing service.
      paidBy:
        type: string
        description: Name of the payee at the counter/online.
      billDescription: 
        type: string
        description: Description sent in billInfoXML.
      accountDetails:
        type: array
        items:
         $ref: "#/definitions/ReceiptAccountInfo"
      tenantId:
        type: string
        description: Unique id of tenant.
        format: varchar
  
  ReceiptAccountInfo:
    type: object
    properties:
      glCode: 
        type: string
        description: GLCode sent in billInfoXML.
      accountDescrtion:
        type: string
        description: Description of GlCode sent in billInfoXML.
      functionCode:
        type: string
        description: Function Code sent in billInfoXML.
      debitAmount:
        type: number
        format: double
        description: Discount/Rebate/Received Amount.
      creditAmount:
        type: number
        format: double
        description: Receivable Amount.
      orderNumber:
        type: integer
        format: int32
        description: Order number of the receivables.
      purpose:
        type: string
        description: Purpose of account head i.e., ARREAR_AMOUNT, CURRENT_AMOUNT, ADVANCE_AMOUNT, ARREAR_LATEPAYMENT_CHARGES, CURRENT_LATEPAYMENT_CHARGES, CHEQUE_BOUNCE_PENALTY, REBATE, OTHERS
  
  BillReceiptInfoRes:      
    type: object
    properties:
      ResponseInfo:
        $ref: '#/definitions/ResponseInfo'
      BillReceiptInfo:
        type: array
        items: 
         $ref: '#/definitions/BillReceiptInfo'  
      
  BusinessCategory:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Unique identifier of the Business Category.
      code:
        type: string
        description: The unique code for an Business Category.
      name:
        type: string
        description: Name of the Business Category
      active:
        type: boolean
        description: True if Active, False if inactive.
      tenantId:
        type: string
        description: Unique id of tenant.
        format: varchar
    required:
     - code
     - name
     - active
     
  BusinessCategoryReq:
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id of tenant.
        format: varchar
      RequestInfo:
        $ref: '#/definitions/RequestInfo'
      BusinessCategoryInfo:
        $ref: '#/definitions/BusinessCategory'
    required:
     - tenantId    
  
  BusinessCategoryRes:
    type: object
    properties:
      ResponseInfo:
        $ref: '#/definitions/ResponseInfo'
      BusinessCategoryInfo:
        type: array
        items: 
         $ref: '#/definitions/BusinessCategory'
      
     
  BusinessDetails:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Unique identifier of the Business Details.
      code:
        type: string
        description: The unique code for an Business Details.  
      name:
        type: string
        description: Name of the Business Details
      active:
        type: boolean
        description: True if Active, False if inactive.
      businessCategory:
        type: object
        description: Business category to which this business belongs to.
        items:
          $ref: "#/definitions/BusinessCategory"  
      businessType:
        type: string
        description: Type of Service i.e., (A)Adhoc Service, (B)Bill Based Service, (C)Challan Based Service, (P)Payment Service.
      serviceUrl:
        type: string
        description: Define the URL of the payment gateway.
      voucherCreation:
        type: boolean
        description: True:Create voucher on receipt creation for the receipts with servicetype A,B,C.
      isVoucherApproved:
        type: boolean
        description: If the voucher creation is True, then voucher should be created in approved state or has to go through workflow.
      voucherCutoffDate:
        type: string
        format: date
        description: If the voucher creation is True, then create the voucher for the receipts starting with this date.
      ordernumber:
        type: integer
        description: order of hierarchy can be defined as a numeric value. Highest will have value 1.
      tenantId:
        type: string
        description: Unique id of tenant.
        format: varchar
    required:
     - code
     - name
     - active
     - businessCategory
     - businessType
     - ordernumber
  BusinessDetailsReq:
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id of tenant.
        format: varchar
      RequestInfo:
        $ref: '#/definitions/RequestInfo'
      BusinessDetailsInfo:
        $ref: '#/definitions/BusinessDetails'
  
  BusinessDetailsRes:
    type: object
    properties:
      ResponseInfo:
        $ref: '#/definitions/ResponseInfo'
      BusinessDetailsInfo:
        type: array
        items: 
         $ref: '#/definitions/BusinessDetails'
  
  RequestInfo:
    type: object
    properties:
      apiId:
        type: string
        description: unique API ID
      ver:
        type: string
        description: API version
      ts:
        type: string
        description: >-
          response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to
          +5.30)
      action:
        type: string
        description: api action like GET/POST/PUT/DELETE in case of http calls
      did:
        type: string
        description: device UUID from which API is called
      key:
        type: string
        description: API key (dynamic)
      msgId:
        type: string
        description: 'unique request message id, UUID, for handling API idempotency'
      requesterId:
        type: string
        description: UserId of the user calling
      authToken:
        type: string
        description: //session/jwt/saml token/oauth token
    required:
      - apiId
      - ver
      - ts   
  ResponseInfo:
    type: object
    properties:
      apiId:
        type: string
        description: unique API ID
      ver:
        type: string
        description: API version
      ts:
        type: string
        description: >-
          response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to
          +5.30)
      resMsgId:
        type: string
        description: unique response message id (UUID)
      msgId:
        type: string
        description: message id of the request
      status:
        type: string
        description: 'status of request e.g. successful, failed etc'
    required:
      - apiId
      - ver
      - ts
      - status
      
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      description:
        type: string
      fields:
        type: object
    required:
      - code
      - message
  ErrorRes:
    properties:
      ResponseInfo:
        $ref: '#/definitions/ResponseInfo'
      Error:
        $ref: '#/definitions/Error'
    type: object
parameters:
  businessDetailsCode:
    name: businessDetailsCode
    in: path
    required: true
    description: Code of Business Category.
    type: string
    minLength: 0
    maxLength: 50
    exclusiveMinimum: true
    exclusiveMaximum: false  
  businessCategoryCode:
    name: businessCategoryCode
    in: path
    required: true
    description: Code of Business Category.
    type: string
    minLength: 0
    maxLength: 50
    exclusiveMinimum: true
    exclusiveMaximum: false
  tenantId:
    name: tenantId
    in: query
    description: Unique id of tenant.
    required: true
    type: string
    format: varchar
  fields:
    name: fields
    in: query
    description: Specific fields can be specified per search, can be decalred multiple times comma delimited like field1, field2.... If nothing is passed as Fields, all fields are returned.
    required: false
    type: string
    format: varchar
  sort:
    name: sort
    in: query
    description: This param sorts the result by the fields specified as the parameter value. Fields can be provided as a comma separated string. By  default, sorting is done in ascending fashion. Appending :desc to a column will invert the ordering for that column. if nothing is passed it will assume service serviceName in ascending order for  default sorting. For example, with a sort string **sort=field1,field2:desc,field3, the table will be sorted in ascending order by field1, in descending order by field2, and in ascending order by field3.**
    required: false
    type: string
    format: varchar
  pageSize:
    name: pageSize
    in: query
    description: Number of records returned.
    type: integer
    minimum: 0
    exclusiveMinimum: true
    maximum: 100
    exclusiveMaximum: false
    multipleOf: 10
    default: 20
  pageNumber:
    name: pageNumber
    in: query
    description: Page number
    type: integer
    default: 1  