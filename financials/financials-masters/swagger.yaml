# Financials Version 1 API
swagger: '2.0'

# This is your document metadata
info:
  version: "1.0.0"
  title: Financial Management System APIs
  description: All APIs available in the system are defined here.
  contact:
    name: Manikanta PT
schemes:
  - https
  - http
basePath: '/egf-masters'
paths:
    /banks/_search:
      post:
        summary: Get the list of banks
        description: banks
        tags: 
          - Masters
          - Bank
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: code
            type: string
            in: query
            description: code of the Bank
            maxLength: 50
          - name: name
            type: string
            in: query
            description: name of the Bank
            maxLength: 100
          - name: active
            type: boolean
            in: query
            description: Whether Bank is Active or not. If the value is TRUE, then Bank is active,If the value is FALSE then Bank is inactive,Default value is TRUE
          - name: type
            type: string
            in: query
            description: type of the Bank
            maxLength: 50
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Bank retrieved Successfully
            schema:
              $ref: '#/definitions/BankResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /banks/_create:
      post:
        summary: Create  new  banks
        description: Create  new banks
        tags: 
          - Masters
          - Bank
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: bankRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/BankRequest'
        responses:
          200:
            description: Bank created Successfully
            schema:
              $ref: '#/definitions/BankResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /banks/{id}/_update:
      post:
        summary: Update any of the banks
        description: Update any of the banks
        tags: 
          - Masters
          - Bank
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the Bank
            required: true
            type: integer
            format: int64
          - name: bankRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/BankRequest'
        responses:
          200:
            description: Bank updated Successfully
            schema:
              $ref: '#/definitions/BankResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailtypes/_search:
      post:
        summary: Get the list of accountdetailtypes
        description: accountdetailtypes refers to the subledger types in the system
        tags: 
          - Masters
          - AccountDetailType
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: name
            type: string
            in: query
            description: name of the DetailType
            maxLength: 50
          - name: description
            type: string
            in: query
            description: description of the AccountDetailType
            maxLength: 50
          - name: active
            type: boolean
            in: query
            description: Whether AccountDetailType is Active or not. If the value is TRUE, then AccountDetailType is active,If the value is FALSE then AccountDetailType is inactive,Default value is TRUE
          - name: fullyQualifiedName
            type: string
            in: query
            description: fully qualified name of the AccountDetailType
            maxLength: 250
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: AccountDetailType retrieved Successfully
            schema:
              $ref: '#/definitions/AccountDetailTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailtypes/_create:
      post:
        summary: Create  new  accountdetailtypes
        description: Create  new accountdetailtypes
        tags: 
          - Masters
          - AccountDetailType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountDetailTypeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/AccountDetailTypeRequest'
        responses:
          200:
            description: AccountDetailType created Successfully
            schema:
              $ref: '#/definitions/AccountDetailTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailtypes/{id}/_update:
      post:
        summary: Update any of the accountdetailtypes
        description: Update any of the accountdetailtypes
        tags: 
          - Masters
          - AccountDetailType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the AccountDetailType
            required: true
            type: integer
            format: int64
          - name: accountDetailTypeRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/AccountDetailTypeRequest'
        responses:
          200:
            description: AccountDetailType updated Successfully
            schema:
              $ref: '#/definitions/AccountDetailTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailkeys/_search:
      post:
        summary: Get the list of accountdetailkeys
        description: accountdetailkey refers to the subledger entities added to financial system
        tags: 
          - Masters
          - AccountDetailKey
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: key
            type: integer
            format: int64
            in: query
            description: Id of the subledger entity is referred as key .
          - name: accountDetailType
            type: integer
            format: int64
            in: query
            description: account detail type (Subledger type )
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: AccountDetailKey retrieved Successfully
            schema:
              $ref: '#/definitions/AccountDetailKeyResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailkeys/_create:
      post:
        summary: Create  new  accountdetailkeys
        description: Create  new accountdetailkeys
        tags: 
          - Masters
          - AccountDetailKey
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: accountDetailKeyRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/AccountDetailKeyRequest'
        responses:
          201:
            description: AccountDetailKey created Successfully
            schema:
              $ref: '#/definitions/AccountDetailKeyResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /accountdetailkeys/{id}/_update:
      post:
        summary: Update any of the accountdetailkeys
        description: Update any of the accountdetailkeys
        tags: 
          - Masters
          - AccountDetailKey
        parameters:
          - name: tenantId
            in: query
            description: Unique id for  a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the AccountDetailKey
            required: true
            type: integer
            format: int64
          - name: accountDetailKeyRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/AccountDetailKeyRequest'
        responses:
          200:
            description: AccountDetailKey updated Successfully
            schema:
              $ref: '#/definitions/AccountDetailKeyResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
definitions:
    Bank:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Bank
        code:
          type: string
          description: code of the Bank
          maxLength: 50
          minLength: 1
        name:
          type: string
          description: name of the Bank
          maxLength: 100
          minLength: 2
        description:
          type: string
          description: description of the Bank
          maxLength: 250
        active:
          type: boolean
          description: Whether Bank is Active or not. If the value is TRUE, then Bank is active,If the value is FALSE then Bank is inactive,Default value is TRUE
        type:
          type: string
          description: type of the Bank
          maxLength: 50
      required:
      - code
      - name
      - active
      - type
    BankRequest:
      description: Contract class to receive request. Array of Bank items  are used in case of create . Where as single Bank item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        banks:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/definitions/Bank'
        bank:
          $ref: '#/definitions/Bank'
    BankResponse:
      description: Contract class to send response. Array of Bank items  are used in case of search results or response for create. Where as single Bank item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        banks:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/definitions/Bank'
        bank:
          $ref: '#/definitions/Bank'
        page:
          $ref: '#/definitions/Page'
    AccountDetailType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the AccountDetailType
        name:
          type: string
          description: name of the AccountDetailType
          maxLength: 50
          minLength: 1
        description:
          type: string
          description: description of the AccountDetailType
          maxLength: 50
          minLength: 1
        tableName:
          type: string
          description: table name of the AccountDetailType
          maxLength: 25
        active:
          type: boolean
          description: Whether AccountDetailType is Active or not. If the value is TRUE, then AccountDetailType is active,If the value is FALSE then AccountDetailType is inactive,Default value is TRUE
        fullyQualifiedName:
          type: string
          description: fully qualified name of the AccountDetailType
          maxLength: 250
          minLength: 1
      required:
      - name
      - description
      - active
    AccountDetailTypeRequest:
      description: Contract class to receive request. Array of AccountDetailType items  are used in case of create . Where as single AccountDetailType item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        accountDetailTypes:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/definitions/AccountDetailType'
        accountDetailType:
          $ref: '#/definitions/AccountDetailType'
    AccountDetailTypeResponse:
      description: Contract class to send response. Array of AccountDetailType items  are used in case of search results or response for create. Where as single AccountDetailType item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        accountDetailTypes:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/definitions/AccountDetailType'
        accountDetailType:
          $ref: '#/definitions/AccountDetailType'
        page:
          $ref: '#/definitions/Page'
    AccountDetailKey:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the AccountDetailKey
        key:
          type: integer
          format: int64
          description: key of the AccountDetailKey
        accountDetailType:
          $ref: "#/definitions/AccountDetailType"
      required:
      - accountDetailType
    AccountDetailKeyRequest:
      description: Contract class to receive request. Array of AccountDetailKey items  are used in case of create . Where as single AccountDetailKey item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        accountDetailKeys:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/definitions/AccountDetailKey'
        accountDetailKey:
          $ref: '#/definitions/AccountDetailKey'
    AccountDetailKeyResponse:
      description: Contract class to send response. Array of AccountDetailKey items  are used in case of search results or response for create. Where as single AccountDetailKey item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        accountDetailKeys:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/definitions/AccountDetailKey'
        accountDetailKey:
          $ref: '#/definitions/AccountDetailKey'
        page:
          $ref: '#/definitions/Page'
    ResponseInfo:
     type: object
     properties:
      resMsgId:
       type: string
       description: res msg id of the ResponseInfo
      status:
       type: string
       description: status of the ResponseInfo
      apiId:
       type: string
       description: api id of the ResponseInfo
      ver:
       type: string
       description: ver of the ResponseInfo
      ts:
       type: string
       format: date
       description: ts of the ResponseInfo
      key:
       type: string
       description: key of the ResponseInfo
      tenantId:
       type: string
       description: tenant id of the ResponseInfo
    RequestInfo:
     type: object
     properties:
      action:
       type: string
       description: action of the RequestInfo
      did:
       type: string
       description: did of the RequestInfo
      msgId:
       type: string
       description: msg id of the RequestInfo
      requesterId:
       type: string
       description: requester id of the RequestInfo
      authToken:
       type: string
       description: auth token of the RequestInfo
      apiId:
       type: string
       description: api id of the RequestInfo
      ver:
       type: string
       description: ver of the RequestInfo
      ts:
       type: string
       format: date
       description: ts of the RequestInfo
      key:
       type: string
       description: key of the RequestInfo
      tenantId:
       type: string
       description: tenant id of the RequestInfo
    ErrorResponse:
     type: object
     properties:
      responseInfo:
        $ref: "#/definitions/ResponseInfo"
      error:
        $ref: "#/definitions/Error"
    Error:
     type: object
     properties:
      code:
       type: integer
       format: int32
       description: Code of the Error
      message:
       type: string
       description: Message of the Error
      description:
       type: string
       description: Description of the Error
      filelds:
       type: array
       description: Filelds of the Error
       items:
         $ref: "#/definitions/FieldError"
    FieldError:
     type: object
     properties:
      code:
       type: string
       description: Code of the FieldError
      description:
       type: string
       description: Description of the FieldError
    Page:
     type: object
     properties:
      totalResults:
        type: integer
        format: int32
        description: total results of the Pagination
      totalPages:
        type: integer
        format: int32
        description: total pages of the Pagination
      pageSize:
        type: integer
        format: int32
        description: Number of records in a per page in  the Pagination, Default value is 20
      currentPage:
        type: integer
        format: int32
        description: current page of the Pagination
      offSet:
        type: integer
        format: int32
        description: page number of the Pagination, Default value is 0  
