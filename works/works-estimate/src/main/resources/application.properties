server.port=8080
server.context-path=/works-estimate

persist.through.kafka=yes

fetch_data_from=db

app.timezone=UTC

spring.datasource.driver-class-name=org.postgresql.Driver
 
spring.datasource.url=jdbc:postgresql://localhost:5432/works-estimate
 
spring.datasource.username=postgres
spring.datasource.password=postgres

flyway.user=postgres
flyway.password=postgres
#flyway.outOfOrder=true
flyway.table=works_estimate_schema_version
flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://localhost:5432/works
flyway.locations=db/migration/main,db/migration/seed,db/migration/dev

works.estimate.host.url=http://localhost:8080
egov.services.works.estimate.pageNumber.default=1
egov.services.works.estimate.pageSize.default=25
egov.services.works.estimate.pagesize.max=500

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

logging.level.org.egov=DEBUG

#Kafka configuration
spring.kafka.bootstrap.servers=localhost:9092
auto.offset.reset.config=earliest
spring.embedded.kafka.brokers=embededkafkabroker
spring.kafka.consumer.value-deserializer=org.egov.works.estimate.common.queue.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=tl-services
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#kafka topic names
egov.services.works.abstract.estimate.create.topic=works-abstract-estimate-create
egov.services.works.abstract.estimate.update.topic=works-abstract-estimate-update

egov.services.works.projectcode.create.topic=works-projectcode-create

#validation messages
dateofproposal.future.date=Date of Proposal can not be future date