{
	"info": {
		"name": "eGov-Works",
		"_postman_id": "cb6728b3-55d4-5c4c-2095-372502e6bf33",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Common",
			"description": "",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00ab05ad-a3c9-426f-9bfe-8b0042eaa765",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"pm.globals.set(\"userName\", jsonData.UserRequest.userName);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "clerk",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "read",
									"type": "text"
								},
								{
									"key": "tenantId",
									"value": "{{tenantId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user/oauth/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"oauth",
								"token"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/user/_logout?access_token={{access_token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"_logout"
							],
							"query": [
								{
									"key": "access_token",
									"value": "{{access_token}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create DocumentDetails",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"tenantId\" : \"{{tenantId}}\"\n    }\n  },\n  \"documentDetails\" : [\n    {\n      \"objectId\" : \"0001\",\n      \"objectType\" : \"AbstractEstimate\",\n      \"fileStore\" : \"01234\",\n      \"tenantId\" : \"{{tenantId}}\"\n  }\n  ]\n}"
						},
						"url": {
							"raw": "{{url}}/works-services/documentdetails/_create",
							"host": [
								"{{url}}"
							],
							"path": [
								"works-services",
								"documentdetails",
								"_create"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update DocumentDetails",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestInfo\": {\n    \"apiId\": \"update\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"documentDetails\" : [\n    {\n      \"id\": \"a50e69b18c594b2385b71fcda85cd9e2\",\n      \"tenantId\" : \"{{tenantId}}\",\n      \"objectId\" : \"14321\",\n      \"objectType\" : \"AbstractEstimate\",\n      \"fileStore\": \"01235\"\n  }\n  ]\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/works-services/documentdetails/_update",
							"host": [
								"{{url}}"
							],
							"path": [
								"works-services",
								"documentdetails",
								"_update"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "mdmsData",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a642269-b089-42ce-8e00-1622e073b9ba",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var uom = jsonData.MdmsRes[\"common-masters\"].Uom;",
									"var dep = jsonData.MdmsRes[\"common-masters\"].Department;",
									"var typeOfWork = jsonData.MdmsRes.Works.TypeOfWork;",
									"var scheduleCategory = jsonData.MdmsRes.Works.ScheduleCategory;",
									"",
									"var uomCode = uom[Math.floor(Math.random() * uom.length)];",
									"var depCode = dep[Math.floor(Math.random() * dep.length)];",
									"var typeOfWorkCode = typeOfWork[Math.floor(Math.random() * typeOfWork.length)];",
									"var scheduleCategoryCode = scheduleCategory[Math.floor(Math.random() * scheduleCategory.length)];",
									"",
									"pm.environment.set(\"uom\", uomCode.code);",
									"pm.environment.set(\"dep\", depCode.code);",
									"pm.environment.set(\"typeCode\", typeOfWorkCode.code);",
									"pm.environment.set(\"scheduleCategory\", scheduleCategoryCode.code);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"works-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\",\n      \"tenantId\": \"{{tenantId}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"Works\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"ScheduleCategory\"\n               },\n                {  \n                 \"name\":\"TypeOfWork\"\n               },\n               {\n               \"name\": \"Overhead\"\n               },\n               {\n                 \"name\": \"Remarks\"\n               },\n               {\n                 \"name\": \"ReferenceType\"\n               },\n               {\n                 \"name\": \"BudgetGroup\"\n               },\n               {\n                 \"name\": \"NatureOfWork\"\n               },\n               {\n                 \"name\": \"ModeOfAllotment\"\n               },\n               {\n                 \"name\": \"ContractorClass\"\n               },\n               {\n                 \"name\": \"WorksStatus\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               },\n               {\n                  \"name\":\"Uom\"\n               }\n            ]\n         }\n      ]\n   }\n}"
						},
						"url": {
							"raw": "{{url}}/egov-mdms-service/v1/_search",
							"host": [
								"{{url}}"
							],
							"path": [
								"egov-mdms-service",
								"v1",
								"_search"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Works MDMS",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"ModeOfAllotment\"\n          }\n        ]\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/egov-mdms-service/v1/_search",
							"host": [
								"{{url}}"
							],
							"path": [
								"egov-mdms-service",
								"v1",
								"_search"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "ScheduleOfCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"EXCAVATION\", jsonData.MdmsRes.Works.ScheduleCategory[0].code);",
									"pm.environment.set(\"ConcreteRoads\", jsonData.MdmsRes.Works.ScheduleCategory[1].code);",
									"pm.environment.set(\"BtRoads\", jsonData.MdmsRes.Works.ScheduleCategory[2].code);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"ScheduleCategory\"\n          }\n        ]\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/egov-mdms-service/v1/_search",
							"host": [
								"{{url}}"
							],
							"path": [
								"egov-mdms-service",
								"v1",
								"_search"
							]
						},
						"description": "Search Schedule Of Category"
					},
					"response": []
				},
				{
					"name": "UOM",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"// pm.environment.set(\"Kilograms\", jsonData.MdmsRes.common-masters.Uom[0].code);",
									"// pm.environment.set(\"Ton\", jsonData.MdmsRes.common-masters.Uom[1].code);",
									"// pm.environment.set(\"Numbers\", jsonData.MdmsRes.common-masters.Uom[3].code);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"common-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"common-masters\",\n        \"masterDetails\": [\n          {\n            \"name\": \"Uom\"\n          }\n        ]\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/egov-mdms-service/v1/_search",
							"host": [
								"{{url}}"
							],
							"path": [
								"egov-mdms-service",
								"v1",
								"_search"
							]
						},
						"description": "Search Unit of Measurement"
					},
					"response": []
				},
				{
					"name": "Search DocumentDetails",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
						},
						"url": {
							"raw": "{{url}}/works-services/documentdetails/_search?tenantId={{tenantId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"works-services",
								"documentdetails",
								"_search"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Search Project Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
						},
						"url": {
							"raw": "{{url}}/works-estimate/v1/projectcodes/_search?tenantId={{tenantId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"works-estimate",
								"v1",
								"projectcodes",
								"_search"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Department MDMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59935d7c-579d-4d26-a280-af846f9e8f81",
								"type": "text/javascript",
								"exec": [
									"var obj = JSON.parse(responseBody);",
									"var commonMasters = obj.MdmsRes[\"common-masters\"].Department;",
									"// var code = commonMasters[Math.floor(Math.random() * obj.MdmsRes[\"common-masters\"].Department.length)];",
									"",
									"for( var k in commonMasters){",
									"    var dep = commonMasters[k].code;",
									"        console.log(dep);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n                  \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
						},
						"url": {
							"raw": "{{url}}/egov-mdms-service/v1/_search?tenantId={{tenantId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"egov-mdms-service",
								"v1",
								"_search"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "WMS_mdmsData",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a642269-b089-42ce-8e00-1622e073b9ba",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var uom = jsonData.MdmsRes[\"common-masters\"].Uom;",
									"var dep = jsonData.MdmsRes[\"common-masters\"].Department;",
									"var typeOfWork = jsonData.MdmsRes.Works.TypeOfWork;",
									"var scheduleCategory = jsonData.MdmsRes.Works.ScheduleCategory;",
									"",
									"var uomCode = uom[Math.floor(Math.random() * uom.length)];",
									"var depCode = dep[Math.floor(Math.random() * dep.length)];",
									"var typeOfWorkCode = typeOfWork[Math.floor(Math.random() * typeOfWork.length)];",
									"var scheduleCategoryCode = scheduleCategory[Math.floor(Math.random() * scheduleCategory.length)];",
									"",
									"pm.environment.set(\"uom\", uomCode.code);",
									"pm.environment.set(\"dep\", depCode.code);",
									"pm.environment.set(\"typeCode\", typeOfWorkCode.code);",
									"pm.environment.set(\"scheduleCategory\", scheduleCategoryCode.code);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": null,\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"ScheduleCategory\"\n          },\n          {\n            \"name\": \"TypeOfWork\"\n          },\n          {\n            \"name\": \"Overhead\"\n          },\n          {\n            \"name\": \"Remarks\"\n          },\n          {\n            \"name\": \"ReferenceType\"\n          },\n          {\n            \"name\": \"BudgetGroup\"\n          },\n          {\n            \"name\": \"NatureOfWork\"\n          },\n          {\n            \"name\": \"ModeOfAllotment\"\n          },\n          {\n            \"name\": \"ContractorClass\"\n          },\n          {\n            \"name\": \"WorksStatus\"\n          }\n        ]\n      },\n      {\n        \"moduleName\": \"common-masters\",\n        \"masterDetails\": [\n          {\n            \"name\": \"Department\"\n          },\n          {\n            \"name\": \"Uom\"\n          }\n        ]\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/egov-mdms-service/v1/_search",
							"host": [
								"{{url}}"
							],
							"path": [
								"egov-mdms-service",
								"v1",
								"_search"
							]
						},
						"description": "WMS related MDMS data's"
					},
					"response": []
				},
				{
					"name": "WMS_rolesData",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16f08512-1531-4c02-8da8-964748c8c276",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": null,\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"ACCESSCONTROL-ROLES\",\n        \"masterDetails\": [\n          {\n            \"name\": \"roles\"\n          }\n        ]\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/egov-mdms-service/v1/_search",
							"host": [
								"{{url}}"
							],
							"path": [
								"egov-mdms-service",
								"v1",
								"_search"
							]
						},
						"description": "WMS roles related MDMS data's"
					},
					"response": []
				}
			]
		},
		{
			"name": "Masters",
			"description": "Works related Masters",
			"item": [
				{
					"name": "SOR",
					"description": "",
					"item": [
						{
							"name": "SOR_mdmsData",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a642269-b089-42ce-8e00-1622e073b9ba",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var uom = jsonData.MdmsRes[\"common-masters\"].Uom;",
											"var dep = jsonData.MdmsRes[\"common-masters\"].Department;",
											"var typeOfWork = jsonData.MdmsRes.Works.TypeOfWork;",
											"var scheduleCategory = jsonData.MdmsRes.Works.ScheduleCategory;",
											"",
											"var uomCode = uom[Math.floor(Math.random() * uom.length)];",
											"var depCode = dep[Math.floor(Math.random() * dep.length)];",
											"var typeOfWorkCode = typeOfWork[Math.floor(Math.random() * typeOfWork.length)];",
											"var scheduleCategoryCode = scheduleCategory[Math.floor(Math.random() * scheduleCategory.length)];",
											"",
											"pm.environment.set(\"uom\", uomCode.code);",
											"pm.environment.set(\"dep\", depCode.code);",
											"pm.environment.set(\"typeCode\", typeOfWorkCode.code);",
											"pm.environment.set(\"scheduleCategory\", scheduleCategoryCode.code);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": null,\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"ScheduleCategory\"\n          },\n          {\n            \"name\": \"TypeOfWork\"\n          },\n          {\n            \"name\": \"Overhead\"\n          },\n          {\n            \"name\": \"Remarks\"\n          },\n          {\n            \"name\": \"ReferenceType\"\n          },\n          {\n            \"name\": \"BudgetGroup\"\n          },\n          {\n            \"name\": \"NatureOfWork\"\n          },\n          {\n            \"name\": \"ModeOfAllotment\"\n          },\n          {\n            \"name\": \"ContractorClass\"\n          },\n          {\n            \"name\": \"WorksStatus\"\n          }\n        ]\n      },\n      {\n        \"moduleName\": \"common-masters\",\n        \"masterDetails\": [\n          {\n            \"name\": \"Department\"\n          },\n          {\n            \"name\": \"Uom\"\n          }\n        ]\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create SOR",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1925975e-ed86-480b-9b99-f398e4722ea5",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 100));",
											"var num2 = pm.globals.get(\"i\");",
											"pm.environment.set(\"SOR_code\", \"SOR\"+(++num2));",
											"pm.globals.set(\"i\", num2);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "217a2ff8-bc90-426e-8215-b75ef343a68b",
										"type": "text/javascript",
										"exec": [
											"var createSorResponse = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"SOR_id\", createSorResponse.scheduleOfRates[0].id);",
											"pm.environment.set(\"SOR_code\", createSorResponse.scheduleOfRates[0].code);",
											"",
											"var sorRates = createSorResponse.scheduleOfRates[0].sorRates;",
											"var marketRates = createSorResponse.scheduleOfRates[0].marketRates;",
											"",
											"if(sorRates.length !== 0){",
											"    for(var i=0; i<sorRates.length; i++){",
											"        pm.environment.set(\"sorRatesId\"+i, sorRates[i].id);",
											"    }    ",
											"}",
											"",
											"if(marketRates.length !== 0){",
											"    for(var i=0; i<sorRates.length; i++){",
											"        pm.environment.set(\"sorRatesId\", sorRates[i].id);",
											"    }    ",
											"}",
											"",
											"",
											"",
											"",
											"tests[\"Status is success\"] = createSorResponse.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.environment.set(\"sorCreate\", JSON.stringify(createSorResponse));"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"works-masters\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"create\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": \"{{tenantId}}\",\r\n      \"code\": \"{{SOR_code}}\",\r\n      \"description\": \"Rates for CC-ash Road work\",\r\n      \"scheduleCategory\": {\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"code\": \"{{scheduleCategory}}\"\r\n      },\r\n      \"uom\": {\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"code\": \"{{uom}}\"\r\n      },\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1425200691000,\r\n          \"toDate\": 1427879091000,\r\n          \"rate\": 54.32,\r\n          \"deleted\": false\r\n        },\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1430384691000,\r\n          \"toDate\": 1430471091000,\r\n          \"rate\": 87.65,\r\n          \"deleted\": false\r\n        }\r\n      ],\r\n      \"marketRates\": []\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_create"
									]
								},
								"description": "Create SOR as works master data"
							},
							"response": []
						},
						{
							"name": "Search SOR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8000b670-97aa-4b39-aa26-33f6f9ed4c8e",
										"type": "text/javascript",
										"exec": [
											"var sorResponse = JSON.parse(responseBody);",
											"var sorCreate = JSON.parse(environment.sorCreate);",
											"",
											"pm.test(\"SOR code matches\", function () {",
											"pm.expect(pm.environment.get(\"SOR_code\")).to.include(sorResponse.scheduleOfRates[0].code);",
											"});",
											"",
											"pm.test(\"SOR ID matches\", function () {",
											"pm.expect(pm.environment.get(\"SOR_id\")).to.include(sorResponse.scheduleOfRates[0].id);",
											"});",
											"",
											"console.log(sorCreate);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\":{\r\n  \"apiId\": \"works-masters\",\r\n  \"ver\": \"1.0\",\r\n  \"ts\": 0,\r\n  \"action\": \"search\",\r\n  \"did\": \"1\",\r\n  \"key\": \"string\",\r\n  \"msgId\": \"string\",\r\n  \"requesterId\": \"clerk\",\r\n  \"authToken\": \"{{access_token}}\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_search?tenantId={{tenantId}}&sorCodes={{SOR_code}}&ids={{SOR_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "sorCodes",
											"value": "{{SOR_code}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{SOR_id}}",
											"equals": true
										}
									]
								},
								"description": "Search SOR master data"
							},
							"response": []
						},
						{
							"name": "Update SOR",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"string\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"string\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n    \"scheduleOfRates\": [\r\n        {\r\n            \"id\": \"SOR_id\",\r\n            \"tenantId\": \"{{tenantId}}\",\r\n            \"code\": \"{{SOR_code}}\",\r\n            \"description\": \"Rates for CC-ash Road work\",\r\n            \"scheduleCategory\": {\r\n                \"code\": \"{{scheduleCategory}}\"\r\n            },\r\n            \"uom\": {\r\n                \"code\": \"{{uom}}\"\r\n            },\r\n            \"sorRates\": [\r\n                {\r\n                    \"id\": \"{{sorRatesId0}}\",\r\n                    \"tenantId\": \"{{tenantId}}\",\r\n                    \"scheduleOfRate\": \"{{SOR_id}}\",\r\n                    \"fromDate\": 1425200691000,\r\n                    \"toDate\": 1427879091000,\r\n                    \"rate\": 54.32,\r\n                    \"deleted\": false,\r\n                    \"isMigrated\": false,\r\n                    \"auditDetails\": null\r\n                },\r\n                {\r\n                    \"id\": \"{{sorRatesId1}}\",\r\n                    \"tenantId\": \"{{tenantId}}\",\r\n                    \"scheduleOfRate\": \"{{SOR_id}}\",\r\n                    \"fromDate\": 1430384691000,\r\n                    \"toDate\": 1430471091000,\r\n                    \"rate\": 87.65,\r\n                    \"deleted\": false,\r\n                    \"isMigrated\": false,\r\n                    \"auditDetails\": null\r\n                }\r\n            ],\r\n            \"marketRates\": [],\r\n            \"deleted\": false,\r\n            \"auditDetails\": null\r\n        }\r\n    ]\r\n  \r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_update"
									]
								},
								"description": "Update SOR"
							},
							"response": []
						},
						{
							"name": "SOR_Without_Mandatory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "83889621-5c97-4b07-9c8c-13993e124cb8",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cc645e07-a6aa-4c0d-9745-dc97f45a2b84",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"",
											"pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"string\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"string\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": null,\r\n      \"code\": null,\r\n      \"description\": null,\r\n      \"scheduleCategory\": {\r\n        \"id\": 2,\r\n        \"tenantId\": null,\r\n        \"name\": null,\r\n        \"code\": null\r\n      },\r\n      \"uom\": {\r\n        \"id\": 7,\r\n        \"tenantId\": null,\r\n        \"code\": null\r\n      },\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": null,\r\n          \"fromDate\": null,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": null,\r\n          \"deleted\": false\r\n        }\r\n    ],\r\n      \"marketRates\":[\r\n        {\r\n          \"tenantId\": null,\r\n          \"fromDate\": null,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": null,\r\n          \"deleted\": false\r\n        }\r\n     ],\r\n      \"deleted\": false\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_create"
									]
								},
								"description": "Create SOR as works master data without any mandatory"
							},
							"response": []
						},
						{
							"name": "M1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3f6a19ae-9081-4fd2-a0a3-f5897c59275b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9fc5a5c1-93be-4536-954a-df1ae7189f4c",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"SOR code Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"tests[\"SOR description Mandatory check Matches\"] = jsonData.Errors[1].message;",
											"",
											"pm.test(\"SOR description Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});",
											"pm.test(\"SOR description Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[1].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"string\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"string\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": \"{{tenantId}}\",\r\n      \"code\": null,\r\n      \"description\": null,\r\n      \"scheduleCategory\": {\r\n        \"id\": 2,\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"name\": \"Concrete roads - FAKE\",\r\n        \"code\": \"CCR - FAKE\"\r\n      },\r\n      \"uom\": {\r\n        \"id\": 7,\r\n        \"tenantId\": \"{{tenantId}}\",\r\n        \"code\": \"MTR\"\r\n      },\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1459412543000,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": 124.63,\r\n          \"deleted\": false\r\n        }\r\n    ],\r\n      \"marketRates\":[\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1459412543000,\r\n          \"toDate\": 1491034943000,\r\n          \"rate\": 124.63,\r\n          \"deleted\": false\r\n        }\r\n     ],\r\n      \"deleted\": false\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_create"
									]
								},
								"description": "Create SOR as works master data"
							},
							"response": []
						},
						{
							"name": "validate MDMS data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "188a1c12-4640-4f64-a425-5cf235be6d45",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b3ceb61-a3f1-42b4-b655-81da0d6994ee",
										"type": "text/javascript",
										"exec": [
											"var createSorResponse = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"SOR_id\", createSorResponse.scheduleOfRates[0].id);",
											"pm.environment.set(\"SOR_code\", createSorResponse.scheduleOfRates[0].code);",
											"",
											"tests[\"Status is success\"] = createSorResponse.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.environment.set(\"sorCreate\", JSON.stringify(createSorResponse));"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\": {\r\n    \"apiId\": \"works-masters\",\r\n    \"ver\": \"string\",\r\n    \"ts\": 0,\r\n    \"action\": \"create\",\r\n    \"did\": \"string\",\r\n    \"key\": \"string\",\r\n    \"msgId\": \"string\",\r\n    \"requesterId\": \"string\",\r\n    \"authToken\": \"{{access_token}}\"\r\n  },\r\n  \"scheduleOfRates\": [\r\n    {\r\n      \"tenantId\": null,\r\n      \"code\": \"{{SOR_code}}\",\r\n      \"description\": \"Rates for CC-ash Road work\",\r\n      \"scheduleCategory\": null,\r\n      \"uom\": null,\r\n      \"sorRates\": [\r\n        {\r\n          \"tenantId\": \"{{tenantId}}\",\r\n          \"fromDate\": 1427884148000,\r\n          \"toDate\": 1459420148000,\r\n          \"rate\": 88.88,\r\n          \"deleted\": false\r\n        }\r\n      ],\r\n      \"marketRates\": []\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_create"
									]
								},
								"description": "Create SOR as works master data with validate MDMS data"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Estimate Template",
					"description": "",
					"item": [
						{
							"name": "typeOfWork_MDMS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1bc53973-4445-4f2f-8573-938198877760",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var typeOfWork = jsonData.MdmsRes.Works.TypeOfWork;",
											"var typeOfWorkCode = [];",
											"",
											"for(var i=0;i<typeOfWork.length; i++){",
											"    typeOfWorkCode[i] = jsonData.MdmsRes.Works.TypeOfWork[i].code;",
											"}",
											"var code = typeOfWorkCode[Math.floor(Math.random() * typeOfWork.length)];",
											"pm.environment.set(\"typeCode\", code);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-services\",\n    \"ver\": null,\n    \"ts\": null,\n    \"action\": \"Search\",\n    \"did\": null,\n    \"key\": null,\n    \"msgId\": \"search with from and to values\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"MdmsCriteria\": {\n    \"tenantId\": \"{{tenantId}}\",\n    \"moduleDetails\": [\n      {\n        \"moduleName\": \"Works\",\n        \"masterDetails\": [\n          {\n            \"name\": \"TypeOfWork\"\n          }\n        ]\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create ET",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 100));",
											"var num2 = pm.globals.get(\"j\");",
											"pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
											"pm.globals.set(\"j\", num2);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0f831016-d4a1-45fc-8d07-069f0290abb9",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if(pm.response.to.have.status(200)){",
											"tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].id);",
											"pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
											"pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].id);",
											"pm.environment.set(\"nonSOR_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].nonSOR.id);",
											"",
											"}else if(pm.response.to.have.status(400)){",
											"pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
											"});",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-masters\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"ROADs Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Road\",\n      \"typeOfWork\": {\n        \"code\": \"{{typeCode}}\"\n      },\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"nonSOR\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man power\",\n            \"uom\": {\n              \"code\":\"NOS\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/estimatetemplates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"estimatetemplates",
										"_create"
									]
								},
								"description": "Estimate Templates for work creation"
							},
							"response": []
						},
						{
							"name": "Create ET with SOR",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 100));",
											"var num2 = pm.globals.get(\"j\");",
											"pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
											"pm.globals.set(\"j\", num2);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "107fbbeb-2bd0-4bba-8629-af29b7b6088a",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if(pm.response.to.have.status(200)){",
											"tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"// pm.test(\"Successful POST request\", function () {",
											"//     pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"// });",
											"",
											"pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].id);",
											"pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
											"pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].estimateTemplate);",
											"",
											"}else if(pm.response.to.have.status(400)){",
											"pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
											"});",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-master\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"ROADs Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Road\",\n      \"typeOfWork\": {\n        \"code\": \"{{typeCode}}\"\n      },\n      \"estimateTemplateActivities\": [\n         {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\":{\n            \"id\": \"{{SOR_id}}\",\n            \"code\": \"{{SOR_code}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{uom}}\"\n          },\n          \"nonSOR\": null,\n          \"deleted\": false          \n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/estimatetemplates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"estimatetemplates",
										"_create"
									]
								},
								"description": "Estimate Templates for work creation:\nWith only SOR as estimate activity"
							},
							"response": []
						},
						{
							"name": "Create ET with NonSOR",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 100));",
											"var num2 = pm.globals.get(\"j\");",
											"pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
											"pm.globals.set(\"j\", num2);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0f831016-d4a1-45fc-8d07-069f0290abb9",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if(pm.response.to.have.status(200)){",
											"tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].id);",
											"pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
											"pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].id);",
											"pm.environment.set(\"nonSOR_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].nonSOR.id);",
											"",
											"}else if(pm.response.to.have.status(400)){",
											"pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
											"});",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"ROADs Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Road\",\n      \"typeOfWork\": {\n        \"code\": \"ROADS\"\n      },\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateTemplate\": null,\n          \"scheduleOfRate\": null,          \n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"nonSOR\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man power\",\n            \"uom\": {\n              \"code\":\"NOS\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/estimatetemplates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"estimatetemplates",
										"_create"
									]
								},
								"description": "Estimate Templates for work creation:\n\nWith only Non SOR as estimate activity"
							},
							"response": []
						},
						{
							"name": "Create ET(SOR & NonSOR)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1711c7c5-e3e5-4ce2-a6b0-9cd3a1a87910",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 100));",
											"var num2 = pm.globals.get(\"j\");",
											"pm.environment.set(\"ET_code\", \"ET\"+(++num2));",
											"pm.globals.set(\"j\", num2);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a224e367-f380-40aa-9cc2-9b1a5c2c439a",
										"type": "text/javascript",
										"exec": [
											"// var jsonData = JSON.parse(responseBody);",
											"",
											"// if(pm.response.to.have.status(200)){",
											"// tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"// pm.test(\"Successful POST request\", function () {",
											"//     pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"// });",
											"",
											"// pm.environment.set(\"ET_id\", jsonData.estimateTemplates[0].id);",
											"// pm.environment.set(\"ET_code\", jsonData.estimateTemplates[0].code);",
											"// pm.environment.set(\"ETactivity_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[0].id);",
											"// pm.environment.set(\"nonSOR_id\", jsonData.estimateTemplates[0].estimateTemplateActivities[1].nonSOR.id);",
											"",
											"// }else if(pm.response.to.have.status(400)){",
											"// pm.test(\"Duplicate Estimate Template validation message matches\", function () {",
											"//     pm.response.to.have.status(400);",
											"//     pm.expect(\"Given Estimate Template already exists: \"+\"ET_code\").to.include(jsonData.Errors[0].message);",
											"// });",
											"// }"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"Buildings Estimate Template\",\n      \"code\": \"{{ET_code}}\",\n      \"active\": true,\n      \"description\": \"Estimate Template for Buildings supplies\",\n      \"typeOfWork\": {\n        \"code\": \"{{typeCode}}\"\n      },\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\":{\n            \"id\": \"03b0157ff1594d8ab058ddf0cc24a4f5\",\n            \"code\": \"SOR63\"\n          },\n          \"uom\": {\n            \"code\": \"TON\"\n          },\n          \"nonSOR\": null,\n          \"deleted\": false          \n        },\n        \n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": null,\n          \"uom\": {\n            \"code\": \"TON\"\n          },\n          \"nonSOR\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man power\",\n            \"uom\": {\n              \"code\": \"NOS\"\n            }\n          },\n          \"deleted\": false\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/estimatetemplates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"estimatetemplates",
										"_create"
									]
								},
								"description": "Create Estimate Templates for work creation with both SOR and Non SOR"
							},
							"response": []
						},
						{
							"name": "Search ET",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"search\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/estimatetemplates/_search?tenantId={{tenantId}}&ids={{ET_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"estimatetemplates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{ET_id}}",
											"equals": true
										}
									]
								},
								"description": "Search Estimate Templates created"
							},
							"response": []
						},
						{
							"name": "Update ET",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n    \"estimateTemplates\": [\n        {\n            \"id\": \"aee7540a77cc4238a99400e7bfe843ce\",\n            \"tenantId\": \"default\",\n            \"name\": \"ROADs for park Estimate Template\",\n            \"code\": \"ET101\",\n            \"active\": true,\n            \"description\": \"Estimate Template for Park Road\",\n            \"typeOfWork\": {\n                \"id\": null,\n                \"tenantId\": null,\n                \"name\": null,\n                \"code\": \"PARKS\",\n                \"description\": null,\n                \"active\": null,\n                \"parent\": null\n            },\n            \"subTypeOfWork\": null,\n            \"estimateTemplateActivities\": [\n                {\n                    \"id\": \"c2823974b5904188a00e90778902ac8f\",\n                    \"tenantId\": \"default\",\n                    \"estimateTemplate\": \"aee7540a77cc4238a99400e7bfe843ce\",\n                    \"scheduleOfRate\": {\n                        \"id\": \"8b25f3df701840a5873819761645a93d\",\n                        \"tenantId\": null,\n                        \"code\": \"SOR107\",\n                        \"description\": null,\n                        \"scheduleCategory\": null,\n                        \"uom\": null,\n                        \"sorRates\": [],\n                        \"marketRates\": null,\n                        \"deleted\": false,\n                        \"auditDetails\": null\n                    },\n                    \"uom\": {\n                        \"id\": null,\n                        \"code\": \"NOS\",\n                        \"description\": null,\n                        \"category\": null,\n                        \"active\": true,\n                        \"coversionFactor\": null,\n                        \"baseuom\": false,\n                        \"createdBy\": null,\n                        \"createdDate\": null,\n                        \"lastModifiedBy\": null,\n                        \"lastModifiedDate\": null\n                    },\n                    \"nonSOR\": null,\n                    \"deleted\": false,\n                    \"auditDetails\": {\n                        \"createdBy\": \"clerk\",\n                        \"lastModifiedBy\": \"clerk\",\n                        \"createdTime\": 1514892507713,\n                        \"lastModifiedTime\": 1514892507713\n                    }\n                }\n            ],\n            \"deleted\": false,\n            \"auditDetails\": {\n                \"createdBy\": \"clerk\",\n                \"lastModifiedBy\": \"clerk\",\n                \"createdTime\": 1514892507713,\n                \"lastModifiedTime\": 1514892507713\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/estimatetemplates/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"estimatetemplates",
										"_update"
									]
								},
								"description": "Update/Modify the ET created as per the requirement"
							},
							"response": []
						},
						{
							"name": "Create ET Validations",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aed27b21-649f-4b83-86e1-7335837b6456",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8255226a-2003-4cc5-a2f3-f0d775887f5e",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[2].message;",
											"tests[\"ET Name Mandatory check Matches\"] = jsonData.Errors[3].message;",
											"tests[\"ET code Mandatory check Matches\"] = jsonData.Errors[7].message;",
											"tests[\"ET active Mandatory check Matches\"] = jsonData.Errors[8].message;",
											"tests[\"Type of work Mandatory check Matches\"] = jsonData.Errors[4].message;",
											"tests[\"Tenant Id (estimateTemplateActivities) Mandatory check Matches\"] = jsonData.Errors[1].message;",
											"tests[\"UOM (estimateTemplateActivities) Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"tests[\"Tenant Id (Non SOR) Mandatory check Matches\"] = jsonData.Errors[6].message;",
											"tests[\"Description (Non SOR) Mandatory check Matches\"] = jsonData.Errors[5].message;",
											"tests[\"UOM (Non SOR) Mandatory check Matches\"] = jsonData.Errors[9].message;",
											"",
											"pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"estimateTemplates\": [\n    {\n      \"tenantId\": null,\n      \"name\": null,\n      \"code\": null,\n      \"active\": null,\n      \"description\": \" Template for laying CC road for 100 metres \",\n      \"typeOfWork\": {\n        \"code\": null\n      },\n      \"estimateTemplateActivities\": [\n        {\n          \"tenantId\": null,\n          \"scheduleOfRate\": {\n            \"code\": \"{{SOR_id}}\"\n          },\n          \"uom\": {\n            \"code\": null\n          },\n          \"nonSOR\": {\n            \"tenantId\": null,\n            \"description\": null,\n            \"uom\": {\n              \"code\": null\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/estimatetemplates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"estimatetemplates",
										"_create"
									]
								},
								"description": "Mandatory check for create Estimate Template"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Contractor Master",
					"description": "",
					"item": [
						{
							"name": "Contractor_mdmsData",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4d52dfe-ec38-4031-8055-2836ea36bbd6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var uom = jsonData.MdmsRes[\"common-masters\"].Uom;",
											"var dep = jsonData.MdmsRes[\"common-masters\"].Department;",
											"var contractor = jsonData.MdmsRes.Works.ContractorClass;",
											"",
											"var uomCode = uom[Math.floor(Math.random() * uom.length)];",
											"var depCode = dep[Math.floor(Math.random() * dep.length)];",
											"var contractorClass = contractor[Math.floor(Math.random() * contractor.length)];",
											"",
											"pm.environment.set(\"uom\", uomCode.code);",
											"pm.environment.set(\"dep\", depCode.code);",
											"pm.environment.set(\"contractorClass\", contractorClass.class);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"works-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\",\n      \"tenantId\": \"{{tenantId}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"Works\",\n            \"masterDetails\":[  \n               {\n                 \"name\": \"Remarks\"\n               },\n               {\n                 \"name\": \"ContractorClass\"\n               },\n               {\n                 \"name\": \"WorksStatus\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               },\n               {\n                  \"name\":\"Uom\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Contractor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "00c45df9-be08-4d57-a321-845dffd9994b",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 100));",
											"pm.environment.set(\"contractorCode\", \"Grade-\"+num1);",
											"pm.environment.set(\"contractorName\", \"Contractor\"+\"One\");",
											"pm.environment.set(\"contractorEmail\", \"pro\"+num1+\"@mULB.com\");",
											"var efList = [\"INCOME_TAX\", \"EARNEST_MONEY_DEPOSIT\", \"VAT\"];",
											"pm.environment.set(\"exemptedFrom\", efList[Math.floor(Math.random() * efList.length)]);",
											"",
											"// pm.environment.set(\"PAN\",",
											"// pm.environment.set(\"TIN\"",
											"// pm.environment.set(\"BankAcc\"",
											"pm.environment.set(\"pwdApprovalCode\", \"PWD-A\"+num1);",
											"",
											"// pwdApprovalValidTill",
											"// epfRegistrationNumber",
											"// accountCode",
											"// pmc",
											"// status"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cb44ea42-cb66-4b06-9486-45404c138076",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"contractorId\", jsonData.contractors[0].id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n   },\n   \"contractors\": [\n     {\n       \"tenantId\": \"{{tenantId}}\",\n       \"name\": \"contractorName\",\n       \"code\": \"{{contractorCode}}\",\n       \"correspondenceAddress\": \"Roha, Maharastra\",\n       \"paymentAddress\": \"ULB - Roha, Maharastra\",\n       \"contactPerson\": \"Public Relationship Officer\",\n       \"email\": \"{{contractorEmail}}\",\n       \"narration\": \"Contractor for the work\",\n       \"mobileNumber\": \"9876543210\",\n       \"panNumber\": \"AAAPL1234C\",\n       \"tinNumber\": null,\n       \"bankAccountNumber\": \"123456789012\",\n       \"ifscCode\": \"1234567890\",\n       \"pwdApprovalCode\": \"{{pwdApprovalCode}}\",\n       \"exemptedFrom\": \"{{exemptedFrom}}\",\n       \"pwdApprovalValidTill\": \"1509088047\",\n       \"epfRegistrationNumber\": null,\n       \"accountCode\":{\n        \"glcode\": \"dummy code\"\n        },\n       \"contractorClass\": {\n         \"class\": \"{{contractorClass}}\"\n       },\n       \"pmc\": true,\n       \"status\":{\n         \"code\": \"ACTIVE\"\n       }\n     }\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/contractors/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"contractors",
										"_create"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Contractor",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\"\n   },\n    \"contractors\": [\n        {\n            \"id\": \"cbbf21db47be435fbd40e5e228a9f568\",\n            \"tenantId\": \"default\",\n            \"name\": \"contractorName\",\n            \"localName\": \"S\",\n            \"code\": \"Grade-47\",\n            \"correspondenceAddress\": \"Roha, Maharastra\",\n            \"paymentAddress\": \"ULB - Roha, Maharastra\",\n            \"contactPerson\": \"Public Relationship Officer\",\n            \"email\": \"pro47@mULB.com\",\n            \"narration\": \"Contractor for the work\",\n            \"mobileNumber\": \"9876543210\",\n            \"panNumber\": \"AAAPL1234C\",\n            \"tinNumber\": \"1234567890\",\n            \"bank\": {\n                \"id\": null,\n                \"code\": null,\n                \"name\": null,\n                \"description\": null,\n                \"active\": null,\n                \"type\": null,\n                \"auditDetails\": null\n            },\n            \"bankAccountNumber\": 123456789012,\n            \"pwdApprovalCode\": \"PWD-003\",\n            \"exemptedFrom\": \"VAT\",\n            \"pwdApprovalValidTill\": 1509088047,\n            \"epfRegistrationNumber\": \"PF-124\",\n            \"accountCode\": {\n                \"id\": null,\n                \"glcode\": \"gl code\",\n                \"name\": null,\n                \"accountCodePurpose\": null,\n                \"description\": null,\n                \"isActiveForPosting\": null,\n                \"parentId\": null,\n                \"type\": null,\n                \"classification\": null,\n                \"functionRequired\": null,\n                \"budgetCheckRequired\": null,\n                \"majorCode\": null,\n                \"isSubLedger\": null,\n                \"auditDetails\": null\n            },\n            \"ifscCode\": \"1234567890\",\n            \"contractorClass\": {\n                \"id\": null,\n                \"tenantId\": null,\n                \"class\": \"001 - Fake\",\n                \"description\": null,\n                \"minAmount\": null,\n                \"maxAmount\": null\n            },\n            \"pmc\": true,\n            \"status\": {\n                \"tenantId\": null,\n                \"code\": \"ACTIVE\",\n                \"description\": null,\n                \"moduleType\": null,\n                \"orderNumber\": null\n            },\n            \"deleted\": false,\n            \"auditDetails\": {\n                \"createdBy\": \"clerk\",\n                \"lastModifiedBy\": \"clerk\",\n                \"createdTime\": 1515048485939,\n                \"lastModifiedTime\": 1515048485939\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/contractors/_update?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"contractors",
										"_update"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search Contractor_byCode",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"search\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/contractors/_search?tenantId={{tenantId}}&code={{contractorCode}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"contractors",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "code",
											"value": "{{contractorCode}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search Contractor_byID",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"search\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/contractors/_search?tenantId={{tenantId}}&ids={{contractorId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"contractors",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{contractorId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Milestone Template",
					"description": "",
					"item": [
						{
							"name": "MT_Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b429a7a9-eba8-415d-b6b9-247f830833c2",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 10));",
											"",
											"pm.environment.set(\"MT_code\", \"MT\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "95f5bdce-b6b9-48cb-b943-3cbccff9d61b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"MT_id\", jsonData.milestoneTemplates[0].id);",
											"pm.environment.set(\"MT_code\", jsonData.milestoneTemplates[0].code);",
											"pm.environment.set(\"MT_activities\",jsonData.milestoneTemplates[0].milestoneTemplateActivities[0].id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-masters\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"milestoneTemplates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"Builings Milestone Template\",\n      \"code\": \"{{MT_code}}\",\n      \"active\": true,\n      \"description\": \"Milestone Template for PWD Building works\",\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"milestoneTemplateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"stageOrderNumber\": 1,\n          \"stageDescription\": \"Phase One\",\n          \"percentage\": 50\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"stageOrderNumber\": 2,\n          \"stageDescription\": \"Phase Two\",\n          \"percentage\": 50\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/milestonetemplates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"milestonetemplates",
										"_create"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "MT_Search_byID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50e6a50d-8e3d-4edf-98ee-7fbdb6a0be21",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var mtResponse = jsonData.milestoneTemplates;",
											"pm.environment.set(\"milestoneTemplates\", JSON.stringify(mtResponse));"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"works-master\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"search\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"clerk\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/milestonetemplates/_search?tenantId={{tenantId}}&ids={{MT_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"milestonetemplates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{MT_id}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "MT_Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8ea58898-8045-4f93-b49e-f760a0e39a62",
										"type": "text/javascript",
										"exec": [
											"var mt = pm.environment.get(\"milestoneTemplates\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c2318caa-f12e-4717-ae88-84341cea78d0",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"MT_code\", jsonData.milestoneTemplates[0].code);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-master\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"tenantId\": \"{{tenantId}}\",\n    \"authToken\": \"{{access_token}}\"\n  },\n    \"milestoneTemplates\": [\n        {\n            \"id\": \"b429cf56646043a8bafaddaa6c59f3f2\",\n            \"tenantId\": \"default\",\n            \"name\": \"Builings Milestone Template\",\n            \"code\": \"MT8.1\",\n            \"active\": true,\n            \"description\": \"Milestone Template for PWD Building works\",\n            \"typeOfWork\": {\n                \"code\": \"Buildings\"\n            },\n            \"milestoneTemplateActivities\": [\n                {\n                    \"id\": \"c04c67ad722f4bd48a76098cb87c67b1\",\n                    \"tenantId\": \"default\",\n                    \"milestoneTemplate\": \"b429cf56646043a8bafaddaa6c59f3f2\",\n                    \"stageOrderNumber\": 1,\n                    \"stageDescription\": \"Phase One\",\n                    \"percentage\": 50,\n                    \"auditDetails\": null,\n                    \"deleted\": false\n                },\n                {\n                    \"id\": \"4fdfa318d7b34cf79dd61785ef92e425\",\n                    \"tenantId\": \"default\",\n                    \"milestoneTemplate\": \"b429cf56646043a8bafaddaa6c59f3f2\",\n                    \"stageOrderNumber\": 2,\n                    \"stageDescription\": \"Phase Two\",\n                    \"percentage\": 50,\n                    \"auditDetails\": null,\n                    \"deleted\": false\n                }\n            ],\n            \"auditDetails\": null,\n            \"deleted\": false\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/milestonetemplates/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"milestonetemplates",
										"_update"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "MT_Search_byCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50e6a50d-8e3d-4edf-98ee-7fbdb6a0be21",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var mtResponse = jsonData.milestoneTemplates;",
											"pm.environment.set(\"milestoneTemplates\", JSON.stringify(mtResponse));"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"works-master\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"search\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"clerk\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/milestonetemplates/_search?tenantId={{tenantId}}&codes={{MT_code}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"milestonetemplates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "codes",
											"value": "{{MT_code}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "MT_Create_Required",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b429a7a9-eba8-415d-b6b9-247f830833c2",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.round((Math.random() * 10));",
											"",
											"pm.environment.set(\"MT_code\", \"MT\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "95f5bdce-b6b9-48cb-b943-3cbccff9d61b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"MT_id\", jsonData.milestoneTemplates[0].id);",
											"pm.environment.set(\"MT_code\", jsonData.milestoneTemplates[0].code);",
											"pm.environment.set(\"MT_activities\",jsonData.milestoneTemplates[0].milestoneTemplateActivities[0].id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"works-masters\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"milestoneTemplates\": [\n    {\n      \"tenantId\": null,\n      \"name\": null,\n      \"code\": null,\n      \"active\": null,\n      \"description\": \"First Phase milestone Template for PWD\",\n      \"typeOfWork\": {\n        \"code\": null\n      },\n      \"milestoneTemplateActivities\": [\n        {\n          \"tenantId\": null,\n          \"stageOrderNumber\": null,\n          \"stageDescription\": null,\n          \"percentage\": null\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/milestonetemplates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"milestonetemplates",
										"_create"
									]
								},
								"description": "tenantId\nname\ncode\nactive\ntypeOfWork{code}\nmilestoneTemplateActivities[tenantId, stageOrderNumber, stageDescription, percentage]"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Format Test",
			"description": "",
			"item": [
				{
					"name": "Abstract Estimate",
					"description": "",
					"item": [
						{
							"name": "Search",
							"description": null,
							"item": [
								{
									"name": "Search by ids",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&ids=35cea189c4f6426a839269f53a52ab1c",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "ids",
													"value": "35cea189c4f6426a839269f53a52ab1c",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search all",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by abstractEstimateNumbers",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&abstractEstimateNumbers=AE/AS/000047/11/2017-18",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "abstractEstimateNumbers",
													"value": "AE/AS/000047/11/2017-18",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by adminSanctionNumbers",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"5824d35d-76e1-455a-b1af-e4f9c2c6317e\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&adminSanctionNumbers=1234567",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "adminSanctionNumbers",
													"value": "1234567",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by departmentCodes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&departmentCodes=AS",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "departmentCodes",
													"value": "AS",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by fundCodes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&fundCodes=01",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "fundCodes",
													"value": "01",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by functionCodes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&functionCodes=20",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "functionCodes",
													"value": "20",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by budgetHeadCodes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&budgetHeadCodes=4122001-CWIP-Office Buildings",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "budgetHeadCodes",
													"value": "4122001-CWIP-Office Buildings",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by adminSanctionFromDate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&adminSanctionFromDate=1509088048",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "adminSanctionFromDate",
													"value": "1509088048",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by adminSanctionToDate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&adminSanctionToDate=1509088047",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "adminSanctionToDate",
													"value": "1509088047",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by spillOverFlag",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&spillOverFlag=true",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "spillOverFlag",
													"value": "true",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by createdBy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&createdBy=10001",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "createdBy",
													"value": "10001",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by workIdentificationNumbers",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"744b00cc-3309-423e-a330-02795c1a6f6a\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&workIdentificationNumbers=000004/11/2017-18",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "workIdentificationNumbers",
													"value": "000004/11/2017-18",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by statuses",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"e42089af-ec63-4744-b92b-2ac5450f9646\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&statuses=CREATED",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "statuses",
													"value": "CREATED",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search by nameOfWork",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"e42089af-ec63-4744-b92b-2ac5450f9646\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"default\",\n    \"userInfo\": {\n      \"id\": 73,\n      \"userName\": \"abc\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "egov-micro-dev.egovernments.org/works-estimate/v1/abstractestimates/_search?tenantId=default&nameOfWork=Road Construction",
											"host": [
												"egov-micro-dev",
												"egovernments",
												"org"
											],
											"path": [
												"works-estimate",
												"v1",
												"abstractestimates",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true
												},
												{
													"key": "nameOfWork",
													"value": "Road Construction",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "clerk",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "AE_withWorkflow",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN/\"+year+\"/\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE/ENG/\"+year+\"/\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS/ENG/NS/\"+year+\"/\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN/\"+year+\"/\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"AE_id\", jsonData.abstractEstimates[0].id);",
											"pm.environment.set(\"AEdetails_id\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
											"pm.environment.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"\",\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"subject\": \"Estimation for Road Construction\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"20\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ED\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"Cheif Engineer\"\n      },\n      \"status\": \"CREATED\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"mode_1\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"RoadsFake\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"CCRoadsFake\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"nature_1\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"technicalSanctionNumber\": \"{{technicalSanctionNumber}}\",\n      \"technicalSanctionDate\": \"{{epochDate}}\",\n      \"technicalSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Road Construction\",\n          \"estimateAmount\": \"800000\",\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": \"500000\"\n        }\n      ],\n      \"workFlowDetails\": {\n        \"department\": \"ED\",\n        \"designation\": \"JE\",\n        \"assignee\": 509,\n        \"action\": \"create\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "AE_withoutMandate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3d205a5f-127d-4ff0-b159-e7d60269eb43",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"console.log(jsonData.Errors.length);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": null,\n      \"dateOfProposal\": null,\n      \"subject\": null,\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": null,\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": null,\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": null,\n      \"modeOfAllotment\": {\n        \"code\": null\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": null\n      },\n      \"subTypeOfWork\": {\n        \"code\": null\n      },\n      \"natureOfWork\": {\n        \"code\": null\n      },\n      \"ward\": {\n        \"code\": null\n      },\n      \"locality\": {\n        \"code\": null\n      },\n      \"workCategory\": null,\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": null,\n      \"dpRemarks\": null,\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": null,\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "Mandatory check"
							},
							"response": []
						},
						{
							"name": "Create Spill over Estimate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"abstractEstimateNumber\", \"AE/\"+year+\"/\"+num1);",
											"pm.environment.set(\"referenceNumber\", \"Ref.Num.\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN/\"+year+\"/\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE/ENG/\"+year+\"/\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS/ENG/NS/\"+year+\"/\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN/\"+year+\"/\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"subject\": \"Spill Over project estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"1234\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Legacy work related project estimation data entry\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"abcd\"\n      },\n      \"status\": \"\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"financialSanctionNumber\": \"1234\",\n      \"financialSanctionDate\": \"{{epochDate}}\",\n      \"financialSanctionBy\": {\n        \"userName\": \"abcd\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": 1234,\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"spillOverFlag\": true,\n      \"detailedEstimateCreated\": true,\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"fundSanctioningAuthority\":\"abcd\",\n      \"pmcRequired\":\"false\",\n      \"pmcType\":\"pmc type\",\n      \"pmcName\":\"pmc Name\",\n      \"workProposedAsPerDP\":\"true\",\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Road Construction\",\n          \"estimateAmount\": 1000.12,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": 1000.123\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Estimate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Estimate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"AE/ED/000020/11/2017-18\",\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"subject\": \"Project Cost Estimation for Bridge\",\n      \"referenceType\": \"Demandfrompublic\",\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"20\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ED\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"Cheif Engineer\"\n      },\n      \"status\": \"CHECKED\",\n      \"stateId\": \"1096\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"mode_1\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"RoadsFake\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"CCRoadsFake\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"nature_1\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"technicalSanctionNumber\": \"{{technicalSanctionNumber}}\",\n      \"technicalSanctionDate\": \"{{epochDate}}\",\n      \"technicalSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Road Construction\",\n          \"estimateAmount\": \"5512345\",\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": \"5500000\"\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Submit\",\n        \"assignee\": 509\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/abstractestimates/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"abstractestimates",
										"_update"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Estimate Appropriation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"status\": \"200\",\n    \"apiId\": null,\n    \"ver\": null,\n    \"authToken\": \"{{access_token}}\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"create\",\n    \"userInfo\":{\n     \"tenantId\" : \"{{tenantId}}\",\n     \"username\" : \"ritesh\",\n     \"id\":1,\n       \"roles\" : []\n   }\n    },\n   \"estimateAppropriations\": [\n     {\n       \"id\":\"233e85b41ef8483b8192d80f69893cea\",\n       \"budgetUsage\":\"final1\",\n       \"objectNumber\":\"OBN1/c\",\n       \"tenantId\":\"{{tenantId}}\",\n       \"objectType\":\"AbstractEstimate\"\n     }\n     \n     ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-services/estimateappropriations/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-services",
										"estimateappropriations",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": " Create Project Code",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"tenantId\" : \"{{tenantId}}\"\n    }\n  },\n   \"projectCodes\": [\n     {\n       \"id\":\"1d5145cf571946f2a287c97acd60e594\",\n       \"name\":\"Road Project\",\n       \"code\": \"Road\",\n       \"description\":\"Construction of Road\",\n       \"active\": true,\n       \"projectValue\":1000,\n       \"completionDate\":1234568794,\n       \"status\":\"CLOSED\",\n       \"tenantId\":\"{{tenantId}}\"\n     }]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/projectcodes/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"projectcodes",
										"_create"
									]
								},
								"description": "Project code create"
							},
							"response": []
						},
						{
							"name": "Update Project Code",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"tenantId\" : \"{{tenantId}}\"\n    }\n  },\n   \"projectCodes\": [\n     {\n       \"id\":\"1d5145cf571946f2a287c97acd60e594\",\n       \"name\":\"Road Project\",\n       \"code\": \"Road\",\n       \"description\":\"Construction of Road\",\n       \"active\": false,\n       \"projectValue\":1000,\n       \"completionDate\":1234568794,\n       \"status\":\"CREATED\",\n       \"tenantId\":\"{{tenantId}}\"\n     }]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/projectcodes/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"projectcodes",
										"_update"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "1-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1d5fb6e9-d714-48c7-9c39-777472d6a5dd",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"",
											"pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": null,\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "2-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "eba7607c-9817-48ca-9e21-f035a7287910",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Date of Proposal Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"",
											"pm.test(\"Date Of Proposal Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": null,\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "date of proposal mandatory check"
							},
							"response": []
						},
						{
							"name": "3-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8366b6aa-f2af-4d11-9078-94cd873b5727",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Subject Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"",
											"pm.test(\"Subject Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": null,\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "subject mandatory check"
							},
							"response": []
						},
						{
							"name": "4-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7b9c2582-1b3a-41f0-a575-022dad7dbf06",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Department Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"",
											"pm.test(\"Department Mandatory validation message matches\", function () {",
											"    pm.expect(\"Department data is required\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": null\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "department mandatory check"
							},
							"response": []
						},
						{
							"name": "5-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "35766f08-ae97-4bc9-bfb3-ae633dc33b53",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reference Type Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"",
											"pm.test(\"Reference Type Mandatory validation message matches\", function () {",
											"    pm.expect(\"Reference Type is required\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\": null\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "reference type mandatory check"
							},
							"response": []
						},
						{
							"name": "6-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cd676c6e-16c7-45ee-bac5-2b38f5270763",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reference Number Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Reference Number Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": null,\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "referenceNumber mandatory check"
							},
							"response": []
						},
						{
							"name": "7-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6ec53fc4-6441-493b-a81e-9f3f24608036",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Description Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Description Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": null,\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "description mandatory check"
							},
							"response": []
						},
						{
							"name": "8-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "935cd243-3b30-4f6c-95a3-c8d73e37ea77",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Nature Of Work Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Nature Of Work Mandatory validation message matches\", function () {",
											"    pm.expect(\"Nature Of Work is required\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": null\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "natureOfWork mandatory check"
							},
							"response": []
						},
						{
							"name": "9-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "762cb145-7e5f-4b5c-b947-39e7d35a85c9",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Type Of Work Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Type Of Work Mandatory validation message matches\", function () {",
											"    pm.expect(\"Type of work is required\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": null\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "typeOfWork mandatory check"
							},
							"response": []
						},
						{
							"name": "10-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "85c1b097-2ce9-498a-aab5-1f8d06fd656b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Sub TypeOfWork Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Sub TypeOfWork Mandatory validation message matches\", function () {",
											"    pm.expect(\"Type of work is required\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": null\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "subTypeOfWork mandatory check"
							},
							"response": []
						},
						{
							"name": "11-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a5512a2e-a428-4a06-beff-254001dea29c",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"workCategory Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"workCategory Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": null,\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "workCategory mandatory check"
							},
							"response": []
						},
						{
							"name": "12-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "74250d87-82b2-43bb-a083-c4cfac3c5662",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Mode Of Allotment Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Mode Of Allotment Mandatory validation message matches\", function () {",
											"    pm.expect(\"Mode Of Allotment is required\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": null\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "modeOfAllotment mandatory check"
							},
							"response": []
						},
						{
							"name": "13-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bbb77d4f-bfbf-496e-bd15-cc0dfda688a1",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Ward Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Ward Mandatory validation message matches\", function () {",
											"    pm.expect(\"Please provide valid data for Ward\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": null\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "ward mandatory check"
							},
							"response": []
						},
						{
							"name": "14-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "22e479af-63c0-4bf6-9598-ec34c0c4627e",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"locality Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"locality Mandatory validation message matches\", function () {",
											"    pm.expect(\"Please provide valid data for Locality\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": null\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "locality mandatory check"
							},
							"response": []
						},
						{
							"name": "15-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a78d2cb4-b3b9-492b-a97c-cbff9b282964",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"workProposedAsPerDP Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"workProposedAsPerDP Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": null,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "workProposedAsPerDP"
							},
							"response": []
						},
						{
							"name": "16-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a5e8348d-6604-42e1-ac84-ac53cc7d082d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"dpRemarks Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"dpRemarks Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\": null,\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "dpRemarks"
							},
							"response": []
						},
						{
							"name": "17-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a94e35a3-03d7-42c4-bc8a-859e3eccca55",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"abstractEstimateDetails Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"abstractEstimateDetails Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": null,\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "abstractEstimateDetails"
							},
							"response": []
						},
						{
							"name": "18-18",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "34c14bae-e62c-4302-849c-63553a181617",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Beneficiary Mandatory check Matches\"] = jsonData.Errors[0].code;",
											"",
											"pm.test(\"Beneficiary Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": null,\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "beneficiary mandatory check"
							},
							"response": []
						},
						{
							"name": "Mandatory Check",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582a5e80-768e-455a-b680-5f9aa458f8eb",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"estimateNumber\", \"LE-ENG-\"+year+\"-\"+num1);",
											"pm.environment.set(\"technicalSanctionNumber\", \"TS-ENG-NS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "78dd5c07-8beb-447a-9be2-ceca6330e591",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"response\", jsonData);",
											"pm.environment.set(\"AE_id\", jsonData.abstractEstimates[0].id);",
											"pm.environment.set(\"AEdetails_id\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
											"pm.environment.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);",
											"pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
											"pm.environment.set(\"stateId\", jsonData.abstractEstimates[0].stateId);",
											"",
											"postman.setNextRequest(\"Search Estimate\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": null,\n      \"dateOfProposal\": \"{{dateOfProposal}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    },\n    {\n      \"tenantId\": \"{[tenantId]}\",\n      \"dateOfProposal\": null,\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    },\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": null,\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    },\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"DemandfromMember\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": null\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Nomination\"\n      },\n      \"fund\": {\n        \"code\": \"01\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"HOD\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"implementationPeriod\":5,\n      \"fundAvailable\":\"true\",\n      \"pmcRequired\":\"false\",\n      \"workProposedAsPerDP\": true,\n      \"dpRemarks\":\"dp remarks\",\n      \"landAssetRequired\":\"true\",\n      \"noOfLands\":10,\n      \"otherAssetSpecificationRemarks\":\"other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Construction\",\n          \"estimateAmount\": 100000,\n          \"estimateNumber\": \"{{estimateNumber}}\",\n          \"grossAmountBilled\": null\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "Required:\n      - tenantId\n      - dateOfProposal\n      - department\n      - subject\n      - referenceType\n      - referenceNumber\n      - description\n      - natureOfWork\n      - typeOfWork\n      - subTypeOfWork\n      - beneficiary\n      - workCategory\n      - modeOfAllotment\n      - ward\n      - locality\n      - workProposedAsPerDP\n      - dpRemarks\n      - abstractEstimateDetails"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Detailed Estimate",
					"description": "",
					"item": [
						{
							"name": "Login as Clerk",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Tenant ID is default\"] = jsonData.UserRequest.roles[0].tenantId;",
											"",
											"postman.setNextRequest(\"Create Estimate\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "clerk",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search SOR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9aa3ec1e-dc82-4800-8d55-bf011b97c9cc",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"variable_key\", \"variable_value\");",
											"",
											"pm.environment.set(\"variable_key\", \"variable_value\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\":{\r\n  \"apiId\": \"works-masters\",\r\n  \"ver\": \"1.0\",\r\n  \"ts\": 0,\r\n  \"action\": \"search\",\r\n  \"did\": \"1\",\r\n  \"key\": \"string\",\r\n  \"msgId\": \"string\",\r\n  \"requesterId\": \"clerk\",\r\n  \"authToken\": \"{{access_token}}\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_search?tenantId={{tenantId}}&pageSize=500",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "pageSize",
											"value": "500",
											"equals": true
										}
									]
								},
								"description": "Search SOR master data"
							},
							"response": []
						},
						{
							"name": "Search Project Code",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/projectcodes/_search?tenantId={{tenantId}}&pageSize=500",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"projectcodes",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "pageSize",
											"value": "500",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create DE Normal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateDate\": 1491034943000,\n      \"nameOfWork\": \"Detailed Estimation for the proposed work\",\n      \"description\": \"Detailed estimate create\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 9000,\n      \"estimateValue\": 10000,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n            \"glcode\": \"1234\"\n          },\n          \"amount\": 1\n        }\n      ],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"id\": 1,\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"name\": \"test\",\n            \"accountCode\": \"test\"\n          },\n          \"amount\": 1000\n        }\n      ],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"0893c2e14f7d437f958a4586dacab305\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR15\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"estimateRate\": 10000,\n          \"quantity\": 10\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_create"
									]
								},
								"description": "Create Detailed Estimate with workflow"
							},
							"response": []
						},
						{
							"name": "Search Detailed Estimate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_search?tenantId={{tenantId}}&pageSize=500",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "pageSize",
											"value": "500",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Estimate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Logout as Clerk\");"
										],
										"id": "59240b63-3c9f-4099-90a7-519398c498da",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&abstractEstimateNumbers={{abstractEstimateNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "abstractEstimateNumbers",
											"value": "{{abstractEstimateNumber}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Deductions&Overheads Empty",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "84ff913f-8c39-47b4-b462-a77c6d47502f",
										"type": "text/javascript",
										"exec": [
											"pm.globals.get(\"projectCode\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateDate\": 1491034943000,\n      \"nameOfWork\": \"Detailed Estimation for the proposed work\",\n      \"description\": \"Detailed estimate create\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 10000,\n      \"estimateValue\": 10000,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [],\n      \"estimateOverheads\": [],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"0893c2e14f7d437f958a4586dacab305\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR15\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"estimateRate\": 10000,\n          \"quantity\": 10\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_create"
									]
								},
								"description": "When Deductions and Overheads are Empty\nThen WorkValue = EstimateValue"
							},
							"response": []
						},
						{
							"name": "Validations",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "84ff913f-8c39-47b4-b462-a77c6d47502f",
										"type": "text/javascript",
										"exec": [
											"pm.globals.get(\"projectCode\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "deb56c31-1894-4353-969d-3bed2f1c9f0f",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Tenant Id Mandatory check Matches\"] = jsonData.Errors[0].message;",
											"",
											"pm.test(\"Tenant Id Mandatory validation message matches\", function () {",
											"    pm.expect(\"may not be null\").to.include(jsonData.Errors[0].message);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": null,\n      \"estimateDate\": null,\n      \"nameOfWork\": null,\n      \"description\": null,\n      \"department\": null,\n      \"status\": null,\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 9000,\n      \"estimateValue\": 10000,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": null,\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": null,\n      \"ward\": null,\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n            \"glcode\": \"1234\"\n          },\n          \"amount\": 1\n        }\n      ],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"id\": 1,\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"name\": \"test\",\n            \"accountCode\": \"test\"\n          },\n          \"amount\": 1000\n        }\n      ],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"0893c2e14f7d437f958a4586dacab305\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR15\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"estimateRate\": 10000,\n          \"quantity\": 10\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_create"
									]
								},
								"description": "Create Detailed Estimate:\nrequired:\n      - tenantId\n      - nameOfWork\n      - estimateDate\n      - worksType\n      - natureOfWork\n      - ward\n      - status\n      - department\n      - description"
							},
							"response": []
						},
						{
							"name": "Create spilloverDE",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b68d2fee-4c57-4cd5-b652-f01982579233",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"sEstimateNum\", \"Spillover/DE/ENG/\"+num1);",
											"pm.environment.set(\"sTechSanctionNum\", \"Spillover/DE/TS/\"+num1);",
											"pm.environment.set(\"sAdminSanctionNum\", \"Spillover/DE/ADN/\"+num1);",
											"pm.globals.get(\"spilloverPC\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e65ead77-70f3-46f6-96ec-d7271c5e0054",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"1427784646000\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateNumber\": \"{{sEstimateNum}}\",\n      \"estimateDate\": 1427784646000,\n      \"nameOfWork\": \"Spillover DE\",\n      \"description\": \"Spillover Detailed Estimation for the proposed work\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"adminSanctionNumber\": \"{{sAdminSanctionNum}}\",\n      \"adminSanctionDate\": 1427784646000,\n      \"workValue\": 900,\n      \"estimateValue\": 1000,\n      \"projectCode\": {\n          \"code\": \"{{spilloverPC}}\"\n        },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": true,\n      \"abstractEstimateDetail\": {\n        \"nameOfWork\": \"{{sNameOfWork}}\",\n        \"estimateAmount\": \"{{sEstimateAmount}}\",\n        \"projectCode\": {\n          \"code\": \"{{sProjectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"multiYearEstimates\": [],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"8476e765666a43489f0029eefbd42072\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR65\"\n          },\n          \"uom\": {\n            \"code\": \"MTR\"\n          },\n          \"unitRate\": 300,\n          \"quantity\": 3,\n          \"estimateRate\": 900\n        }\n      ],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"accountCode\": \"123\",\n            \"name\": \"TAXFake\",\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\"\n          },\n          \"amount\": 100\n        }\n      ],\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\":{\n            \"glcode\": \"1981\"\n          },\n          \"amount\": 50\n        }\n      ],\n      \"estimateTechnicalSanctions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"technicalSanctionNumber\": \"{{sTechSanctionNum}}\",\n          \"technicalSanctionDate\": 1427784646000,\n          \"technicalSanctionBy\": {\n            \"userName\": \"clerk\"\n          }\n        }\n      ],\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"workFlowDetails\": {\n        \"action\": \"Create\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_create"
									]
								},
								"description": "Create Detailed Estimate"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Letter of Acceptance",
					"description": "",
					"item": [
						{
							"name": "Work Order",
							"description": "",
							"item": [],
							"_postman_isSubFolder": true
						},
						{
							"name": "LOA:50,51",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e01b86cf-2f16-47a1-9dfd-f757aa9e4415",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"loaNumber\", \"LOA-\"+num1);",
											"pm.environment.set(\"fileNumber\", \"FN-\"+num1);",
											"pm.environment.set(\"loaCRN\", \"CRN-LOA-\"+num1);",
											"pm.environment.get(\"sEstimateNum\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d9e1e87e-459e-4d50-90f4-f27c22f82598",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].id);",
											"pm.environment.set(\"loaMBSheet1\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].loaMeasurements[0].id);",
											"pm.environment.set(\"loaMBSheet2\",jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].loaMeasurements[0].id);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Search sLOA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \n  \"letterofacceptances\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"contractor\": {\n        \"code\": \"GRADE-A1\",\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"loaDate\": 1427784646000,\n      \"loaNumber\": null,\n      \"contractPeriod\": 5,\n      \"emdAmountDeposited\": 200,\n      \"stampPaperAmount\": 100,\n      \"engineerIncharge\": \"Ritesh\",\n      \"defectLiabilityPeriod\": 10,\n      \"tenderFinalizedPercentage\": 0,\n      \"loaAmount\": 900,\n      \"approvedDate\": 1427784646000,\n      \"fileNumber\": \"{{fileNumber}}\",\n      \"fileDate\": 1427784646000,\n      \"councilResolutionNumber\": \"{{loaCRN}}\",\n      \"councilResolutionDate\": 1427784646000,\n      \"spillOverFlag\": true,\n      \"status\": \"APPROVED\",\n      \"letterOfAcceptanceEstimates\":[\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"detailedEstimate\": {\n          \"estimateNumber\": \"{{sDENum}}\"\n          },\n          \"workCompletionDate\": 1427784646000,\n          \"loaActivities\": [\n            {\n               \"tenantId\": \"{{tenantId}}\",\n               \"collectionMode\":\"CASH\",\n               \"percentage\": 10,\n               \"amount\": 100\n          }\n          ],\n          \"estimateLOAAmount\": 900\n      }\n      ],\n      \"securityDeposits\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-workorder/v1/letterofacceptances/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-workorder",
										"v1",
										"letterofacceptances",
										"_create"
									]
								},
								"description": "business validation num 50 51"
							},
							"response": []
						},
						{
							"name": "LOA:54",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e01b86cf-2f16-47a1-9dfd-f757aa9e4415",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"loaNumber\", \"LOA-\"+num1);",
											"pm.environment.set(\"fileNumber\", \"FN-\"+num1);",
											"pm.environment.set(\"loaCRN\", \"CRN-LOA-\"+num1);",
											"pm.environment.get(\"sEstimateNum\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d9e1e87e-459e-4d50-90f4-f27c22f82598",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].id);",
											"pm.environment.set(\"loaMBSheet1\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].loaMeasurements[0].id);",
											"pm.environment.set(\"loaMBSheet2\",jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].loaMeasurements[0].id);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Search sLOA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \n  \"letterofacceptances\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"contractor\": {\n        \"code\": null,\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"loaDate\": 1427784646000,\n      \"loaNumber\": \"{{loaNumber}}\",\n      \"contractPeriod\": 5,\n      \"emdAmountDeposited\": 200,\n      \"stampPaperAmount\": 100,\n      \"engineerIncharge\": null,\n      \"defectLiabilityPeriod\": 10,\n      \"tenderFinalizedPercentage\": 0,\n      \"loaAmount\": 900,\n      \"approvedDate\": 1427784646000,\n      \"fileNumber\": \"{{fileNumber}}\",\n      \"fileDate\": 1427784646000,\n      \"councilResolutionNumber\": \"{{loaCRN}}\",\n      \"councilResolutionDate\": 1427784646000,\n      \"spillOverFlag\": true,\n      \"status\": \"APPROVED\",\n      \"letterOfAcceptanceEstimates\":[\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"detailedEstimate\": {\n          \"estimateNumber\": \"{{sDENum}}\"\n          },\n          \"workCompletionDate\": 1427784646000,\n          \"loaActivities\": [\n            {\n               \"tenantId\": \"{{tenantId}}\",\n               \"collectionMode\":\"CASH\",\n               \"percentage\": 10,\n               \"amount\": 100\n          }\n          ],\n          \"estimateLOAAmount\": 900\n      }\n      ],\n      \"securityDeposits\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-workorder/v1/letterofacceptances/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-workorder",
										"v1",
										"letterofacceptances",
										"_create"
									]
								},
								"description": "business validaion num 54"
							},
							"response": []
						},
						{
							"name": "LOA:55",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e01b86cf-2f16-47a1-9dfd-f757aa9e4415",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"loaNumber\", \"LOA-\"+num1);",
											"pm.environment.set(\"fileNumber\", \"FN-\"+num1);",
											"pm.environment.set(\"loaCRN\", \"CRN-LOA-\"+num1);",
											"pm.environment.get(\"sEstimateNum\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d9e1e87e-459e-4d50-90f4-f27c22f82598",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].id);",
											"pm.environment.set(\"loaMBSheet1\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].loaMeasurements[0].id);",
											"pm.environment.set(\"loaMBSheet2\",jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].loaMeasurements[0].id);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Search sLOA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \n  \"letterofacceptances\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"contractor\": {\n        \"code\": \"GRADE-A1\",\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"loaDate\": 1396268749000,\n      \"loaNumber\": \"{{loaNumber}}\",\n      \"contractPeriod\": 5,\n      \"emdAmountDeposited\": 200,\n      \"stampPaperAmount\": 100,\n      \"engineerIncharge\": \"Ritesh\",\n      \"defectLiabilityPeriod\": 10,\n      \"tenderFinalizedPercentage\": 0,\n      \"loaAmount\": 900,\n      \"approvedDate\": 1396268749000,\n      \"fileNumber\": \"{{fileNumber}}\",\n      \"fileDate\": 1396268749000,\n      \"councilResolutionNumber\": \"{{loaCRN}}\",\n      \"councilResolutionDate\": 1427784646000,\n      \"spillOverFlag\": true,\n      \"status\": \"APPROVED\",\n      \"letterOfAcceptanceEstimates\":[\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"detailedEstimate\": {\n          \"estimateNumber\": \"{{sDENum}}\"\n          },\n          \"workCompletionDate\": 1427784646000,\n          \"loaActivities\": [\n            {\n               \"tenantId\": \"{{tenantId}}\",\n               \"collectionMode\":\"CASH\",\n               \"percentage\": 10,\n               \"amount\": 100\n          }\n          ],\n          \"estimateLOAAmount\": 900\n      }\n      ],\n      \"securityDeposits\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-workorder/v1/letterofacceptances/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-workorder",
										"v1",
										"letterofacceptances",
										"_create"
									]
								},
								"description": "Business validation"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Measurement Book",
					"description": "",
					"item": [
						{
							"name": "Create MB",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"MB2\",\n      \"contractorComments\": \"Second MB\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"20\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"0a6dc1fcb5694224ba8f4915a63864e0\",\n        \"letterOfAcceptance\": \"6ed57296787d4d92a5fc2678eaba2cb8\",\n        \"detailedEstimate\": {\n          \"id\": \"99c9cd02e0f64589a68ac404acb28fe5\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"Spillover/DE/ENG/7513\"\n        }\n      },\n      \"revisionLOA\": null,\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"measurementBook\": null,\n          \"quantity\": \"10\",\n          \"rate\": \"100\",\n          \"remarks\": \"remarks\",\n          \"amount\": 1000,\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"sheet remarks\",\n              \"number\": 1,\n              \"length\": 10,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 10,\n              \"measurementBookDetail\": null,\n              \"loaMeasurementSheet\": null\n            }\n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"1000\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": [],\n      \"workFlowDetails\": {\n        \"action\": \"create\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "Create MB for the LOA."
							},
							"response": []
						},
						{
							"name": "Search MB",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_search?tenantId={{tenantId}}&ids=c2ad65c45e864be181ca3b1f88b1c183",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "c2ad65c45e864be181ca3b1f88b1c183",
											"equals": true
										}
									]
								},
								"description": "Search MB"
							},
							"response": []
						},
						{
							"name": "MB:94",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": null,\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId1}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            }\n          ]\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId2}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }\n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": "MDMS data validation"
							},
							"response": []
						},
						{
							"name": "MB:99",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96762262-bcdb-403d-9986-ecfd9b039f1f",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"// while(MBdate !== futureDate){",
											"//  MBdate = WO and LOA date   ",
											"// }",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450352509000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId1}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            }\n          ]\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId2}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }\n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": "1. MB date should not accept future date\r\n2. MB date  >= WO and LOA date\r\n3. If offline status is mandatory for regular then we need to check MB date >= work commencement date"
							},
							"response": []
						},
						{
							"name": "MB:100",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"4\",\n          \"rate\": \"900\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 900,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"identifier\": \"A\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }            \n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": "\"Any New MB,\nMB date >= all its previous MB date (if previous MB exists) excluding cancelled MBs\""
							},
							"response": []
						},
						{
							"name": "MB:101",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"4\",\n          \"rate\": \"900\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 900,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"identifier\": \"A\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }            \n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": "MB issue date should be prior to MB date"
							},
							"response": []
						},
						{
							"name": "MB:102,103",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"0\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId1}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            }\n          ]\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId2}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }\n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"0\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": "MB amount  > 0"
							},
							"response": []
						},
						{
							"name": "MB:104",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": "Atleast one MB details is mandatory (can be Tendered / non tendered / lumpsum)"
							},
							"response": []
						},
						{
							"name": "MB:106,7,8,11",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": \"APPROVED\",\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"4\",\n          \"rate\": \"900\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 900,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"identifier\": \"A\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }            \n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": "1. Legacy MB, MB date is user entered and it can past date.\r\n2. Legacy MB can only be for spill over WO and LOA\r\n3. In case of legacy, approved date = mb date. In case of regular approved date is based on status change(Approved status)"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Functional Test",
			"description": "",
			"item": [
				{
					"name": "Abstract Estimate",
					"description": "Abstract Estimate with workflow",
					"item": [
						{
							"name": "Login as Clerk",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Tenant ID is default\"] = jsonData.UserRequest.roles[0].tenantId;",
											"",
											"postman.setNextRequest(\"Create Estimate\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "clerk",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Estimate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9e50aeaf-1e9c-41a4-843d-05971b6b6fe2",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"epochDate\", epoch);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7a3dc42e-af35-40fc-ae78-2e285d2ad77d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"response\", jsonData);",
											"pm.environment.set(\"AE_id\", jsonData.abstractEstimates[0].id);",
											"pm.environment.set(\"AEdetails_id\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
											"pm.environment.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);",
											"pm.globals.set(\"AE_workflow\", jsonData.abstractEstimates[0].abstractEstimateNumber);",
											"pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
											"pm.environment.set(\"stateId\", jsonData.abstractEstimates[0].stateId);",
											"",
											"postman.setNextRequest(\"Search Estimate\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Hospital Construction Project Estimation for the proposed work\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUPBSUP\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": false,\n      \"detailedEstimateCreated\": false,\n      \"implementationPeriod\": 1,\n      \"fundAvailable\": true,\n      \"pmcRequired\": false,\n      \"workProposedAsPerDP\": false,\n      \"dpRemarks\": \"DP Remarks\",\n      \"landAssetRequired\": false,\n      \"noOfLands\": null,\n      \"otherAssetSpecificationRemarks\": \"Other Remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital Building work\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Create\",\n        \"assignee\": 459\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Estimate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59240b63-3c9f-4099-90a7-519398c498da",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Logout as Clerk\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{AE_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{AE_id}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Logout as Clerk",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3181149-f32b-436b-810c-101108f83715",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"postman.setNextRequest(\"Login as HOD\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Login as HOD",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce8af706-54e5-455c-9d89-0c3dda536fae",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"postman.setNextRequest(\"Update Estimate\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "10001",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Estimate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da95bda8-1170-4fd7-9d9f-3ae332053876",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
											"postman.setNextRequest(\"Search Estimate Checked\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1403f27e-55f6-4481-93ba-c4ba2768aeed",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{AE_workflow}}\",\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"status\": \"{{status}}\",\n      \"stateId\": \"{{stateId}}\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n    \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": false,\n      \"detailedEstimateCreated\": false,\n      \"dpRemarks\": \"Estimation Approved by HOD\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Submit\",\n        \"assignee\": 509\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_update"
									]
								},
								"description": "@JE login"
							},
							"response": []
						},
						{
							"name": "Search Estimate Checked",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1817c88-c14a-48b1-86a7-17bbfe468b51",
										"type": "text/javascript",
										"exec": [
											"postman.setNextRequest(\"Logout as HOD\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&abstractEstimateNumbers={{AE_workflow}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "abstractEstimateNumbers",
											"value": "{{AE_workflow}}",
											"equals": true
										}
									]
								},
								"description": "@JE login"
							},
							"response": []
						},
						{
							"name": "Logout as HOD",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d72a57c7-1e4b-4d6d-9168-ea1114f50096",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"postman.setNextRequest(\"Login as ACC\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Login as ACC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f004581-6c45-4f6d-9b04-0e321ff9e8e9",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"postman.setNextRequest(\"Update Estimate (FS)\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "10001",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Estimate (FS)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "66e73e74-d525-425c-993c-462b6b9b4d8f",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.globals.set(\"projectCode\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].projectCode.code);",
											"pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
											"postman.setNextRequest(\"Search Estimate FS\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "276a0fcd-5a6f-4604-a3f6-9d3b83c136e0",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"pm.environment.set(\"financialSanctionNumber\", \"FS-ENG-NS-\"+year+\"-\"+num1);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{AE_workflow}}\",\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"status\": \"{{status}}\",\n      \"stateId\": \"{{stateId}}\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n    \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": \"false\",\n      \"billsCreated\": \"false\",\n      \"spillOverFlag\": \"false\",\n      \"detailedEstimateCreated\": \"false\",\n      \"dpRemarks\": \"Estimation Approved by HOD\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],\n      \"financialSanctionNumber\": \"{{financialSanctionNumber}}\",\n      \"financialSanctionDate\": \"{{epochDate}}\",\n      \"financialSanctionBy\": {\n        \"userName\": \"10002\"\n      },\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital 1\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Submit\",\n        \"assignee\": 510\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_update"
									]
								},
								"description": "@CE login"
							},
							"response": []
						},
						{
							"name": "Search Estimate FS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35bd05a3-0348-4738-b34d-1b87e964c9dd",
										"type": "text/javascript",
										"exec": [
											"postman.setNextRequest(\"Logout as ACC\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{AE_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{AE_id}}",
											"equals": true
										}
									]
								},
								"description": "@CE login"
							},
							"response": []
						},
						{
							"name": "Logout as ACC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "63dfd7de-b53f-454f-b57c-ce323b0d6982",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"postman.setNextRequest(\"Login as CE\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Login as CE",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14574c10-c0e9-478e-a4de-4eede4639783",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"postman.setNextRequest(\"Update Estimate (AS)\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "10002",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Estimate (AS)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0907ba01-9a41-44bf-a312-20cd5f5e8bb7",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bddbdfb2-dff3-455c-af80-ef153d83ff00",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"status\", jsonData.abstractEstimates[0].status);",
											"postman.setNextRequest(\"Search Estimate AS\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"userInfo\": {\n     \"tenantId\": \"{{tenantId}}\"\n    }\n  },\n  \"abstractEstimates\": [\n    {\n      \"id\": \"{{AE_id}}\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{AE_workflow}}\",\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"subject\": \"Normal AE: Hospital Construction Project Work\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"description\": \"Abstract Estimate for Project Cost Estimation\",\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"dateOfProposal\": \"{{epochDate}}\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"status\": \"{{status}}\",\n      \"stateId\": \"{{stateId}}\",\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n    \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"ward_1\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": \"{{epochDate}}\",\n      \"workOrderCreated\": false,\n      \"billsCreated\": false,\n      \"spillOverFlag\": false,\n      \"detailedEstimateCreated\": false,\n      \"dpRemarks\": \"Estimation Approved by HOD\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": \"{{epochDate}}\",\n      \"adminSanctionBy\": {\n        \"userName\": \"10002\"\n      },\n      \"abstractEstimateDetails\": [\n        {\n          \"id\": \"{{AEdetails_id}}\",\n          \"projectCode\": {\n            \"code\": \"{{projectCode}}\"\n          },\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hspital 2\",\n          \"estimateAmount\": 10000\n        }\n      ],\n      \"workFlowDetails\": {\n        \"action\": \"Approve\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_update",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_update"
									]
								},
								"description": "@CE login"
							},
							"response": []
						},
						{
							"name": "Search Estimate AS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d84996a-e4d0-4770-aade-784ced3c5663",
										"type": "text/javascript",
										"exec": [
											"postman.setNextRequest(\"Logout as CE\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{AE_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}"
										},
										{
											"key": "ids",
											"value": "{{AE_id}}"
										}
									]
								},
								"description": "@CE login"
							},
							"response": []
						},
						{
							"name": "Logout as CE",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Detailed Estimate",
					"description": "",
					"item": [
						{
							"name": "Login as Clerk",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Tenant ID is default\"] = jsonData.UserRequest.roles[0].tenantId;",
											"",
											"postman.setNextRequest(\"Create Estimate\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "clerk",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search Project Code",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\":{\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\" : \"12345678\",\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n    }\n }"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/projectcodes/_search?tenantId={{tenantId}}&codes={{projectCode}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"projectcodes",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "codes",
											"value": "{{projectCode}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search SOR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0099e180-4d39-47a4-b443-99045bd2f019",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"",
											"pm.globals.set(\"sorCode\", jsonData.scheduleOfRates[0].code);",
											"pm.globals.set(\"sorId\", jsonData.scheduleOfRates[0].id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"RequestInfo\":{\r\n  \"apiId\": \"works-masters\",\r\n  \"ver\": \"1.0\",\r\n  \"ts\": 0,\r\n  \"action\": \"search\",\r\n  \"did\": \"1\",\r\n  \"key\": \"string\",\r\n  \"msgId\": \"string\",\r\n  \"requesterId\": \"clerk\",\r\n  \"authToken\": \"{{access_token}}\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{url}}/works-masters/v1/scheduleofrates/_search?tenantId={{tenantId}}&sorCodes={{sorCode}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-masters",
										"v1",
										"scheduleofrates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "sorCodes",
											"value": "{{sorCode}}",
											"equals": true
										}
									]
								},
								"description": "Search SOR master data"
							},
							"response": []
						},
						{
							"name": "Create DE Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5191229-13b9-458c-bb83-59829be28037",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"epochDate\", epoch);",
											"pm.globals.get(\"projectCode\");",
											"pm.globals.get(\"sorCode\");",
											"pm.globals.get(\"sorId\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"yosadhara\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateDate\": \"{{epochDate}}\",\n      \"nameOfWork\": \"Detailed Estimation for the proposed work\",\n      \"description\": \"Detailed estimate create\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"abstractEstimateDetail\": {\n        \"projectCode\": {\n          \"code\": \"{{projectCode}}\"\n        },\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"workValue\": 900,\n      \"estimateValue\": 1010,\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Sarjapur Road\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": false,\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n            \"glcode\": \"1234\"\n          },\n          \"amount\": 1\n        }\n      ],\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"id\": 1,\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"name\": \"test\",\n            \"accountCode\": \"test\"\n          },\n          \"amount\": 110\n        }\n      ],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR64\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 1000,\n          \"quantity\": 1.01,\n          \"estimateRate\": 1010\n        }\n      ],\n      \"function\": {\n        \"code\": \"2\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_create"
									]
								},
								"description": "Create Detailed Estimate with workflow"
							},
							"response": []
						},
						{
							"name": "Search DE Normal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_search?tenantId={{tenantId}}&pageSize=500",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "pageSize",
											"value": "500",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Logout as Clerk",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3181149-f32b-436b-810c-101108f83715",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"postman.setNextRequest(\"Login as HOD\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Spillover Flow",
					"description": "Start with the AE(Create_Search) > DE(Create_Search) > LOA(Create_Search) > WO(Create_Search)",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cbca48d7-56f4-4c0d-9dd6-c00d2c0e3a45",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"pm.globals.set(\"userName\", jsonData.UserRequest.userName);",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"postman.setNextRequest(\"Create sEstimate\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "clerk",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create sEstimate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2aee983f-24d8-4c41-9b7e-915d8deb02b8",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"var estimateAmount = [1000, 10000, 100000];",
											"",
											"pm.environment.set(\"abstractEstimateNumber\", \"AE/ENG/\"+num1);",
											"pm.environment.set(\"referenceNumber\", \"RefNum\"+num1);",
											"pm.environment.set(\"adminSanctionNumber\", \"ADN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"financialSanctionNumber\", \"FS-\"+year+\"-\"+num1);",
											"pm.environment.set(\"councilResolutionNumber\", \"CRN-\"+year+\"-\"+num1);",
											"pm.environment.set(\"sProjectCode\", \"WIN-\"+year+\"-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f9a3c074-1e78-4b21-afb5-0f8e09f1e7c2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"sAEId\", jsonData.abstractEstimates[0].id);",
											"pm.environment.set(\"sAEdetailsId\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].id);",
											"pm.environment.set(\"sAEstatus\", jsonData.abstractEstimates[0].status.code);",
											"",
											"pm.test(\"Abstract Estimate Number generated\", function () {",
											"pm.expect(pm.environment.get(\"abstractEstimateNumber\")).to.include(jsonData.abstractEstimates[0].abstractEstimateNumber);",
											"});",
											"pm.test(\"Abstract Estimate ID\", function () {",
											"pm.expect(pm.environment.get(\"sAEId\")).to.include(jsonData.abstractEstimates[0].id);",
											"});",
											"postman.setNextRequest(\"Search sEstimate\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"abstractEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"abstractEstimateNumber\": \"{{abstractEstimateNumber}}\",\n      \"dateOfProposal\": 1427784646000,\n      \"subject\": \"Spillover AE - Project Estimation\",\n      \"referenceType\": {\n        \"code\":\"Demandfrompublic\"\n      },\n      \"referenceNumber\": \"{{referenceNumber}}\",\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"description\": \"Spillover AE Project Estimation for the proposed work\",\n      \"documentDetails\": [],\n      \"assetDetails\": [],      \n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      },\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"Tendering\"\n      },\n      \"fund\": {\n        \"code\": \"1\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"adminSanctionNumber\": \"{{adminSanctionNumber}}\",\n      \"adminSanctionDate\": 1427784646000,\n      \"adminSanctionBy\": {\n        \"userName\": \"clerk\"\n      },\n      \"financialSanctionNumber\": \"{{financialSanctionNumber}}\",\n      \"financialSanctionDate\": 1427784646000,\n      \"financialSanctionBy\": {\n        \"userName\": \"clerk\"\n      },\n      \"typeOfWork\": {\n        \"code\": \"Buildings\"\n      },\n      \"subTypeOfWork\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"locality\": {\n        \"code\": \"locality_1\"\n      },\n      \"workCategory\": \"NON_SLUM\",\n      \"councilResolutionNumber\": \"{{councilResolutionNumber}}\",\n      \"councilResolutionDate\": 1427784646000,\n      \"spillOverFlag\": true,\n      \"detailedEstimateCreated\": true,\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"implementationPeriod\": 5,\n      \"fundAvailable\": true,\n      \"fundSanctioningAuthority\": \"Municipal\",\n      \"pmcRequired\": false,\n      \"pmcType\": \"pmc type\",\n      \"pmcName\":{\n        \"code\": \"GRADE-A1\"\n      },\n      \"workProposedAsPerDP\": false,\n      \"dpRemarks\": \"Dp remarks\",\n      \"landAssetRequired\": true,\n      \"noOfLands\": 10,\n      \"otherAssetSpecificationRemarks\": \"Other remarks\",\n      \"abstractEstimateDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"nameOfWork\": \"Hospital Building Construction\",\n          \"estimateAmount\": 1000,\n          \"grossAmountBilled\": 900,\n      \"projectCode\": {\n            \"code\": \"{{sProjectCode}}\"\n         }          \n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_create"
									]
								},
								"description": "Create APi for Data entry type of work estimation"
							},
							"response": []
						},
						{
							"name": "Search sEstimate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c4cab20-fd37-4e81-ba70-a50d50c4a6c3",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"sEstimateAmount\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].estimateAmount);",
											"pm.environment.set(\"sProjectCode\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].projectCode.code);",
											"pm.environment.set(\"sNameOfWork\", jsonData.abstractEstimates[0].abstractEstimateDetails[0].nameOfWork);",
											"",
											"pm.test(\"Spillover AE status is Admin Sanctioned\", function () {",
											"    pm.expect(\"ADMINISTRATIVE_SANCTIONED\").to.include(jsonData.abstractEstimates[0].status.code);",
											"    pm.environment.set(\"sAEstatus\", jsonData.abstractEstimates[0].status.code);",
											"});",
											"pm.test(\"Abstract Estimate Number matches\", function () {",
											"pm.expect(pm.environment.get(\"abstractEstimateNumber\")).to.include(jsonData.abstractEstimates[0].abstractEstimateNumber);",
											"});",
											"pm.test(\"Abstract Estimate ID matches\", function () {",
											"pm.expect(pm.environment.get(\"sAEId\")).to.include(jsonData.abstractEstimates[0].id);",
											"});",
											"postman.setNextRequest(\"Create sDE\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/abstractestimates/_search?tenantId={{tenantId}}&ids={{sAEId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"abstractestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{sAEId}}",
											"equals": true
										}
									]
								},
								"description": "Search AE for Spillover"
							},
							"response": []
						},
						{
							"name": "Create sDE",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9112ef56-a90c-49b7-9260-937bc798ff4f",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.get(\"sProjectCode\");",
											"pm.environment.get(\"sEstimateAmount\");",
											"pm.environment.get(\"sNameOfWork\");",
											"pm.environment.set(\"sDENum\", \"Spillover/DE/ENG/\"+num1);",
											"pm.environment.set(\"sDETechSanNum\", \"Spillover/DE/TS/\"+num1);",
											"pm.environment.set(\"sDEAdnSanNum\", \"Spillover/DE/ADN/\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fd60a11d-ad06-46c8-b72c-b12b967365dc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var jsonData = JSON.parse(responseBody);",
											"var workValue = jsonData.detailedEstimates[0].workValue;",
											"var estimateValue = jsonData.detailedEstimates[0].estimateValue;",
											"var activityAmount = jsonData.detailedEstimates[0].estimateActivities[0].estimateRate;",
											"",
											"pm.environment.set(\"sDEstatus\", jsonData.detailedEstimates[0].status.code);",
											"pm.environment.set(\"sDEId\", jsonData.detailedEstimates[0].id);",
											"postman.setNextRequest(\"Search sDE\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"1427784646000\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"detailedEstimates\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"estimateNumber\": \"{{sDENum}}\",\n      \"estimateDate\": 1427784646000,\n      \"nameOfWork\": \"{{sNameOfWork}}\",\n      \"description\": \"Spillover Detailed Estimation for the proposed work\",\n      \"department\": {\n        \"code\": \"ENG\"\n      },\n      \"adminSanctionNumber\": \"{{sDEAdnSanNum}}\",\n      \"adminSanctionDate\": 1427784646000,\n      \"workValue\": 900,\n      \"estimateValue\": 1000,\n      \"projectCode\": {\n        \"code\": \"{{sProjectCode}}\"\n      },\n      \"beneficiary\": \"GENERAL\",\n      \"modeOfAllotment\": {\n        \"code\": \"EProcurement\"\n      },\n      \"worksType\": {\n        \"code\": \"Buildings\"\n      },\n      \"worksSubtype\": {\n        \"code\": \"OFFICEBUILDINGS\"\n      },\n      \"natureOfWork\": {\n        \"code\": \"New\"\n      },\n      \"ward\": {\n        \"code\": \"172\"\n      },\n      \"location\": \"Roha, MH\",\n      \"workCategory\": \"NON_SLUM\",\n      \"workOrderCreated\": true,\n      \"billsCreated\": true,\n      \"spillOverFlag\": true,\n      \"abstractEstimateDetail\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{sAEId}}\",\n        \"nameOfWork\": \"{{sNameOfWork}}\",\n        \"estimateAmount\": \"{{sEstimateAmount}}\",\n        \"projectCode\": {\n          \"code\": \"{{sProjectCode}}\"\n        }\n      },\n      \"documentDetails\": [],\n      \"assets\": [],\n      \"multiYearEstimates\": [],\n      \"estimateActivities\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": {\n            \"id\": \"8476e765666a43489f0029eefbd42072\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"SOR65\"\n          },\n          \"nonSor\": null,\n          \"uom\": {\n            \"code\": \"MTR\"\n          },\n          \"unitRate\": 225,\n          \"estimateRate\": 225,\n          \"quantity\": 2,\n          \"serviceTaxPerc\": 0,\n          \"revisionType\": \"NON_TENDERED_ITEM\",\n          \"estimateMeasurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 1,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 1: with SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 2,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 2: with SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            }\n          ],\n          \"deleted\": false\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"scheduleOfRate\": null,\n          \"nonSor\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"description\": \"Man Power\",\n            \"uom\": {\n              \"code\": \"NOS\"\n            },\n            \"deleted\": false\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"unitRate\": 225,\n          \"quantity\": 2,\n          \"estimateRate\": 225,\n          \"serviceTaxPerc\": 0,\n          \"revisionType\": \"NON_TENDERED_ITEM\",\n          \"estimateMeasurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 1,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 1: with NON-SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"slNo\": 2,\n              \"identifier\": \"A\",\n              \"remarks\": \"Sheet 2: with NON-SOR\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1\n            }\n          ],\n          \"deleted\": false\n        }\n      ],\n      \"estimateOverheads\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"overhead\": {\n            \"accountCode\": \"123\",\n            \"name\": \"TAXFake\",\n            \"code\": \"TAXFake\",\n            \"tenantId\": \"{{tenantId}}\"\n          },\n          \"amount\": 100\n        }\n      ],\n      \"detailedEstimateDeductions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"chartOfAccounts\": {\n            \"glcode\": \"1981\"\n          },\n          \"amount\": 50\n        }\n      ],\n      \"estimateTechnicalSanctions\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"technicalSanctionNumber\": \"{{sDETechSanNum}}\",\n          \"technicalSanctionDate\": 1427784646000,\n          \"technicalSanctionBy\": {\n            \"userName\": \"clerk\"\n          }\n        }\n      ],\n      \"function\": {\n        \"code\": \"00\"\n      },\n      \"scheme\": {\n        \"code\": \"2906\"\n      },\n      \"subScheme\": {\n        \"code\": \"BSUP\"\n      },\n      \"budgetGroup\": {\n        \"name\": \"4122001-CWIP-Office Buildings\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_create"
									]
								},
								"description": "Create Detailed Estimate"
							},
							"response": []
						},
						{
							"name": "Search sDE",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fe15700-d00a-47fc-ba4e-b4d675b0d06e",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var jsonData = JSON.parse(responseBody);",
											"pm.test(\"Spillover AE status is Technical Sanctioned\", function () {",
											"    pm.expect(\"TECHNICAL_SANCTIONED\").to.include(jsonData.detailedEstimates[0].status.code);",
											"    pm.environment.set(\"sDEstatus\", jsonData.detailedEstimates[0].status.code);",
											"});",
											"pm.environment.set(\"sDEid\", jsonData.detailedEstimates[0].id);",
											"pm.test(\"Detailed Estimae Number matches\", function () {",
											"pm.expect(pm.environment.get(\"sDENum\")).to.include(jsonData.detailedEstimates[0].estimateNumber);",
											"});",
											"pm.test(\"Deatiled Estimae ID matches\", function () {",
											"pm.expect(pm.environment.get(\"sDEid\")).to.include(jsonData.detailedEstimates[0].id);",
											"});",
											"postman.setNextRequest(\"Create sLOA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-estimate/v1/detailedestimates/_search?tenantId={{tenantId}}&ids={{sDEId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-estimate",
										"v1",
										"detailedestimates",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{sDEId}}",
											"equals": true
										}
									]
								},
								"description": "Search Detailed Estimate by using params:\ntenantId\nspillOverFlag\nstatuses\ndetailedEstimateNumbers\nworkIdentificationNumbers\nabstractEstimateNumbers\nids\nfromDate\ntoDate\ndepartments\ntypeOfWork\nsubTypeOfWork\nfromAmount\ntoAmount\nnameOfWork\nwards\ncreatedBy\ncurrentOwner\npageSize\npageNumber\nsortBy"
							},
							"response": []
						},
						{
							"name": "Create sLOA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e01b86cf-2f16-47a1-9dfd-f757aa9e4415",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"",
											"pm.environment.set(\"loaNumber\", \"LOA-\"+num1);",
											"pm.environment.set(\"fileNumber\", \"FN-\"+num1);",
											"pm.environment.set(\"loaCRN\", \"CRN-LOA-\"+num1);",
											"pm.environment.get(\"sEstimateNum\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a5d61f00-c595-4550-b8cf-039f2bb3180d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].id);",
											"pm.environment.set(\"loaMBSheet1\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].loaMeasurements[0].id);",
											"pm.environment.set(\"loaMBSheet2\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].loaMeasurements[1].id);",
											"pm.environment.set(\"loaMBSheet3\",jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].loaMeasurements[0].id);",
											"pm.environment.set(\"loaMBSheet4\",jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].loaMeasurements[1].id);",
											"",
											"postman.setNextRequest(\"Search sLOA\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \n  \"letterofacceptances\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"contractor\": {\n        \"code\": \"GRADE-A1\",\n        \"tenantId\": \"{{tenantId}}\"\n      },\n      \"loaDate\": 1427784646000,\n      \"loaNumber\": \"{{loaNumber}}\",\n      \"contractPeriod\": 5,\n      \"emdAmountDeposited\": 200,\n      \"stampPaperAmount\": 100,\n      \"engineerIncharge\": {\n      \t\"code\": \"HOD\"\n      },\n      \"defectLiabilityPeriod\": 10,\n      \"tenderFinalizedPercentage\": 0,\n      \"loaAmount\": 900,\n      \"approvedDate\": 1427784646000,\n      \"fileNumber\": \"{{fileNumber}}\",\n      \"fileDate\": 1427784646000,\n      \"councilResolutionNumber\": \"{{loaCRN}}\",\n      \"councilResolutionDate\": 1427784646000,\n      \"spillOverFlag\": true,\n      \"status\": {\n        \"code\": \"APPROVED\"\n        },\n      \"letterOfAcceptanceEstimates\":[\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"detailedEstimate\": {\n          \"estimateNumber\": \"{{sDENum}}\"\n          },\n          \"workCompletionDate\": 1427784646000,\n          \"loaActivities\": [\n            {\n               \"tenantId\": \"{{tenantId}}\",\n               \"collectionMode\":\"CASH\",\n               \"percentage\": 10,\n               \"amount\": 100\n          }\n          ],\n          \"estimateLOAAmount\": 900\n      }\n      ],\n      \"securityDeposits\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-workorder/v1/letterofacceptances/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-workorder",
										"v1",
										"letterofacceptances",
										"_create"
									]
								},
								"description": "LOA for the spillover estimates"
							},
							"response": []
						},
						{
							"name": "Search sLOA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "532c25a2-440f-431e-9ab0-0e4566355448",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"loaId\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].letterOfAcceptance);",
											"pm.environment.set(\"loaNumber\", jsonData.letterOfAcceptances[0].loaNumber);",
											"pm.environment.set(\"loaStatus\", jsonData.letterOfAcceptances[0].status.code);",
											"pm.environment.set(\"loaEstimateId\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].id);",
											"pm.environment.set(\"loaActId1\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[0].id);",
											"pm.environment.set(\"loaActId2\", jsonData.letterOfAcceptances[0].letterOfAcceptanceEstimates[0].loaActivities[1].id);",
											"",
											"pm.test(\"LOA ID matches\", function () {",
											"pm.expect(pm.environment.get(\"loaId\")).to.include(jsonData.letterOfAcceptances[0].id);",
											"});",
											"pm.test(\"LOA Number matches\", function () {",
											"pm.expect(pm.environment.get(\"loaNumber\")).to.include(jsonData.letterOfAcceptances[0].loaNumber);",
											"});",
											"pm.test(\"LOA status as Approved matches\", function () {",
											"    pm.expect(\"APPROVED\").to.include(jsonData.letterOfAcceptances[0].status.code);",
											"});",
											"postman.setNextRequest(\"Create sWO\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"search\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/works-workorder/v1/letterofacceptances/_search?tenantId={{tenantId}}&loaNumbers={{loaNumber}}&ids={{loaId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-workorder",
										"v1",
										"letterofacceptances",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "loaNumbers",
											"value": "{{loaNumber}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{loaId}}",
											"equals": true
										}
									]
								},
								"description": "Search LOA"
							},
							"response": []
						},
						{
							"name": "Create sWO",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "239540d5-d8d9-4973-ad24-99f80fead0d8",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"var today = new Date();",
											"var epoch = Math.round(today.getTime()/1000);",
											"var year = today.getFullYear();",
											"pm.environment.set(\"workOrderNumber\", \"WO-\"+num1);",
											"pm.environment.get(\"loaId\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b39e24dd-3ca7-4866-a092-296c9f4ff00b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"woID\", jsonData.workOrders[0].id);",
											"pm.environment.set(\"woNum\", jsonData.workOrders[0].workOrderNumber);",
											"postman.setNextRequest(\"Search sWO\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511171897140,\n    \"action\": \"create\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"clerk\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \n  \"workOrders\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"letterOfAcceptance\": {\n        \"id\": \"{{loaId}}\",\n        \"loaNumber\": \"{{loaNumber}}\",\n        \"tenantId\": \"{{tenantId}}\",\n        \"spillOverFlag\": true\n      },\n      \"workOrderDate\": 1427784646000,\n      \"workOrderNumber\": \"{{workOrderNumber}}\",\n      \"status\": {\n        \"code\": \"APPROVED\"\n        },\n      \"workOrderDetails\": [\n        {\n        \"tenantId\": \"{{tenantId}}\",\n        \"remarks\":\"CASH\",\n        \"editable\": true\n        }    ],\n      \"documentDetails\":[]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-workorder/v1/workorders/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-workorder",
										"v1",
										"workorders",
										"_create"
									]
								},
								"description": "Work Order for the spillover work"
							},
							"response": []
						},
						{
							"name": "Search sWO",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f353aa21-5a32-4351-8f07-104c93acef2f",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.get(\"loaNumber\");",
											"pm.environment.get(\"loaId\");",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"LOA ID matches\", function () {",
											"pm.expect(pm.environment.get(\"loaId\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].letterOfAcceptance);",
											"});",
											"pm.test(\"LOA Number matches\", function () {",
											"pm.expect(pm.environment.get(\"loaNumber\")).to.include(jsonData.workOrders[0].letterOfAcceptance.loaNumber);",
											"});",
											"pm.test(\"LOA Estimate ID matches\", function () {",
											"pm.expect(pm.environment.get(\"loaEstimateId\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].id);",
											"});",
											"pm.test(\"LOA Activity ID matches\", function () {",
											"pm.expect(pm.environment.get(\"loaActId1\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].loaActivities[0].id);",
											"pm.expect(pm.environment.get(\"loaActId2\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].loaActivities[1].id);",
											"});",
											"pm.test(\"Detailed Estimate ID matches\", function () {",
											"pm.expect(pm.environment.get(\"sDEid\")).to.include(jsonData.workOrders[0].letterOfAcceptance.letterOfAcceptanceEstimates[0].detailedEstimate.id);",
											"});",
											"pm.test(\"WO status as Approved matches\", function () {",
											"    pm.expect(\"APPROVED\").to.include(jsonData.workOrders[0].status.code);",
											"});",
											"postman.setNextRequest(\"Create sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"action\": \"search\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-workorder/v1/workorders/_search?tenantId={{tenantId}}&ids={{woID}}&workOrderNumbers={{woNum}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-workorder",
										"v1",
										"workorders",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{woID}}",
											"equals": true
										},
										{
											"key": "workOrderNumbers",
											"value": "{{woNum}}",
											"equals": true
										}
									]
								},
								"description": "Search work order for the spillover"
							},
							"response": []
						},
						{
							"name": "Create sMB",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e164fb59-8c9d-46fe-95ae-d8e3a77c2016",
										"type": "text/javascript",
										"exec": [
											"var num1 = Math.floor((Math.random() * 10000) + 1);",
											"pm.environment.set(\"mbRef\", \"MBref-\"+num1);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6c313bc0-735a-4b20-8aa9-7a814fe130a6",
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"MBid\", jsonData.measurementBooks[0].id);",
											"pm.environment.set(\"MBrefNo\", jsonData.measurementBooks[0].mbRefNo);",
											"",
											"postman.setNextRequest(\"Search sMB\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requestInfo\": {\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"clerk\",\n    \"apiId\": \"1\",\n    \"ver\": \"1.0\",\n    \"ts\": 1,\n    \"key\": \"abcdkey\",\n    \"authToken\": \"{{access_token}}\",\n    \"tenantId\": \"{{tenantId}}\"\n  },\n  \"measurementBooks\": [\n    {\n      \"tenantId\": \"{{tenantId}}\",\n      \"mbRefNo\": \"{{mbRef}}\",\n      \"contractorComments\": \"Measurement Book\",\n      \"mbDate\": \"1450434548000\",\n      \"mbIssuedDate\": \"1450434548000\",\n      \"mbAbstract\": \"Abstract MB\",\n      \"fromPageNo\": \"1\",\n      \"toPageNo\": \"100\",\n      \"letterOfAcceptanceEstimate\": {\n        \"tenantId\": \"{{tenantId}}\",\n        \"id\": \"{{loaEstimateId}}\",\n        \"letterOfAcceptance\": \"{{loaId}}\",\n        \"detailedEstimate\": {\n          \"id\": \"{{sDEid}}\",\n          \"tenantId\": \"{{tenantId}}\",\n          \"estimateNumber\": \"{{sDENum}}\"\n        }\n      },\n      \"status\": {\n      \t\"code\": \"APPROVED\"\n      },\n      \"measurementBookDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId1}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet1}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet2}}\"\n              }\n            }\n          ]\n        },\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"quantity\": \"2\",\n          \"rate\": \"450\",\n          \"remarks\": \"Remarks\",\n          \"amount\": 450,\n          \"loaActivity\": {\n            \"id\": \"{{loaActId2}}\"\n          },\n          \"measurementSheets\": [\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet3}}\"\n              }\n            },\n            {\n              \"tenantId\": \"{{tenantId}}\",\n              \"remarks\": \"Sheet remarks\",\n              \"number\": 1,\n              \"length\": 1,\n              \"width\": 1,\n              \"depthOrHeight\": 1,\n              \"quantity\": 1,\n              \"loaMeasurementSheet\": {\n                \"id\": \"{{loaMBSheet4}}\"\n              }\n            }\n          ]\n        }\n      ],\n      \"isLegacyMB\": \"true\",\n      \"mbAmount\": \"900\",\n      \"approvedDate\": \"1450434548000\",\n      \"documentDetails\": []\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_create"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search sMB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06f4ec09-d385-4509-aa04-ddd1c6535f92",
										"type": "text/javascript",
										"exec": [
											"postman.setNextRequest(\"Logout\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"resMsgId\": \"placeholder\",\n    \"msgId\": \"123\",\n    \"status\": \"200\",\n    \"apiId\": \"org.egov.works\",\n    \"ver\": \"1.1\",\n    \"ts\": \"123456789456\",\n    \"key\": null,\n    \"action\":\"search\",\n    \"authToken\":\"{{access_token}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/works-measurementbook/v1/measurementbooks/_search?tenantId={{tenantId}}&ids={{MBid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"works-measurementbook",
										"v1",
										"measurementbooks",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "ids",
											"value": "{{MBid}}",
											"equals": true
										}
									]
								},
								"description": "Search spillover MB"
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pgr\",\n    \"ver\": \"1.0\",\n    \"ts\": \"13-04-2017 12:13:30\",\n    \"action\": \"POST\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}