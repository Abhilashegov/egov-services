{
	"info": {
		"name": "eGov_PT_DataEntry",
		"_postman_id": "422beea0-3e53-509a-46ca-cff4635c6638",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
							"",
							"postman.setEnvironmentVariable(\"status\",\"one\");",
							"",
							"postman.setNextRequest(\"Search App Configuration Details\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
							"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
							"    postman.setEnvironmentVariable(\"password\",\"demo\");",
							"}",
							"",
							"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
							"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
							"    postman.setEnvironmentVariable(\"password\",\"demo\");",
							"}",
							"",
							"",
							"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
							"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
							"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
							"}",
							"",
							"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
							"    postman.setEnvironmentVariable(\"username\",\"uday\");",
							"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
							"}",
							"",
							"if(environment.url.has(\"http://mahaulb.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
							"    postman.setEnvironmentVariable(\"username\",\"30003\");",
							"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Authorization",
						"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "read",
							"type": "text"
						},
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user/oauth/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"oauth",
						"token"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search App Configuration Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
							"",
							"postman.setNextRequest(\"Search Revenue Zone Details\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1507879219052,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-property/property/appconfiguration/_search?tenantId={{tenantId}}&keyName=GuidanceBoundary&pageSize=200",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-property",
						"property",
						"appconfiguration",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "keyName",
							"value": "GuidanceBoundary",
							"equals": true
						},
						{
							"key": "pageSize",
							"value": "200",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search Revenue Zone Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status success\"] = jsonData.ResponseInfo.status.has(\"200\");",
							"",
							"var max = jsonData.Boundary.length - 1;",
							"",
							"var rand = 0;",
							"",
							"if(max > 0){",
							"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
							"}",
							"",
							"postman.setEnvironmentVariable(\"boundaryValue\", jsonData.Boundary[rand].id);",
							"",
							"postman.setNextRequest(\"Search Admin Ward Details\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \"RequestInfo\": {\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"yosadhara\",\n   \"authToken\": \"{{access_token}}\",\n   \"apiId\": \"\",\n   \"ver\": \"1.0\",\n   \"ts\": \"27-06-2017 10:30:12\",\n   \"key\": \"abcdkey\"\n    }\n }"
				},
				"url": {
					"raw": "{{url}}/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?boundaryTypeName=Zone&hierarchyTypeName=REVENUE&tenantId={{tenantId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"egov-location",
						"boundarys",
						"boundariesByBndryTypeNameAndHierarchyTypeName"
					],
					"query": [
						{
							"key": "boundaryTypeName",
							"value": "Zone",
							"equals": true
						},
						{
							"key": "hierarchyTypeName",
							"value": "REVENUE",
							"equals": true
						},
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search Admin Ward Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status success\"] = jsonData.ResponseInfo.status.has(\"200\");",
							"",
							"var max = jsonData.Boundary.length - 1;",
							"",
							"var rand = 0;",
							"",
							"if(max > 0){",
							"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
							"}",
							"",
							"postman.setEnvironmentVariable(\"adminWard\", jsonData.Boundary[rand].id);",
							"",
							"postman.setNextRequest(\"Search Locality Details\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \"RequestInfo\": {\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"yosadhara\",\n   \"authToken\": \"{{access_token}}\",\n   \"apiId\": \"\",\n   \"ver\": \"1.0\",\n   \"ts\": \"27-06-2017 10:30:12\",\n   \"key\": \"abcdkey\"\n    }\n }"
				},
				"url": {
					"raw": "{{url}}/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?boundaryTypeName=WARD&hierarchyTypeName=ADMINISTRATION&tenantId={{tenantId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"egov-location",
						"boundarys",
						"boundariesByBndryTypeNameAndHierarchyTypeName"
					],
					"query": [
						{
							"key": "boundaryTypeName",
							"value": "WARD",
							"equals": true
						},
						{
							"key": "hierarchyTypeName",
							"value": "ADMINISTRATION",
							"equals": true
						},
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search Locality Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status success\"] = jsonData.ResponseInfo.status.has(\"200\");",
							"",
							"var max = jsonData.Boundary.length - 1;",
							"",
							"var rand = 0;",
							"",
							"if(max > 0){",
							"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
							"    postman.setEnvironmentVariable(\"locality\", jsonData.Boundary[rand].id);",
							"}",
							"else{",
							"    postman.setEnvironmentVariable(\"locality\", null);",
							"}",
							"",
							"postman.setNextRequest(\"Search Guidance Value Boundary\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n \"RequestInfo\": {\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"yosadhara\",\n   \"authToken\": \"{{access_token}}\",\n   \"apiId\": \"\",\n   \"ver\": \"1.0\",\n   \"ts\": \"27-06-2017 10:30:12\",\n   \"key\": \"abcdkey\"\n    }\n }"
				},
				"url": {
					"raw": "http://egov-micro-qa.egovernments.org/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=mh.rohatest&boundaryTypeName=LOCALITY&hierarchyTypeName=LOCATION",
					"protocol": "http",
					"host": [
						"egov-micro-qa",
						"egovernments",
						"org"
					],
					"path": [
						"egov-location",
						"boundarys",
						"boundariesByBndryTypeNameAndHierarchyTypeName"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "mh.rohatest",
							"equals": true
						},
						{
							"key": "boundaryTypeName",
							"value": "LOCALITY",
							"equals": true
						},
						{
							"key": "hierarchyTypeName",
							"value": "LOCATION",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search Guidance Value Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status is Successful\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
							"",
							"postman.setEnvironmentVariable(\"guidanceValueBoundary\",jsonData.guidanceValueBoundaries[0].id);",
							"",
							"postman.setNextRequest(\"Search guidance value\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"RequestInfo\":{\n      \"authToken\":\"{{access_token}}\",\n      \"ts\":\"10032017\",\n      \"ver\":\"1.0\",\n      \"requesterId\":\"rajesh\",\n      \"action\":\"create\",\n      \"msgId\":\"20170310130900\",\n      \"apiId\":\"emp\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\"\n   }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-property/property/guidancevalueboundary/_search?tenantId={{tenantId}}&guidanceValueBoundary1={{boundaryValue}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-property",
						"property",
						"guidancevalueboundary",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "guidanceValueBoundary1",
							"value": "{{boundaryValue}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search guidance value",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
							"",
							"var max = jsonData.guidanceValues.length - 1;",
							"",
							"var rand = 0;",
							"",
							"if(max > 0){",
							"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
							"}",
							"",
							"postman.setEnvironmentVariable(\"structureType\", jsonData.guidanceValues[rand].structure);",
							"",
							"postman.setEnvironmentVariable(\"occupancyType\", jsonData.guidanceValues[rand].occupancy);",
							"",
							"postman.setEnvironmentVariable(\"usageType\", jsonData.guidanceValues[rand].usage);",
							"",
							"postman.setNextRequest(\"Search Depreciation AgeCodes\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"create\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"rajesh\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-calculator/properties/taxes/guidancevalue/_search?tenantId={{tenantId}}&boundary={{guidanceValueBoundary}}&validDate=31/12/2017",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-calculator",
						"properties",
						"taxes",
						"guidancevalue",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "boundary",
							"value": "{{guidanceValueBoundary}}",
							"equals": true
						},
						{
							"key": "validDate",
							"value": "31/12/2017",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search Depreciation AgeCodes",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Check status success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
							"",
							"var max = jsonData.depreciations.length - 1;",
							"",
							"var rand = 0;",
							"",
							"if(max > 0){",
							"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
							"}",
							"",
							"postman.setEnvironmentVariable(\"ageCode\", jsonData.depreciations[rand].code);",
							"",
							"postman.setNextRequest(\"Search PropertyType Code\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-property/property/depreciations/_search?tenantId={{tenantId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-property",
						"property",
						"depreciations",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search PropertyType Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
							"",
							"var max = jsonData.propertyTypes.length - 1;",
							"",
							"var rand = 0;",
							"",
							"if(max > 0){",
							"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
							"}",
							"",
							"postman.setEnvironmentVariable(\"propertyType\",jsonData.propertyTypes[rand].code);",
							"",
							"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
							"    postman.setNextRequest(\"Create data entry for open land\");",
							"}",
							"else{",
							" postman.setNextRequest(\"Create data entry for others\");   ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-property/property/propertytypes/_search?tenantId={{tenantId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-property",
						"property",
						"propertytypes",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create data entry for others",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
							"    tests[\"Status code is 400\"] = responseCode.code === 400;",
							"    tests[\"status is failed\"] = jsonData.ResponseInfo.status.has(\"FAILED\");",
							"    tests[\"code is 400\"] = jsonData.Errors[0].code.has(\"400\");",
							"    postman.setNextRequest(\"Create data entry with open land\")",
							"}",
							"else{",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"status is successful\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
							"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
							"tests[\"Structure Type matches\"] = environment.structureType.has(jsonData.properties[0].propertyDetail.floors[0].units[0].structure);",
							"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
							"tests[\"mobile num matches\"] = environment.mobileNo.has(jsonData.properties[0].owners[0].mobileNumber);",
							"tests[\"aadhar num matches\"] = environment.aadhaarNo.has(jsonData.properties[0].owners[0].aadhaarNumber);",
							"tests[\"doorNo matches\"] = environment.doorNo.has(jsonData.properties[0].address.addressNumber);",
							"postman.setEnvironmentVariable(\"upicnumber\", jsonData.properties[0].upicNumber);",
							"postman.setEnvironmentVariable(\"doorNo\", jsonData.properties[0].address.addressNumber);",
							"postman.setEnvironmentVariable(\"mobileNo\", jsonData.properties[0].owners[0].mobileNumber);",
							"postman.setEnvironmentVariable(\"aadhaarNo\", jsonData.properties[0].owners[0].aadhaarNumber);",
							"postman.setEnvironmentVariable(\"applicationNumber\", jsonData.properties[0].propertyDetail.applicationNo);",
							"pm.environment.set(\"status\", \"one\");",
							"postman.setNextRequest(\"Search Property\");",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
							"",
							"postman.setEnvironmentVariable(\"aadhaarNo\", \"202422\"+name2);",
							"",
							"postman.setEnvironmentVariable(\"mobileNo\", \"1924\"+name2);",
							"",
							"postman.setEnvironmentVariable(\"doorNo\", name2);",
							"",
							"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n   \"properties\":[  \n      {  \n         \"occupancyDate\":\"10/10/2017\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"oldUpicNumber\":\"{{doorNo}}\",\n         \"vltUpicNumber\":null,\n         \"sequenceNo\":\"123\",\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"tenantId\":\"{{tenantId}}\",\n            \"longitude\":null,\n            \"surveyNo\":null,\n            \"plotNo\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":\"962\",\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"102938\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1507891100181,\n               \"lastModifiedTime\":1507891100181\n            }\n         },\n         \"owners\":[  \n            {  \n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"name\":\"{{name}}\",\n               \"gender\":\"MALE\",\n               \"isPrimaryOwner\":true,\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"active\":true,\n               \"tenantId\":\"{{tenantId}}\",\n               \"salutation\":null,\n               \"pan\":null,\n               \"roles\":[  \n                  {  \n                     \"code\":\"CITIZEN\",\n                     \"name\":\"Citizen\"\n                  }\n               ],\n               \"issecondaryowner\":false,\n               \"ownershippercentage\":null,\n               \"ownerType\":null,\n               \"emailId\":null\n            }\n         ],\n         \"propertyDetail\":{  \n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017\",\n            \"reason\":\"CREATE\",\n            \"status\":\"ACTIVE\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017\",\n            \"isExempted\":false,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"subUsage\":null,\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":null,\n            \"totalBuiltupArea\":\"0100\",\n            \"undividedShare\":null,\n            \"noOfFloors\":\"4\",\n            \"isSuperStructure\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"floors\":[  \n               {  \n                  \"floorNo\":5,\n                  \"units\":[  \n                     {  \n                        \"floorNo\":5,\n                        \"electricMeterNo\":null,\n                        \"waterMeterNo\":null,\n                        \"exemptionReason\":null,\n                        \"rentCollected\":null,\n                        \"unitType\":\"ROOM\",\n                        \"unitNo\":\"109\",\n                        \"structure\":\"{{structureType}}\",\n                        \"usage\":\"{{usageType}}\",\n                        \"occupancyType\":\"{{occupancyType}}\",\n                        \"constCompletionDate\":\"10/10/2017\",\n                        \"occupancyDate\":\"10/10/2017\",\n                        \"isStructured\":true,\n                        \"builtupArea\":\"100\",\n                        \"assessableArea\":5,\n                        \"carpetArea\":\"5\",\n                        \"isAuthorised\":true\n                     }\n                  ]\n               }\n            ],\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"documents\":[  \n\n            ],\n            \"stateId\":null,\n            \"assessmentDates\":[  \n               {  \n                  \"name\":\"FIRSTASSESSMENT\",\n                  \"date\":\"11/10/2017\"\n               },\n               {  \n                  \"name\":\"CURRENTASSESSMENT\",\n                  \"date\":\"11/10/2017\"\n               },\n               {  \n                  \"name\":\"REVISEDASSESSMENT\",\n                  \"date\":null\n               },\n               {  \n                  \"name\":\"LASTASSESSMENT\",\n                  \"date\":\"11/12/2017\"\n               }\n            ],\n            \"builderDetails\":{  \n               \"certificateNumber\":null,\n               \"certificateCompletionDate\":null,\n               \"certificateReceiveDate\":null,\n               \"agencyName\":null,\n               \"licenseType\":null,\n               \"licenseNumber\":null\n            },\n            \"workFlowDetails\":{  \n               \"department\":null,\n               \"designation\":null,\n               \"assignee\":null,\n               \"action\":\"no\",\n               \"status\":null\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1507891100181,\n               \"lastModifiedTime\":1507891100181\n            }\n         },\n         \"vacantLand\":null,\n         \"gisRefNo\":null,\n         \"isAuthorised\":null,\n         \"boundary\":{  \n            \"revenueBoundary\":{  \n               \"code\":\"{{boundaryValue}}\",\n               \"name\":\"Zone A\"\n            },\n            \"locationBoundary\":{  \n               \"code\":\"{{locality}}\",\n               \"name\":\"Andhar Ali\"\n            },\n            \"adminBoundary\":{  \n               \"code\":null,\n               \"name\":null\n            },\n            \"guidanceValueBoundary\":\"{{guidanceValueBoundary}}\",\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1507891100181,\n               \"lastModifiedTime\":1507891100181\n            }\n         },\n         \"channel\":\"DATA_ENTRY\",\n         \"auditDetails\":{  \n            \"createdBy\":\"1\",\n            \"lastModifiedBy\":\"1\",\n            \"createdTime\":1507891100181,\n            \"lastModifiedTime\":1507891100181\n         }\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1507891100181,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-property/properties/_create?tenantId={{tenantId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-property",
						"properties",
						"_create"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create data entry with open land",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
							"",
							"postman.setEnvironmentVariable(\"upicnumber\", jsonData.properties[0].upicNumber);",
							"postman.setEnvironmentVariable(\"applicationNumber\", jsonData.properties[0].propertyDetail.applicationNo);",
							"",
							"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
							"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
							"tests[\"mobile num matches\"] = environment.mobileNo.has(jsonData.properties[0].owners[0].mobileNumber);",
							"tests[\"aadhar num matches\"] = environment.aadhaarNo.has(jsonData.properties[0].owners[0].aadhaarNumber);",
							"tests[\"doorNo matches\"] = environment.doorNo.has(jsonData.properties[0].address.addressNumber);",
							"",
							"pm.environment.set(\"status\", \"one\");",
							"",
							"postman.setNextRequest(\"Search Property\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n   \"properties\":[  \n      {  \n         \"occupancyDate\":\"10/10/2017\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"oldUpicNumber\":\"{{doorNo}}\",\n         \"vltUpicNumber\":null,\n         \"sequenceNo\":\"123\",\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"tenantId\":\"{{tenantId}}\",\n            \"longitude\":null,\n            \"surveyNo\":null,\n            \"plotNo\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1508137188609,\n               \"lastModifiedTime\":1508137188609\n            }\n         },\n         \"owners\":[  \n            {  \n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"name\":\"{{name}}\",\n               \"gender\":\"MALE\",\n               \"isPrimaryOwner\":true,\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"active\":true,\n               \"tenantId\":\"{{tenantId}}\",\n               \"salutation\":null,\n               \"pan\":null,\n               \"roles\":[  \n                  {  \n                     \"code\":\"CITIZEN\",\n                     \"name\":\"Citizen\"\n                  }\n               ],\n               \"issecondaryowner\":false,\n               \"ownershippercentage\":null,\n               \"ownerType\":null,\n               \"emailId\":null\n            }\n         ],\n         \"propertyDetail\":{  \n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017\",\n            \"reason\":\"CREATE\",\n            \"status\":\"ACTIVE\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017\",\n            \"isExempted\":false,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"subUsage\":null,\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":null,\n            \"totalBuiltupArea\":0,\n            \"undividedShare\":null,\n            \"noOfFloors\":\"3\",\n            \"isSuperStructure\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"floors\":null,\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"documents\":[  \n\n            ],\n            \"stateId\":null,\n            \"assessmentDates\":[  \n               {  \n                  \"name\":\"FIRSTASSESSMENT\",\n                  \"date\":\"11/10/2017\"\n               },\n               {  \n                  \"name\":\"CURRENTASSESSMENT\",\n                  \"date\":\"11/10/2017\"\n               },\n               {  \n                  \"name\":\"REVISEDASSESSMENT\",\n                  \"date\":null\n               },\n               {  \n                  \"name\":\"LASTASSESSMENT\",\n                  \"date\":\"11/10/2018\"\n               }\n            ],\n            \"builderDetails\":{  \n               \"certificateNumber\":null,\n               \"certificateCompletionDate\":null,\n               \"certificateReceiveDate\":null,\n               \"agencyName\":null,\n               \"licenseType\":null,\n               \"licenseNumber\":null\n            },\n            \"workFlowDetails\":{  \n               \"department\":null,\n               \"designation\":null,\n               \"assignee\":null,\n               \"action\":\"no\",\n               \"status\":null\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1508137188609,\n               \"lastModifiedTime\":1508137188609\n            }\n         },\n         \"vacantLand\":{  \n            \"surveyNumber\":\"surveynumber2\",\n            \"pattaNumber\":\"pattano1\",\n            \"marketValue\":\"5000\",\n            \"capitalValue\":\"7000\",\n            \"layoutApprovedAuth\":1,\n            \"layoutPermissionNo\":\"121031\",\n            \"layoutPermissionDate\":\"10/10/2017\",\n            \"resdPlotArea\":null,\n            \"nonResdPlotArea\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\"\n            }\n         },\n         \"gisRefNo\":null,\n         \"isAuthorised\":null,\n         \"boundary\":{  \n            \"revenueBoundary\":{  \n               \"code\":\"{{boundaryValue}}\"\n            },\n            \"locationBoundary\":{  \n               \"code\":\"{{locality}}\",\n               \"name\":null\n            },\n            \"adminBoundary\":{  \n               \"code\":null,\n               \"name\":null\n            },\n            \"guidanceValueBoundary\":\"{{guidanceValueBoundary}}\",\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1508137188609,\n               \"lastModifiedTime\":1508137188609\n            }\n         },\n         \"channel\":\"DATA_ENTRY\",\n         \"auditDetails\":{  \n            \"createdBy\":\"1\",\n            \"lastModifiedBy\":\"1\",\n            \"createdTime\":1508137188609,\n            \"lastModifiedTime\":1508137188609\n         }\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1508137188610,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-property/properties/_create?tenantId={{tenantId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-property",
						"properties",
						"_create"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search Property",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
							"",
							" if(jsonData.properties.length > 0){    ",
							"   for(var i=0;i<jsonData.properties.length;i++){",
							"       if(jsonData.properties[i].upicNumber.has(environment.upicnumber)){    ",
							"             tests[\"Body matches string\"] = environment.upicnumber.has(jsonData.properties[i].upicNumber);  ",
							"             postman.setEnvironmentVariable(\"userId\", jsonData.properties[i].owners[0].id);",
							"             tests[\"mobile num matches\"] = environment.mobileNo.has(jsonData.properties[i].owners[0].mobileNumber);",
							"             tests[\"aadhar num matches\"] = environment.aadhaarNo.has(jsonData.properties[i].owners[0].aadhaarNumber);",
							"             tests[\"doorNo matches\"] = environment.doorNo.has(jsonData.properties[i].address.addressNumber);",
							"             tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[i].propertyDetail.propertyType);",
							"             tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[i].propertyDetail.usage);",
							"             if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){}",
							"             else{ ",
							"                 tests[\"Structure Type matches\"] = environment.structureType.has(jsonData.properties[i].propertyDetail.floors[0].units[0].structure);}",
							"       }",
							"    }",
							" }",
							" else{",
							"     tests[\"Size is zero\"] = false;",
							" }",
							"",
							"switch(environment.status){",
							"    ",
							"    case \"one\" :",
							"        pm.environment.set(\"status\", \"two\");",
							"        postman.setNextRequest(\"Search Property\");",
							"        break;",
							"        ",
							"    case \"two\" :",
							"        pm.environment.set(\"status\", \"three\");",
							"        postman.setNextRequest(\"Search Property\");",
							"        break;    ",
							"        ",
							"    case \"three\" :",
							"        pm.environment.set(\"status\", \"four\");",
							"        postman.setNextRequest(\"Search Property\");",
							"        break;",
							"        ",
							"    case \"four\" :",
							"        pm.environment.set(\"status\", \"five\");",
							"        postman.setNextRequest(\"Search Property\");",
							"        break;",
							"        ",
							"    case \"five\" :",
							"        postman.setNextRequest(\"Get Tax Period Details\");",
							"        break;    ",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if(environment.status.has(\"one\")){",
							"    pm.environment.set(\"searchParameter\", \"upicNumber\");",
							"    pm.environment.set(\"searchValue\", environment.upicnumber);",
							"}",
							"",
							"if(environment.status.has(\"two\")){",
							"    pm.environment.set(\"searchParameter\", \"applicationNo\");",
							"    pm.environment.set(\"searchValue\", environment.applicationNumber);",
							"}",
							"",
							"if(environment.status.has(\"three\")){",
							"    pm.environment.set(\"searchParameter\", \"mobileNumber\");",
							"    pm.environment.set(\"searchValue\", environment.mobileNo);",
							"}",
							"",
							"if(environment.status.has(\"four\")){",
							"    pm.environment.set(\"searchParameter\", \"aadhaarNumber\");",
							"    pm.environment.set(\"searchValue\", environment.aadhaarNo);",
							"}",
							"",
							"if(environment.status.has(\"five\")){",
							"    pm.environment.set(\"searchParameter\", \"houseNoBldgApt\");",
							"    pm.environment.set(\"searchValue\", environment.doorNo);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/pt-property/properties/_search?tenantId={{tenantId}}&{{searchParameter}}={{searchValue}}&pageSize=500",
					"host": [
						"{{url}}"
					],
					"path": [
						"pt-property",
						"properties",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "{{searchParameter}}",
							"value": "{{searchValue}}",
							"equals": true
						},
						{
							"key": "pageSize",
							"value": "500",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Tax Period Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status is Success\"] = jsonData.ResponseInfo.status.has(\"200\");",
							"",
							"var rand = 0;",
							"",
							"var max = jsonData.TaxPeriods.length - 1;",
							"",
							"if(max > 0){",
							"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
							"}",
							"else{",
							"    tests[\"No Tax Periods for this businessService\"] = false;",
							"}",
							"",
							"postman.setEnvironmentVariable(\"fromDate\",jsonData.TaxPeriods[rand].fromDate);",
							"",
							"postman.setEnvironmentVariable(\"toDate\",jsonData.TaxPeriods[rand].toDate);",
							"",
							"postman.setNextRequest(\"Create Demand\");",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"create\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"rajesh\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}    "
				},
				"url": {
					"raw": "{{url}}/billing-service/taxperiods/_search?tenantId={{tenantId}}&service=PT",
					"host": [
						"{{url}}"
					],
					"path": [
						"billing-service",
						"taxperiods",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "service",
							"value": "PT",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create Demand",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status is success\"] = jsonData.ResponseInfo.status.has(\"201\");",
							"",
							"tests[\"Consumer code is correct\"] = jsonData.Demands[0].consumerCode.has(environment.upicnumber);",
							"tests[\"Consumer type is correct\"] = jsonData.Demands[0].consumerType.has(environment.propertyType);",
							"tests[\"owner id is correct\"] = (jsonData.Demands[0].owner.id.toString()).has(environment.userId);",
							"",
							"postman.setNextRequest(\"Search Demand\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"Demands\":[\n      {\n         \"id\":null,\n         \"tenantId\":\"{{tenantId}}\",\n         \"consumerCode\":\"{{upicnumber}}\",\n         \"consumerType\":\"{{propertyType}}\",\n         \"businessService\":\"PT\",\n         \"owner\":{\n            \"tenantId\":null,\n            \"id\":{{userId}},\n            \"userName\":null,\n            \"name\":null,\n            \"permanentAddress\":null,\n            \"mobileNumber\":null,\n            \"emailId\":null,\n            \"aadhaarNumber\":null\n         },\n         \"taxPeriodFrom\":{{fromDate}},\n         \"taxPeriodTo\":{{toDate}},\n         \"demandDetails\":[\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"CHQ_BOUNCE_PENALTY\",\n               \"taxAmount\":\"100\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"VACANT_TAX\",\n               \"taxAmount\":\"80\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"PT_TAX\",\n               \"taxAmount\":\"60\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"EMP_GUA_CESS\",\n               \"taxAmount\":\"40\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"EDU_CESS\",\n               \"taxAmount\":\"20\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"LIB_CESS\",\n               \"taxAmount\":\"10\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"LATE_PENALTY\",\n               \"taxAmount\":\"05\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            }\n         ],\n         \"minimumAmountPayable\":1,\n         \"auditDetail\":null\n      }\n   ],\n   \"RequestInfo\":{\n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1503742267841,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
				},
				"url": {
					"raw": "{{url}}/billing-service/demand/_update",
					"host": [
						"{{url}}"
					],
					"path": [
						"billing-service",
						"demand",
						"_update"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Search Demand",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Check status is success\"] = jsonData.ResponseInfo.status.has(\"200\");",
							"",
							"tests[\"Consumer code is correct\"] = jsonData.Demands[0].consumerCode.has(environment.upicnumber);",
							"tests[\"Consumer type is correct\"] = jsonData.Demands[0].consumerType.has(environment.propertyType);",
							"tests[\"owner id is correct\"] = (jsonData.Demands[0].owner.id.toString()).has(environment.userId);",
							"",
							"postman.setNextRequest(\"Logout\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"RequestInfo\":{\n      \"authToken\":\"{{access_token}}\",\n      \"ts\":\"10032017\",\n      \"ver\":\"1.0\",\n      \"requesterId\":\"rajesh\",\n      \"action\":\"create\",\n      \"msgId\":\"20170310130900\",\n      \"apiId\":\"emp\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\"\n   }\n}"
				},
				"url": {
					"raw": "{{url}}/billing-service/demand/_search?tenantId={{tenantId}}&consumerCode={{upicnumber}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"billing-service",
						"demand",
						"_search"
					],
					"query": [
						{
							"key": "tenantId",
							"value": "{{tenantId}}",
							"equals": true
						},
						{
							"key": "consumerCode",
							"value": "{{upicnumber}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
				},
				"url": {
					"raw": "{{url}}/user/_logout?access_token={{access_token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"_logout"
					],
					"query": [
						{
							"key": "access_token",
							"value": "{{access_token}}",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}