{
	"variables": [],
	"info": {
		"name": "eGov_PropertyTax",
		"_postman_id": "2c440831-113f-7ce6-7d5f-aebc3fdf5558",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "commons",
			"description": "",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
									"",
									"postman.setNextRequest(\"UsageMaster Create\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
									"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
									"    postman.setEnvironmentVariable(\"password\",\"demo\");",
									"}",
									"",
									"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
									"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
									"    postman.setEnvironmentVariable(\"password\",\"demo\");",
									"}",
									"",
									"",
									"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
									"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
									"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
									"}",
									"",
									"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
									"    postman.setEnvironmentVariable(\"username\",\"uday\");",
									"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/user/oauth/token",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "read",
									"type": "text"
								},
								{
									"key": "tenantId",
									"value": "{{tenantId}}",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{url}}/user/_logout?access_token={{access_token}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"_logout"
							],
							"query": [
								{
									"key": "access_token",
									"value": "{{access_token}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Masters",
			"description": "",
			"item": [
				{
					"name": "RoofTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"roofTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"roofTypes\": [\n    {\n      \"id\": 20,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"roofTypeMaster Create\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "roofTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.roofTypes[0].name.has(reqBody.roofTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.roofTypes[0].code.has(reqBody.roofTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.roofTypes[0].nameLocal.has(reqBody.roofTypes[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"status\",0);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.roofTypes[0].id);",
													"",
													"postman.setNextRequest(\"roofTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"roofTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "roofTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.roofTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.roofTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.roofTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"roofTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "roofTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.roofTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.roofTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.roofTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"roofTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "roofTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.roofTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.roofTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.roofTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status === 0){",
													"postman.setEnvironmentVariable(\"status\",1);",
													"postman.setNextRequest(\"roofTypeMaster Update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "roofTypeMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.roofTypes[0].name.has(reqBody.roofTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.roofTypes[0].code.has(reqBody.roofTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.roofTypes[0].nameLocal.has(reqBody.roofTypes[0].nameLocal);",
													"",
													"postman.setNextRequest(\"roofTypeMaster Search with name\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/rooftypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"rooftypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"roofTypes\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "FloorTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n \"floorTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the Master\",\n       \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n \"floorTypes\": [\n    {\n      \"id\": 30,\n      \"tenantId\": \"default\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the Master\",\n       \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"floorTypeMaster Create\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "floorTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.floorTypes[0].name.has(reqBody.floorTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.floorTypes[0].code.has(reqBody.floorTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.floorTypes[0].nameLocal.has(reqBody.floorTypes[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"status\",0);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.floorTypes[0].id);",
													"",
													"postman.setNextRequest(\"floorTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n \"floorTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the Master\",\n       \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "floorTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.floorTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.floorTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.floorTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"floorTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "floorTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.floorTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.floorTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.floorTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"floorTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "floorTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.floorTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.floorTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.floorTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status === 0){",
													"postman.setEnvironmentVariable(\"status\",1);",
													"postman.setNextRequest(\"floorTypeMaster Update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "floorTypeMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.floorTypes[0].name.has(reqBody.floorTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.floorTypes[0].code.has(reqBody.floorTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.floorTypes[0].nameLocal.has(reqBody.floorTypes[0].nameLocal);",
													"",
													"postman.setNextRequest(\"floorTypeMaster Search with name\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/floortypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"floortypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n \"floorTypes\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the Master\",\n       \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "WallTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/walltypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"walltypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"wallTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n }  \n"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/walltypes/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"walltypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/pt-property/property/walltypes/_update",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"wallTypes\": [\n    {\n      \"id\": 39,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n }  \n"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"wallTypeMaster Create\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "wallTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.wallTypes[0].name.has(reqBody.wallTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.wallTypes[0].code.has(reqBody.wallTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.wallTypes[0].nameLocal.has(reqBody.wallTypes[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.wallTypes[0].id);",
													"",
													"postman.setEnvironmentVariable(\"status\", 0);",
													"",
													"postman.setNextRequest(\"wallTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/walltypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"walltypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"wallTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n }  \n"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "wallTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"name matches string\"] = jsonData.wallTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.wallTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.wallTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"wallTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/walltypes/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"walltypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "wallTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"name matches string\"] = jsonData.wallTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.wallTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.wallTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"wallTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/walltypes/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"walltypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "wallTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"name matches string\"] = jsonData.wallTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.wallTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.wallTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status === 0){",
													" postman.setEnvironmentVariable(\"status\",1); ",
													" postman.setNextRequest(\"wallTypeMaster Update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/walltypes/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"walltypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "wallTypeMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"name matches string\"] = jsonData.wallTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.wallTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.wallTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"wallTypeMaster Search with name\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/walltypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"walltypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"wallTypes\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n }  \n"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "WoodTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_create?tenantId=default",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"woodTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"default\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_search?tenantId=default",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "default",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"woodTypes\": [\n    {\n      \"id\": 42,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"woodTypeMaster Create\");"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "woodTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.woodTypes[0].name.has(reqBody.woodTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.woodTypes[0].code.has(reqBody.woodTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.woodTypes[0].nameLocal.has(reqBody.woodTypes[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"status\",0);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.woodTypes[0].id);",
													"",
													"postman.setNextRequest(\"woodTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"woodTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "woodTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.woodTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.woodTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.woodTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"woodTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "woodTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.woodTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.woodTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.woodTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"woodTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "woodTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.woodTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.woodTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.woodTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status === 0){",
													"   postman.setEnvironmentVariable(\"status\", 1);",
													"   postman.setNextRequest(\"woodTypeMaster update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}",
													"",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "woodTypeMaster update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.woodTypes[0].name.has(reqBody.woodTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.woodTypes[0].code.has(reqBody.woodTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.woodTypes[0].nameLocal.has(reqBody.woodTypes[0].nameLocal);",
													"",
													"postman.setNextRequest(\"woodTypeMaster Search with name\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/woodtypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"woodtypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n  \"woodTypes\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "UsageTypeMaster",
					"description": "",
					"item": [
						{
							"name": "FormatTests",
							"description": "",
							"item": [
								{
									"name": "CreateFormat",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"usageMasters\": [\n       {\n            \"id\": 0,\n            \"name\": \"{{name}}\",\n            \"code\": \"{{code}}\",\n            \"nameLocal\": \"{{nameLocal}}\",\n            \"description\": \"First test\",\n            \"active\": true,\n            \"isResidential\": true,\n            \"orderNumber\": 0,\n            \"tenantId\" : \"{{tenantId}}\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "UpdateFormat",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"usageMasters\": [\n       {\n            \"id\": 39,\n            \"name\": \"{{name}}\",\n            \"code\": \"{{code}}\",\n            \"nameLocal\": \"{{nameLocal}}\",\n            \"description\": \"First test\",\n            \"active\": true,\n            \"isResidential\": true,\n            \"orderNumber\": 0,\n            \"tenantId\" : \"{{tenantId}}\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "SearchFormat",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}        \n        "
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "FunctionalTests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"UsageMaster Create\");"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "UsageMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"name matches\"] = jsonData.usageMasters[0].name.has(reqBody.usageMasters[0].name);",
													"tests[\"nameLocal matches\"] = jsonData.usageMasters[0].nameLocal.has(reqBody.usageMasters[0].nameLocal);",
													"tests[\"code matches\"] = jsonData.usageMasters[0].code.has(reqBody.usageMasters[0].code);",
													"",
													"postman.setEnvironmentVariable(\"id\", jsonData.usageMasters[0].id);",
													"",
													"postman.setEnvironmentVariable(\"status\", 0);",
													"",
													"postman.setNextRequest(\"UsageMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"usageMasters\": [\n       {\n            \"id\": 0,\n            \"name\": \"{{name}}\",\n            \"code\": \"{{code}}\",\n            \"nameLocal\": \"{{nameLocal}}\",\n            \"description\": \"First test\",\n            \"active\": true,\n            \"isResidential\": true,\n            \"orderNumber\": 0,\n            \"tenantId\" : \"{{tenantId}}\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "UsageMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													" ",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"console.log(jsonData.usageMasters[0].id);",
													"",
													"console.log(environment.id);",
													"",
													"tests[\"id matches\"] = jsonData.usageMasters[0].id === Number(environment.id);",
													"tests[\"name matches\"] = jsonData.usageMasters[0].name.has(environment.name);",
													"tests[\"nameLocal matches\"] = jsonData.usageMasters[0].nameLocal.has(environment.nameLocal);",
													"tests[\"code matches\"] = jsonData.usageMasters[0].code.has(environment.code);",
													"",
													"postman.setNextRequest(\"UsageMaster Search with code\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "UsageMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													" ",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"id matches\"] = jsonData.usageMasters[0].id === Number(environment.id);",
													"tests[\"name matches\"] = jsonData.usageMasters[0].name.has(environment.name);",
													"tests[\"nameLocal matches\"] = jsonData.usageMasters[0].nameLocal.has(environment.nameLocal);",
													"tests[\"code matches\"] = jsonData.usageMasters[0].code.has(environment.code);",
													"",
													"postman.setNextRequest(\"UsageMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "UsageMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													" ",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"id matches\"] = jsonData.usageMasters[0].id === Number(environment.id);",
													"tests[\"name matches\"] = jsonData.usageMasters[0].name.has(environment.name);",
													"tests[\"nameLocal matches\"] = jsonData.usageMasters[0].nameLocal.has(environment.nameLocal);",
													"tests[\"code matches\"] = jsonData.usageMasters[0].code.has(environment.code);",
													"",
													"if(Number(environment.status) === 0){",
													"    postman.setEnvironmentVariable(\"status\",1);",
													"    postman.setNextRequest(\"UsageMaster Update\");",
													"}",
													"else{",
													"postman.setNextRequest(\"Logout\");",
													"}",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "UsageMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"id matches\"] = jsonData.usageMasters[0].id === Number(environment.id);",
													"tests[\"name matches\"] = jsonData.usageMasters[0].name.has(reqBody.usageMasters[0].name);",
													"tests[\"nameLocal matches\"] = jsonData.usageMasters[0].nameLocal.has(reqBody.usageMasters[0].nameLocal);",
													"tests[\"code matches\"] = jsonData.usageMasters[0].code.has(reqBody.usageMasters[0].code);",
													"",
													"postman.setNextRequest(\"UsageMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/usages/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"usages",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"usageMasters\": [\n       {\n            \"id\": {{id}},\n            \"name\": \"{{name}}\",\n            \"code\": \"{{code}}\",\n            \"nameLocal\": \"{{nameLocal}}\",\n            \"description\": \"updated the usage test\",\n            \"active\": true,\n            \"isResidential\": true,\n            \"orderNumber\": 0,\n            \"tenantId\" : \"{{tenantId}}\",\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "StructureTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n     \"structureClasses\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n     \"structureClasses\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"structureTypeMaster Create\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "structureTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.structureClasses[0].name.has(reqBody.structureClasses[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.structureClasses[0].code.has(reqBody.structureClasses[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.structureClasses[0].nameLocal.has(reqBody.structureClasses[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"status\",\"one\");",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.structureClasses[0].id);",
													"",
													"postman.setNextRequest(\"structureTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n     \"structureClasses\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "structureTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.structureClasses[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.structureClasses[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.structureClasses[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"structureTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "structureTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.structureClasses[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.structureClasses[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.structureClasses[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"structureTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "structureTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.structureClasses[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.structureClasses[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.structureClasses[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status.has(\"one\")){",
													"    pm.environment.set(\"status\", \"two\");",
													"    postman.setNextRequest(\"structureTypeMaster Update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "structureTypeMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.structureClasses[0].name.has(reqBody.structureClasses[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.structureClasses[0].code.has(reqBody.structureClasses[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.structureClasses[0].nameLocal.has(reqBody.structureClasses[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.structureClasses[0].id);",
													"",
													"postman.setNextRequest(\"structureTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/structureclasses/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"structureclasses",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n     \"structureClasses\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n      \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PropertyTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"propertyTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"propertyTypes\": [\n    {\n      \"id\": 39,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"UsageMaster Create\");",
													"",
													"postman.setNextRequest(\"propertyTypeMaster Create\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "propertyTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.propertyTypes[0].name.has(reqBody.propertyTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.propertyTypes[0].code.has(reqBody.propertyTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.propertyTypes[0].nameLocal.has(reqBody.propertyTypes[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"status\",\"one\");",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.propertyTypes[0].id);",
													"",
													"postman.setNextRequest(\"propertyTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"propertyTypes\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "propertyTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.propertyTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.propertyTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.propertyTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"propertyTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "propertyTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.propertyTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.propertyTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.propertyTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"propertyTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "propertyTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.propertyTypes[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.propertyTypes[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.propertyTypes[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status.has(\"one\")){",
													"pm.environment.set(\"status\", \"two\");",
													"postman.setNextRequest(\"propertyTypeMaster Update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "propertyTypeMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.propertyTypes[0].name.has(reqBody.propertyTypes[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.propertyTypes[0].code.has(reqBody.propertyTypes[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.propertyTypes[0].nameLocal.has(reqBody.propertyTypes[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.propertyTypes[0].id);",
													"",
													"postman.setNextRequest(\"propertyTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/propertytypes/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"propertytypes",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"propertyTypes\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true,\n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DepartmentTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"pm.environment.set(\"id\", responseInfo.departments[0].id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"departments\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n          \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"departments\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n          \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setEnvironmentVariable(\"status\",\"one\");",
													"",
													"postman.setNextRequest(\"departmentTypeMaster Create\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "departmentTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.departments[0].name.has(reqBody.departments[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.departments[0].code.has(reqBody.departments[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.departments[0].nameLocal.has(reqBody.departments[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"status\",\"one\");",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.departments[0].id);",
													"",
													"postman.setNextRequest(\"departmentTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"departments\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"category\" : \"Testing\",\n      \"description\": \"Testing the master\",\n          \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "departmentTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.departments[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.departments[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.departments[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"departmentTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "departmentTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.departments[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.departments[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.departments[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"departmentTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "departmentTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.departments[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.departments[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.departments[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status.has(\"one\")){",
													"     pm.environment.set(\"status\", \"two\");   ",
													"     postman.setNextRequest(\"departmentTypeMaster Update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "departmentTypeMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.departments[0].name.has(reqBody.departments[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.departments[0].code.has(reqBody.departments[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.departments[0].nameLocal.has(reqBody.departments[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.departments[0].id);",
													"",
													"postman.setNextRequest(\"departmentTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/departments/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"departments",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"departments\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\": \"{{nameLocal}}\",\n      \"category\" : \"Testing\",\n      \"description\": \"Testing the master\",\n          \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "OccupancyTypeMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [
								{
									"name": "Create Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"occuapancyMasters\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\" : \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true, \n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Format",
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"occuapancyMasters\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\" : \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true, \n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"occupancyTypeMaster Create\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "occupancyTypeMaster Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.occuapancyMasters[0].name.has(reqBody.occuapancyMasters[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.occuapancyMasters[0].code.has(reqBody.occuapancyMasters[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.occuapancyMasters[0].nameLocal.has(reqBody.occuapancyMasters[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"status\",\"one\");",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.occuapancyMasters[0].id);",
													"",
													"postman.setNextRequest(\"occupancyTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"occuapancyMasters\": [\n    {\n      \"id\": 0,\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\" : \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true, \n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "occupancyTypeMaster Search with name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.occuapancyMasters[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.occuapancyMasters[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.occuapancyMasters[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"occupancyTypeMaster Search with code\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "occupancyTypeMaster Search with code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.occuapancyMasters[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.occuapancyMasters[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.occuapancyMasters[0].nameLocal.has(environment.nameLocal);",
													"",
													"postman.setNextRequest(\"occupancyTypeMaster Search with nameLocal\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_search?tenantId={{tenantId}}&code={{code}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "code",
													"value": "{{code}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "occupancyTypeMaster Search with nameLocal",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.occuapancyMasters[0].name.has(environment.name);",
													"",
													"tests[\"code matches string\"] = jsonData.occuapancyMasters[0].code.has(environment.code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.occuapancyMasters[0].nameLocal.has(environment.nameLocal);",
													"",
													"if(environment.status.has(\"one\")){",
													" pm.environment.set(\"status\", \"two\");   ",
													"postman.setNextRequest(\"occupancyTypeMaster Update\");",
													"}",
													"else{",
													"    postman.setNextRequest(\"Logout\");",
													"}"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_search?tenantId={{tenantId}}&nameLocal={{nameLocal}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "nameLocal",
													"value": "{{nameLocal}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"RequestInfo\": {\n\"apiId\": \"org.egov.ptis\",\n\"ver\": \"1.0\",\n\"ts\": \"20934234234234\",\n\"action\": \"asd\",\n\"did\": \"4354648646\",\n\"key\": \"xyz\",\n\"msgId\": \"654654\",\n\"requesterId\": \"61\",\n\"authToken\": \"{{access_token}}\"\n}\n\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "occupancyTypeMaster Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var reqBody = JSON.parse(request.data);",
													"",
													"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
													"",
													"tests[\"name matches string\"] = jsonData.occuapancyMasters[0].name.has(reqBody.occuapancyMasters[0].name);",
													"",
													"tests[\"code matches string\"] = jsonData.occuapancyMasters[0].code.has(reqBody.occuapancyMasters[0].code);",
													"",
													"tests[\"nameLocal matches string\"] = jsonData.occuapancyMasters[0].nameLocal.has(reqBody.occuapancyMasters[0].nameLocal);",
													"",
													"postman.setEnvironmentVariable(\"id\",jsonData.occuapancyMasters[0].id);",
													"",
													"postman.setNextRequest(\"occupancyTypeMaster Search with name\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/occuapancies/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"occuapancies",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"occuapancyMasters\": [\n    {\n      \"id\": {{id}},\n      \"tenantId\": \"{{tenantId}}\",\n      \"name\": \"{{name}}\",\n      \"code\": \"{{code}}\",\n      \"nameLocal\" : \"{{nameLocal}}\",\n      \"description\": \"Testing the master\",\n      \"active\": true, \n      \"orderNumber\": 0,\n            \"auditDetails\" : {\n              \"createdBy\" : \"1\",\n              \"lastModifiedBy\" : \"1\"\n            }\n    }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/user/_logout?access_token={{access_token}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"_logout"
											],
											"query": [
												{
													"key": "access_token",
													"value": "{{access_token}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "MutationMaster",
					"description": "",
					"item": [
						{
							"name": "Format Tests",
							"description": "",
							"item": [],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional Tests",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"postman.setNextRequest(\"Create Mutation Master\");"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/user/oauth/token",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"description": ""
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
												"description": ""
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "narasappa",
													"type": "text"
												},
												{
													"key": "password",
													"value": "demo",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "read",
													"type": "text"
												},
												{
													"key": "tenantId",
													"value": "default",
													"type": "text"
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Mutation Master",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resp = JSON.parse(responseBody);",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(environment.Id);",
													"});"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/mutationmasters/_search?tenantId={{tenantId}}&name={{name}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"mutationmasters",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												},
												{
													"key": "name",
													"value": "{{name}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"create\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"rajesh\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Mutation master",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resp = JSON.parse(responseBody);",
													"",
													"var resq = JSON.parse(request.data);",
													"",
													"tests[\"Name matches\"] = resp.mutationMasters[0].name.has(resq.mutationMasters[0].name);",
													"",
													"postman.setEnvironmentVariable(\"Id\",resp.mutationMasters[0].id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name2 = Math.floor((Math.random() * 1000000));",
													"",
													"postman.setEnvironmentVariable(\"name\", \"Test_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"nameLocal\", \"Testing_\"+name2);",
													"",
													"postman.setEnvironmentVariable(\"code\", name2);"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "{{url}}/pt-property/property/mutationmasters/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"pt-property",
												"property",
												"mutationmasters",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"create\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"rajesh\",\n        \"authToken\": \"{{access_token}}\"\n    },\n    \"mutationMasters\":[\n   {\n      \"name\":\"{{name}}\",\n      \"code\":\"{{code}}\",\n      \"nameLocal\":\"{{nameLocal}}\",\n      \"description\":\"A property gifted\",\n      \"tenantId\":\"{{tenantId}}\",\n      \"auditDetails\":\n      { \n        \"createdBy\":\"1\",\n        \"lastModifiedBy\":\"1\"\n     } \n   }\n  ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create depreciation Master",
					"request": {
						"url": {
							"raw": "{{url}}/pt-property/property/depreciations/_update?tenantId={{tenantId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pt-property",
								"property",
								"depreciations",
								"_update"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        },\n   \"depreciations\" :[\n      {\n   \t    \"id\" : 10,\n   \t    \"tenantId\" : \"{{tenantId}}\",\n   \t    \"code\" : \"50TO100\",\n   \t    \"nameLocal\" : \"Test_1880\",\n   \t    \"fromYear\" : 1880,\n   \t    \"year\" : 1900,\n   \t    \"toYear\" : 1980,\n   \t    \"description\" : \"A property which is older than 100 years\",\n   \t    \"auditDetails\":{\n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1503468313146,\n               \"lastModifiedTime\":1503468313146\n            }\n       }\n   ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Services",
			"description": "",
			"item": [
				{
					"name": "DataEntry",
					"description": "",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setEnvironmentVariable(\"status\",\"one\");",
											"",
											"postman.setNextRequest(\"Search guidance value\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://mahaulb.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"30003\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/user/oauth/token",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"description": ""
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
										"description": ""
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search guidance value",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"var max = jsonData.guidanceValues.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"postman.setEnvironmentVariable(\"structureType\", jsonData.guidanceValues[rand].structure);",
											"",
											"postman.setEnvironmentVariable(\"occupancyType\", jsonData.guidanceValues[rand].occupancy);",
											"",
											"postman.setEnvironmentVariable(\"usageType\", jsonData.guidanceValues[rand].usage);",
											"",
											"postman.setNextRequest(\"Search Depreciation AgeCodes\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-calculator/properties/taxes/guidancevalue/_search?tenantId={{tenantId}}&boundary=3&validDate=30/08/2017",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-calculator",
										"properties",
										"taxes",
										"guidancevalue",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "boundary",
											"value": "3",
											"equals": true,
											"description": ""
										},
										{
											"key": "validDate",
											"value": "30/08/2017",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"create\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"rajesh\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Depreciation AgeCodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Check status success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"var max = jsonData.depreciations.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"postman.setEnvironmentVariable(\"ageCode\", jsonData.depreciations[rand].code);",
											"",
											"postman.setNextRequest(\"Search PropertyType Code\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/property/depreciations/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"property",
										"depreciations",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search PropertyType Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"var max = jsonData.propertyTypes.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"postman.setEnvironmentVariable(\"propertyType\",jsonData.propertyTypes[rand].code);",
											"",
											"postman.setNextRequest(\"Search Boundary Values\");",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/property/propertytypes/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"property",
										"propertytypes",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Boundary Values",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status success\"] = jsonData.ResponseInfo.status.has(\"200\");",
											"",
											"var max = jsonData.Boundary.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"postman.setEnvironmentVariable(\"boundaryValue\", jsonData.Boundary[rand].id);",
											"",
											"postman.setNextRequest(\"Search Guidance Value Boundary\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?boundaryTypeName=Zone&hierarchyTypeName=REVENUE&tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-location",
										"boundarys",
										"boundariesByBndryTypeNameAndHierarchyTypeName"
									],
									"query": [
										{
											"key": "boundaryTypeName",
											"value": "Zone",
											"equals": true,
											"description": ""
										},
										{
											"key": "hierarchyTypeName",
											"value": "REVENUE",
											"equals": true,
											"description": ""
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"yosadhara\",\n   \"authToken\": \"{{access_token}}\",\n   \"apiId\": \"\",\n   \"ver\": \"1.0\",\n   \"ts\": \"27-06-2017 10:30:12\",\n   \"key\": \"abcdkey\"\n    }\n }"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Guidance Value Boundary",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is Successful\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"postman.setEnvironmentVariable(\"guidanceValueBoundary\",jsonData.guidanceValueBoundaries[0].id);",
											"",
											"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
											"    postman.setNextRequest(\"Create data entry for open land\");",
											"}",
											"else{",
											" postman.setNextRequest(\"Create data entry for others\");   ",
											"}"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/property/guidancevalueboundary/_search?tenantId={{tenantId}}&guidanceValueBoundary1={{boundaryValue}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"property",
										"guidancevalueboundary",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "guidanceValueBoundary1",
											"value": "{{boundaryValue}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{\n      \"authToken\":\"{{access_token}}\",\n      \"ts\":\"10032017\",\n      \"ver\":\"1.0\",\n      \"requesterId\":\"rajesh\",\n      \"action\":\"create\",\n      \"msgId\":\"20170310130900\",\n      \"apiId\":\"emp\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create data entry for others",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
											"    tests[\"status is failed\"] = jsonData.ResponseInfo.status.has(\"FAILED\");",
											"    tests[\"code is 400\"] = jsonData.Errors[0].code.has(\"400\");",
											"    postman.setNextRequest(\"Create data entry with open land\")",
											"}",
											"else{",
											"tests[\"status is successful\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"tests[\"Structure Type matches\"] = environment.structureType.has(jsonData.properties[0].propertyDetail.floors[0].units[0].structure);",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"tests[\"Age Code matches\"] = environment.ageCode.has(jsonData.properties[0].propertyDetail.floors[0].units[0].age);",
											"postman.setEnvironmentVariable(\"upicnumber\", jsonData.properties[0].upicNumber);",
											"postman.setEnvironmentVariable(\"doorNo\", jsonData.properties[0].address.addressNumber);",
											"postman.setEnvironmentVariable(\"mobileNo\", jsonData.properties[0].owners[0].mobileNumber);",
											"postman.setEnvironmentVariable(\"aadhaarNo\", jsonData.properties[0].owners[0].aadhaarNumber);",
											"postman.setEnvironmentVariable(\"applicationNumber\", jsonData.properties[0].propertyDetail.applicationNo);",
											"postman.setNextRequest(\"Search Property\");",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name2 = Math.floor((Math.random() * 1000000));",
											"",
											"postman.setEnvironmentVariable(\"aadhaarNo\", \"202422\"+name2);",
											"",
											"postman.setEnvironmentVariable(\"mobileNo\", \"1924\"+name2);",
											"",
											"postman.setEnvironmentVariable(\"doorNo\", name2);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/properties/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"properties",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"properties\":[\n      {\n         \"occupancyDate\":\"04/08/2017\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"oldUpicNumber\":\"{{doorNo}}\",\n         \"vltUpicNumber\":null,\n         \"sequenceNo\":\"1\",\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{\n            \"tenantId\":\"{{tenantId}}\",\n            \"longitude\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":\"967\",\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Banglore\",\n            \"pincode\":\"560037\",\n            \"detail\":null,\n            \"auditDetails\":{\n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1503468313146,\n               \"lastModifiedTime\":1503468313146\n            }\n         },\n         \"owners\":[\n            {\n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"name\":\"Ramprasad\",\n               \"gender\":\"MALE\",\n               \"emailId\":\"ramprasad@gmail.com\",\n               \"pan\":null,\n               \"gaurdianRelation\":\"FATHER\",\n               \"fatherOrHusbandName\":\"P Dhanraj\",\n               \"ownerShipPercentage\":\"100\",\n               \"isPrimaryOwner\":true,\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"active\":true,\n               \"tenantId\":\"{{tenantId}}\",\n               \"salutation\":null,\n               \"roles\":[\n                  {\n                     \"code\":\"CITIZEN\",\n                     \"name\":\"Citizen\"\n                  }\n               ],\n               \"issecondaryowner\":false,\n               \"ownershippercentage\":null,\n               \"ownerType\":null\n            }\n         ],\n         \"propertyDetail\":{\n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017\",\n            \"reason\":\"CREATE\",\n            \"status\":\"ACTIVE\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017\",\n            \"isExempted\":false,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":\"{{propertyType}}\",\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":\"5000\",\n            \"totalBuiltupArea\":\"01000\",\n            \"undividedShare\":null,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":null,\n            \"bpaNo\":\"RO1\",\n            \"bpaDate\":\"01/08/2017\",\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"floors\":[\n               {\n                  \"floorNo\":5,\n                  \"units\":[\n                     {\n                        \"floorNo\":5,\n                        \"electricMeterNo\":null,\n                        \"waterMeterNo\":null,\n                        \"exemptionReason\":null,\n                        \"rentCollected\":null,\n                        \"age\":\"{{ageCode}}\",\n                        \"unitType\":\"ROOM\",\n                        \"unitNo\":\"102\",\n                        \"structure\":\"{{structureType}}\",\n                        \"usage\":\"{{usageType}}\",\n                        \"usageSubType\":\"\",\n                        \"firmName\":\"firm\",\n                        \"occupancyType\":\"{{occupancyType}}\",\n                        \"occupierName\":\"Naresh\",\n                        \"arv\":\"1000\",\n                        \"manualArv\":\"1000\",\n                        \"constStartDate\":\"02/08/2017\",\n                        \"constCompletionDate\":\"03/08/2017\",\n                        \"occupancyDate\":\"04/08/2017\",\n                        \"isStructured\":true,\n                        \"width\":\"\",\n                        \"length\":\"\",\n                        \"builtupArea\":\"1000\",\n                        \"assessableArea\":400,\n                        \"carpetArea\":\"500\",\n                        \"exemptedArea\":\"100\",\n                        \"occupancyCertiNumber\":\"10005\",\n                        \"buildingCost\":\"200000\",\n                        \"landCost\":\"50000\",\n                        \"isAuthorised\":true\n                     }\n                  ]\n               }\n            ],\n            \"factors\":[\n               null\n            ],\n            \"documents\":[\n\n            ],\n            \"stateId\":null,\n            \"builderDetails\":{\n               \"certificateNumber\":\"10005\",\n               \"certificateCompletionDate\":\"10/08/2017\",\n               \"certificateReceiveDate\":\"11/08/2017\",\n               \"agencyName\":\"AO1\",\n               \"licenseType\":\"A1\",\n               \"licenseNumber\":\"44225\"\n            },\n            \"workFlowDetails\":{\n               \"department\":null,\n               \"designation\":null,\n               \"assignee\":null,\n               \"action\":\"no\",\n               \"status\":null\n            },\n            \"auditDetails\":{\n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1503468313146,\n               \"lastModifiedTime\":1503468313146\n            }\n         },\n         \"vacantLand\":null,\n         \"gisRefNo\":null,\n         \"isAuthorised\":null,\n         \"boundary\":{\n            \"revenueBoundary\":{\n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"Zone A\"\n            },\n            \"locationBoundary\":{\n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"AndharAli\"\n            },\n            \"adminBoundary\":{\n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"Prabhag 1\"\n            },\n            \"guidanceValueBoundary\": {{guidanceValueBoundary}},\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"auditDetails\":{\n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1503468313146,\n               \"lastModifiedTime\":1503468313146\n            }\n         },\n         \"channel\":\"DATA_ENTRY\",\n         \"auditDetails\":{\n            \"createdBy\":\"1\",\n            \"lastModifiedBy\":\"1\",\n            \"createdTime\":1503468313146,\n            \"lastModifiedTime\":1503468313146\n         }\n      }\n   ],\n   \"RequestInfo\":{\n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1503468313146,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create data entry with open land",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"postman.setEnvironmentVariable(\"upicnumber\", jsonData.properties[0].upicNumber);",
											"",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"",
											"postman.setNextRequest(\"Search Property\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/properties/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"properties",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"properties\":[\n      {\n         \"occupancyDate\":\"04/08/2017\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"oldUpicNumber\":\"{{doorNo}}\",\n         \"vltUpicNumber\":null,\n         \"sequenceNo\":\"1\",\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{\n            \"tenantId\":\"{{tenantId}}\",\n            \"longitude\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":\"967\",\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Banglore\",\n            \"pincode\":\"560037\",\n            \"detail\":null,\n            \"auditDetails\":{\n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1503468313146,\n               \"lastModifiedTime\":1503468313146\n            }\n         },\n         \"owners\":[\n            {\n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"name\":\"RamPrasad\",\n               \"gender\":\"MALE\",\n               \"emailId\":\"ramprasad@gmail.com\",\n               \"pan\":null,\n               \"gaurdianRelation\":\"FATHER\",\n               \"fatherOrHusbandName\":\"P Dhanraj\",\n               \"ownerShipPercentage\":\"100\",\n               \"isPrimaryOwner\":true,\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"active\":true,\n               \"tenantId\":\"{{tenantId}}\",\n               \"salutation\":null,\n               \"roles\":[\n                  {\n                     \"code\":\"CITIZEN\",\n                     \"name\":\"Citizen\"\n                  }\n               ],\n               \"issecondaryowner\":false,\n               \"ownershippercentage\":null,\n               \"ownerType\":null\n            }\n         ],\n         \"propertyDetail\":{\n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017\",\n            \"reason\":\"CREATE\",\n            \"status\":\"ACTIVE\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017\",\n            \"isExempted\":false,\n            \"propertyType\":\"PTYPE_OPEN_LAND\",\n            \"category\":\"PTYPE_OPEN_LAND\",\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":\"5000\",\n            \"totalBuiltupArea\":\"01000\",\n            \"undividedShare\":null,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":null,\n            \"bpaNo\":\"RO1\",\n            \"bpaDate\":\"01/08/2017\",\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"factors\":[\n               null\n            ],\n            \"documents\":[\n\n            ],\n            \"stateId\":null,\n            \"builderDetails\":{\n               \"certificateNumber\":\"10005\",\n               \"certificateCompletionDate\":\"10/08/2017\",\n               \"certificateReceiveDate\":\"11/08/2017\",\n               \"agencyName\":\"AO1\",\n               \"licenseType\":\"A1\",\n               \"licenseNumber\":\"44225\"\n            },\n            \"workFlowDetails\":{\n               \"department\":null,\n               \"designation\":null,\n               \"assignee\":null,\n               \"action\":\"no\",\n               \"status\":null\n            },\n            \"auditDetails\":{\n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1503468313146,\n               \"lastModifiedTime\":1503468313146\n            }\n         },\n         \"vacantLand\": {\n           \"surveyNumber\": \"surveynumber2\",\n           \"pattaNumber\": \"pattano1\",\n           \"marketValue\": 10748,\n           \"capitalValue\": 4522,\n           \"layoutApprovedAuth\": \"laa2\",\n           \"layoutPermissionNo\": \"lpn2\",\n           \"layoutPermissionDate\": \"10/05/2017\",\n           \"resdPlotArea\": 475,\n           \"nonResdPlotArea\": 658,\n           \"auditDetails\": {\n               \"createdBy\": \"1\",\n               \"lastModifiedBy\": \"1\",\n               \"createdTime\": 1503468313146,\n               \"lastModifiedTime\": 1503468313146\n           }\n           },\n         \"gisRefNo\":null,\n         \"isAuthorised\":null,\n         \"boundary\":{\n            \"revenueBoundary\":{\n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"Zone A\"\n            },\n            \"locationBoundary\":{\n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"AndharAli\"\n            },\n            \"adminBoundary\":{\n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"Prabhag 1\"\n            },\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"auditDetails\":{\n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1503468313146,\n               \"lastModifiedTime\":1503468313146\n            }\n         },\n         \"channel\":\"DATA_ENTRY\",\n         \"auditDetails\":{\n            \"createdBy\":\"1\",\n            \"lastModifiedBy\":\"1\",\n            \"createdTime\":1503468313146,\n            \"lastModifiedTime\":1503468313146\n         }\n      }\n   ],\n   \"RequestInfo\":{\n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1503468313146,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Property",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											" if(jsonData.properties.length > 0){    ",
											"   for(var i=0;i<jsonData.properties.length;i++){",
											"       if(jsonData.properties[i].upicNumber.has(environment.upicnumber)){    ",
											"             tests[\"Body matches string\"] = environment.upicnumber.has(jsonData.properties[i].upicNumber);  ",
											"             postman.setEnvironmentVariable(\"userId\", jsonData.properties[i].owners[0].id);",
											"       }",
											"    }",
											" }",
											" else{",
											"     tests[\"Size is zero\"] = false;",
											" }",
											"",
											"postman.setNextRequest(\"Get Tax Period Details\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/properties/_search?tenantId={{tenantId}}&upicNumber={{upicnumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"properties",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "upicNumber",
											"value": "{{upicnumber}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "applicationNo",
											"value": "{{applicationNumber}}",
											"equals": true,
											"description": "",
											"disabled": true
										},
										{
											"key": "mobileNumber",
											"value": "{{mobileNo}}",
											"equals": true,
											"description": "",
											"disabled": true
										},
										{
											"key": "aadhaarNumber",
											"value": "{{aadhaarNo}}",
											"equals": true,
											"description": "",
											"disabled": true
										},
										{
											"key": "houseNoBldgApt",
											"value": "{{doorNo}}",
											"equals": true,
											"description": "",
											"disabled": true
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Tax Period Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is Success\"] = jsonData.ResponseInfo.status.has(\"200\");",
											"",
											"var rand = 0;",
											"",
											"var max = jsonData.TaxPeriods.length;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"else{",
											"    tests[\"No Tax Periods for this businessService\"] = false;",
											"}",
											"",
											"postman.setEnvironmentVariable(\"fromDate\",jsonData.TaxPeriods[rand].fromDate);",
											"",
											"postman.setEnvironmentVariable(\"toDate\",jsonData.TaxPeriods[rand].toDate);",
											"",
											"postman.setNextRequest(\"Create Demand\");",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/billing-service/taxperiods/_search?tenantId={{tenantId}}&service=PT",
									"host": [
										"{{url}}"
									],
									"path": [
										"billing-service",
										"taxperiods",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "service",
											"value": "PT",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"create\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"rajesh\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}    "
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Demand",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status is success\"] = jsonData.ResponseInfo.status.has(\"201\");",
											"",
											"tests[\"Consumer code is correct\"] = jsonData.Demands[0].consumerCode.has(environment.upicnumber);",
											"",
											"postman.setNextRequest(\"Search Demand\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/billing-service/demand/_update",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"Demands\":[\n      {\n         \"id\":null,\n         \"tenantId\":\"{{tenantId}}\",\n         \"consumerCode\":\"{{upicnumber}}\",\n         \"consumerType\":\"{{propertyType}}\",\n         \"businessService\":\"PT\",\n         \"owner\":{\n            \"tenantId\":null,\n            \"id\":{{userId}},\n            \"userName\":null,\n            \"name\":null,\n            \"permanentAddress\":null,\n            \"mobileNumber\":null,\n            \"emailId\":null,\n            \"aadhaarNumber\":null\n         },\n         \"taxPeriodFrom\":{{fromDate}},\n         \"taxPeriodTo\":{{toDate}},\n         \"demandDetails\":[\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"CHQ_BOUNCE_PENALTY\",\n               \"taxAmount\":\"100\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"VACANT_TAX\",\n               \"taxAmount\":\"80\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"PT_TAX\",\n               \"taxAmount\":\"60\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"EMP_GUA_CESS\",\n               \"taxAmount\":\"40\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"EDU_CESS\",\n               \"taxAmount\":\"20\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"LIB_CESS\",\n               \"taxAmount\":\"10\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            },\n            {\n               \"id\":null,\n               \"demandId\":null,\n               \"taxHeadMasterCode\":\"LATE_PENALTY\",\n               \"taxAmount\":\"05\",\n               \"collectionAmount\":0,\n               \"auditDetail\":null,\n               \"tenantId\":\"{{tenantId}}\"\n            }\n         ],\n         \"minimumAmountPayable\":1,\n         \"auditDetail\":null\n      }\n   ],\n   \"RequestInfo\":{\n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1503742267841,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Demand",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status is success\"] = jsonData.ResponseInfo.status.has(\"200\");",
											"",
											"tests[\"Consumer code is correct\"] = jsonData.Demands[0].consumerCode.has(environment.upicnumber);",
											"",
											"postman.setNextRequest(\"Logout\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/billing-service/demand/_search?tenantId={{tenantId}}&consumerCode={{upicnumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"billing-service",
										"demand",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "consumerCode",
											"value": "{{upicnumber}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{\n      \"authToken\":\"{{access_token}}\",\n      \"ts\":\"10032017\",\n      \"ver\":\"1.0\",\n      \"requesterId\":\"rajesh\",\n      \"action\":\"create\",\n      \"msgId\":\"20170310130900\",\n      \"apiId\":\"emp\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\"RequestInfo\":{\"apiId\":\"org.egov.pgr\",\"ver\":\"1.0\",\"ts\":\"13-04-2017 12:13:30\",\"action\":\"POST\",\"did\":\"4354648646\",\"key\":\"xyz\",\"msgId\":\"654654\",\"requesterId\":\"61\",\"authToken\": \"{{access_token}}\"\n }}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PTIS",
					"description": "",
					"item": [
						{
							"name": "Login as Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"Get App Configuration Details\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://mahaulb.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"30003\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/user/oauth/token",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"description": ""
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
										"description": ""
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get App Configuration Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"if(jsonData.appConfigurations.length === 1){",
											"    postman.setEnvironmentVariable(\"sizeOfBoundary\",\"1\");",
											"    postman.setEnvironmentVariable(\"firstValueOfBoundary\",jsonData.appConfigurations[0].values);",
											"}",
											"else{",
											"    postman.setEnvironmentVariable(\"sizeOfBoundary\",\"2\");",
											"    postman.setEnvironmentVariable(\"firstValueOfBoundary\",jsonData.appConfigurations[0].values);",
											"}",
											"",
											"postman.setEnvironmentVariable(\"boundaryStatus\",\"0\");",
											"",
											"if(environment.firstValueOfBoundary.has(\"Zone\")){postman.setNextRequest(\"Get Boundary Values for Zone\");}",
											"else{postman.setNextRequest(\"Get Boundary Values for Ward\");}",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/property/appconfiguration/_search?tenantId={{tenantId}}&keyName=GuidanceBoundary",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"property",
										"appconfiguration",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "keyName",
											"value": "GuidanceBoundary",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{\n      \"authToken\":\"{{access_token}}\",\n      \"ts\":\"10032017\",\n      \"ver\":\"1.0\",\n      \"requesterId\":\"rajesh\",\n      \"action\":\"create\",\n      \"msgId\":\"20170310130900\",\n      \"apiId\":\"emp\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Boundary Values for Zone",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status success\"] = jsonData.ResponseInfo.status.has(\"200\");",
											"",
											"var max = jsonData.Boundary.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"if(environment.sizeOfBoundary.has(\"1\")){",
											"        postman.setEnvironmentVariable(\"guidanceValueBoundary1\",jsonData.Boundary[rand].id);",
											"        postman.setNextRequest(\"Get Guidance Value Boundary\");",
											"}",
											"",
											"else{",
											"    if(environment.boundaryStatus.has(\"0\")){",
											"        postman.setEnvironmentVariable(\"guidanceValueBoundary1\",jsonData.Boundary[rand].id);",
											"        postman.setNextRequest(\"Get Boundary Values for Ward\");",
											"    }",
											"    else{",
											"        postman.setEnvironmentVariable(\"guidanceValueBoundary2\",jsonData.Boundary[rand].id);",
											"        postman.setNextRequest(\"Get Guidance Value Boundary\");",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?boundaryTypeName=Zone&hierarchyTypeName=REVENUE&tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-location",
										"boundarys",
										"boundariesByBndryTypeNameAndHierarchyTypeName"
									],
									"query": [
										{
											"key": "boundaryTypeName",
											"value": "Zone",
											"equals": true,
											"description": ""
										},
										{
											"key": "hierarchyTypeName",
											"value": "REVENUE",
											"equals": true,
											"description": ""
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"yosadhara\",\n   \"authToken\": \"{{access_token}}\",\n   \"apiId\": \"\",\n   \"ver\": \"1.0\",\n   \"ts\": \"27-06-2017 10:30:12\",\n   \"key\": \"abcdkey\"\n    }\n }"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Boundary Values for Ward",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Check status success\"] = jsonData.ResponseInfo.status.has(\"200\");",
											"",
											"var max = jsonData.Boundary.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"if(environment.sizeOfBoundary.has(\"1\")){",
											"        postman.setEnvironmentVariable(\"guidanceValueBoundary1\",jsonData.Boundary[rand].id);",
											"        postman.setNextRequest(\"Get Guidance Value Boundary\");",
											"}",
											"",
											"else{",
											"    if(environment.boundaryStatus.has(\"0\")){",
											"        postman.setEnvironmentVariable(\"guidanceValueBoundary1\",jsonData.Boundary[rand].id);",
											"        postman.setNextRequest(\"Get Boundary Values for Zone\");",
											"    }",
											"    else{",
											"        postman.setEnvironmentVariable(\"guidanceValueBoundary2\",jsonData.Boundary[rand].id);",
											"        postman.setNextRequest(\"Get Guidance Value Boundary\");",
											"    }",
											"}",
											"    "
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?boundaryTypeName=Ward&hierarchyTypeName=REVENUE&tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-location",
										"boundarys",
										"boundariesByBndryTypeNameAndHierarchyTypeName"
									],
									"query": [
										{
											"key": "boundaryTypeName",
											"value": "Ward",
											"equals": true,
											"description": ""
										},
										{
											"key": "hierarchyTypeName",
											"value": "REVENUE",
											"equals": true,
											"description": ""
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"yosadhara\",\n   \"authToken\": \"{{access_token}}\",\n   \"apiId\": \"\",\n   \"ver\": \"1.0\",\n   \"ts\": \"27-06-2017 10:30:12\",\n   \"key\": \"abcdkey\"\n    }\n }"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Guidance Value Boundary",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is Successful\"] = jsonData.ResponseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"postman.setEnvironmentVariable(\"guidanceValueBoundary\",jsonData.guidanceValueBoundaries[0].id);",
											"",
											"postman.setNextRequest(\"Get Guidance Values\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"firstValueOfBoundary\", \"guidanceValueBoundary1=\"+environment.guidanceValueBoundary1);",
											" ",
											" if(environment.sizeOfBoundary === 2){",
											"pm.environment.set(\"firstValueOfBoundary\", environment.firstValueOfBoundary +  \"&guidanceValueBoundary2=\" + environement.guidanceValueBoundary2);",
											" }"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/property/guidancevalueboundary/_search?tenantId={{tenantId}}&{{firstValueOfBoundary}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"property",
										"guidancevalueboundary",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "{{firstValueOfBoundary}}",
											"value": "",
											"equals": false,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\":{\n      \"authToken\":\"{{access_token}}\",\n      \"ts\":\"10032017\",\n      \"ver\":\"1.0\",\n      \"requesterId\":\"rajesh\",\n      \"action\":\"create\",\n      \"msgId\":\"20170310130900\",\n      \"apiId\":\"emp\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Guidance Values",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"var max = jsonData.guidanceValues.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"postman.setEnvironmentVariable(\"structureType\", jsonData.guidanceValues[rand].structure);",
											"",
											"postman.setEnvironmentVariable(\"occupancyType\", jsonData.guidanceValues[rand].occupancy);",
											"",
											"postman.setEnvironmentVariable(\"usageType\", jsonData.guidanceValues[rand].usage);",
											"",
											"postman.setNextRequest(\"Get Property Type Codes\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-calculator/properties/taxes/guidancevalue/_search?tenantId={{tenantId}}&boundary={{guidanceValueBoundary}}&validDate=30/12/2017",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-calculator",
										"properties",
										"taxes",
										"guidancevalue",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "boundary",
											"value": "{{guidanceValueBoundary}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "validDate",
											"value": "30/12/2017",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n        \"apiId\": \"emp\",\n        \"ver\": \"1.0\",\n        \"ts\": \"10032017\",\n        \"action\": \"create\",\n        \"did\": \"1\",\n        \"key\": \"abcdkey\",\n        \"msgId\": \"20170310130900\",\n        \"requesterId\": \"rajesh\",\n        \"authToken\": \"{{access_token}}\"\n    }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Property Type Codes",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var max = jsonData.propertyTypes.length - 1;",
											"",
											"var rand = 0;",
											"",
											"if(max > 0){",
											"    rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"}",
											"",
											"tests[\"Check status\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"postman.setEnvironmentVariable(\"propertyType\", jsonData.propertyTypes[rand].code);",
											"",
											"postman.setNextRequest(\"Get user work flow of taxInspector\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/property/propertytypes/_search?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"property",
										"propertytypes",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get user work flow of taxInspector",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"successful\");",
											"",
											"pm.environment.set(\"departId\", jsonData.Employee[0].assignments[0].department);",
											"",
											"pm.environment.set(\"designId\", jsonData.Employee[0].assignments[0].designation);",
											"",
											"pm.environment.set(\"posId\", jsonData.Employee[0].assignments[0].position);",
											"",
											"postman.setNextRequest(\"Create New Property for Others\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/hr-employee/employees/_search?tenantId={{tenantId}}&userName={{taxInspector}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"hr-employee",
										"employees",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "userName",
											"value": "{{taxInspector}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n       \"apiId\" : \"emp\",\n       \"ver\" : \"1.0\",\n       \"ts\" : \"10-03-2017 00:00:00\",\n       \"action\" : \"create\",\n       \"did\" : \"1\",\n       \"key\" : \"abcdkey\",\n       \"msgId\" : \"20170310130900\",\n       \"requesterId\" : \"rajesh\",\n       \"authToken\" : \"{{access_token}}\"\n      }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create New Property for Others",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
											"    tests[\"Status is Failed\"] = jsonData.ResponseInfo.status.has(\"FAILED\");",
											"    tests[\"code is 400\"] = jsonData.Errors[0].code.has(\"400\");",
											"    postman.setNextRequest(\"Create New Property for OpenSpace\");",
											"}",
											"else{",
											"postman.setEnvironmentVariable(\"id\", jsonData.properties[0].propertyDetail.applicationNo);",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"tests[\"Structure Type matches\"] = environment.structureType.has(jsonData.properties[0].propertyDetail.floors[0].units[0].structure);",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"tests[\"door no matches\"] = environment.doorNo.has(jsonData.properties[0].address.addressNumber);",
											"tests[\"mobile no matches\"] = environment.mobileNo.has(jsonData.properties[0].owners[0].mobileNumber);",
											"tests[\"aadhar no matches\"] = environment.aadhaarNo.has(jsonData.properties[0].owners[0].aadhaarNumber);",
											"postman.setNextRequest(\"Get Property Details\");",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name2 = Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;",
											"",
											"postman.setEnvironmentVariable(\"aadhaarNo\", \"202422\"+name2);",
											"",
											"postman.setEnvironmentVariable(\"mobileNo\", \"1924\"+name2);",
											"",
											"postman.setEnvironmentVariable(\"doorNo\", name2);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/pt-property/properties/_create",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"properties\":[  \n      {  \n         \"occupancyDate\":\"01/06/2017\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"oldUpicNumber\":null,\n         \"vltUpicNumber\":null,\n         \"sequenceNo\":\"123\",\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"tenantId\":\"{{tenantId}}\",\n            \"longitude\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504615559164,\n               \"lastModifiedTime\":1504615559164\n            }\n         },\n         \"owners\":[  \n            {  \n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"name\":\"Srinu\",\n               \"gender\":\"MALE\",\n               \"emailId\":\"srinu@test.com\",\n               \"pan\":null,\n               \"gaurdianRelation\":\"FATHER\",\n               \"fatherOrHusbandName\":\"P Sudheer\",\n               \"ownerShipPercentage\":\"70\",\n               \"isPrimaryOwner\":false,\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"active\":true,\n               \"tenantId\":\"{{tenantId}}\",\n               \"salutation\":null,\n               \"roles\":[  \n                  {  \n                     \"code\":\"CITIZEN\",\n                     \"name\":\"Citizen\"\n                  }\n               ],\n               \"issecondaryowner\":true,\n               \"ownershippercentage\":null,\n               \"ownerType\":null\n            }\n         ],\n         \"propertyDetail\":{  \n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017\",\n            \"reason\":\"CREATE\",\n            \"status\":\"ACTIVE\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017\",\n            \"isExempted\":false,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":\"1000\",\n            \"totalBuiltupArea\":1000,\n            \"undividedShare\":null,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"floors\":[  \n               {  \n                  \"floorNo\":4,\n                  \"units\":[  \n                     {  \n                        \"floorNo\":4,\n                        \"electricMeterNo\":null,\n                        \"waterMeterNo\":null,\n                        \"exemptionReason\":null,\n                        \"rentCollected\":null,\n                        \"unitType\":\"FLAT\",\n                        \"roomInFlat\":2,\n                        \"unitNo\":\"102\",\n                        \"structure\":\"{{structureType}}\",\n                        \"usage\":\"{{usageType}}\",\n                        \"occupancyType\":\"{{occupancyType}}\",\n                        \"constCompletionDate\":\"01/06/2017\",\n                        \"occupancyDate\":\"01/06/2017\",\n                        \"isStructured\":false,\n                        \"width\":\"10\",\n                        \"length\":\"100\",\n                        \"builtupArea\":1000,\n                        \"assessableArea\":30,\n                        \"carpetArea\":\"50\",\n                        \"exemptedArea\":\"20\",\n                        \"isAuthorised\":true\n                     }\n                  ]\n               }\n            ],\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"documents\":[  \n\n            ],\n            \"stateId\":null,\n            \"workFlowDetails\":{  \n               \"department\":{{departId}},\n               \"designation\":{{designId}},\n               \"assignee\":{{posId}},\n               \"initiatorPosition\":144,\n               \"action\":\"no\",\n               \"status\":null\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504615559164,\n               \"lastModifiedTime\":1504615559164\n            }\n         },\n         \"vacantLand\":null,\n         \"gisRefNo\":null,\n         \"isAuthorised\":null,\n         \"boundary\":{  \n            \"revenueBoundary\":{  \n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"Zone A\"\n            },\n            \"locationBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"adminBoundary\":null,\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"guidanceValueBoundary\" : {{guidanceValueBoundary}},\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504615559164,\n               \"lastModifiedTime\":1504615559164\n            }\n         },\n         \"channel\":\"SYSTEM\",\n         \"auditDetails\":{  \n            \"createdBy\":\"1\",\n            \"lastModifiedBy\":\"1\",\n            \"createdTime\":1504615559164,\n            \"lastModifiedTime\":1504615559164\n         }\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1504615559164,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create New Property for Open Space",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"postman.setEnvironmentVariable(\"id\", jsonData.properties[0].propertyDetail.applicationNo);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"",
											"postman.setNextRequest(\"Get Property Details\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/pt-property/properties/_create",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"properties\":[  \n      {  \n         \"occupancyDate\":\"01/06/2017\",\n         \"tenantId\":\"{{tenantId}}\",\n         \"oldUpicNumber\":null,\n         \"vltUpicNumber\":null,\n         \"sequenceNo\":\"123\",\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"tenantId\":\"{{tenantId}}\",\n            \"longitude\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504615559164,\n               \"lastModifiedTime\":1504615559164\n            }\n         },\n         \"owners\":[  \n            {  \n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"name\":\"Srinu\",\n               \"gender\":\"MALE\",\n               \"emailId\":\"srinu@test.com\",\n               \"pan\":null,\n               \"gaurdianRelation\":\"FATHER\",\n               \"fatherOrHusbandName\":\"P Sudheer\",\n               \"ownerShipPercentage\":\"70\",\n               \"isPrimaryOwner\":false,\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"active\":true,\n               \"tenantId\":\"{{tenantId}}\",\n               \"salutation\":null,\n               \"roles\":[  \n                  {  \n                     \"code\":\"CITIZEN\",\n                     \"name\":\"Citizen\"\n                  }\n               ],\n               \"issecondaryowner\":true,\n               \"ownershippercentage\":null,\n               \"ownerType\":null\n            }\n         ],\n         \"propertyDetail\":{  \n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017\",\n            \"reason\":\"CREATE\",\n            \"status\":\"ACTIVE\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017\",\n            \"isExempted\":false,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":\"1000\",\n            \"totalBuiltupArea\":1000,\n            \"undividedShare\":null,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"documents\":[],\n            \"stateId\":null,\n            \"workFlowDetails\":{  \n               \"department\":{{departId}},\n               \"designation\":{{designId}},\n               \"assignee\":{{posId}},\n               \"initiatorPosition\":162,\n               \"action\":\"no\",\n               \"status\":null\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504615559164,\n               \"lastModifiedTime\":1504615559164\n            }\n         },\n         \"vacantLand\": {\n           \"surveyNumber\": \"surveynumber2\",\n           \"pattaNumber\": \"pattano1\",\n           \"marketValue\": 10748,\n           \"capitalValue\": 4522,\n           \"layoutApprovedAuth\": \"laa2\",\n           \"layoutPermissionNo\": \"lpn2\",\n           \"layoutPermissionDate\": \"10/05/2017\",\n           \"resdPlotArea\": 475,\n           \"nonResdPlotArea\": 658,\n           \"auditDetails\": {\n               \"createdBy\": \"1\",\n               \"lastModifiedBy\": \"1\",\n               \"createdTime\": 1503468313146,\n               \"lastModifiedTime\": 1503468313146\n           }\n           },\n         \"gisRefNo\":null,\n         \"isAuthorised\":null,\n         \"boundary\":{  \n            \"revenueBoundary\":{  \n               \"id\":\"{{boundaryValue}}\",\n               \"name\":\"Zone A\"\n            },\n            \"locationBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"adminBoundary\":null,\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"guidanceValueBoundary\" : {{guidanceValueBoundary}},\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504615559164,\n               \"lastModifiedTime\":1504615559164\n            }\n         },\n         \"channel\":\"SYSTEM\",\n         \"auditDetails\":{  \n            \"createdBy\":\"1\",\n            \"lastModifiedBy\":\"1\",\n            \"createdTime\":1504615559164,\n            \"lastModifiedTime\":1504615559164\n         }\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1504615559164,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Property Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
											"tests[\"Check the applicationNumber\"] = jsonData.properties[0].propertyDetail.applicationNo.has(environment.id);",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"pm.environment.set(\"key7\", jsonData.properties[0].vacantLand.id);",
											"}",
											"else{",
											"tests[\"Check the applicationNumber\"] = jsonData.properties[0].propertyDetail.applicationNo.has(environment.id);",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"tests[\"Structure Type matches\"] = environment.structureType.has(jsonData.properties[0].propertyDetail.floors[0].units[0].structure);",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"pm.environment.set(\"key2\", jsonData.properties[0].propertyDetail.floors[0].id);",
											"pm.environment.set(\"key3\", jsonData.properties[0].propertyDetail.floors[0].units[0].id);",
											"}",
											"",
											"pm.environment.set(\"key1\", jsonData.properties[0].id);",
											"",
											"pm.environment.set(\"key4\", jsonData.properties[0].propertyDetail.stateId);",
											"",
											"pm.environment.set(\"key5\", jsonData.properties[0].demands[0].id);",
											"",
											"pm.environment.set(\"key6\", jsonData.properties[0].owners[0].id);",
											"",
											"postman.setNextRequest(\"Logout as Employee\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/pt-property/properties/_search?tenantId={{tenantId}}&applicationNo={{id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"pt-property",
										"properties",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "applicationNo",
											"value": "{{id}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "mobileNumber",
											"value": "{{mobileNo}}",
											"equals": true,
											"description": "",
											"disabled": true
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"10032017\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Logout as Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"postman.setNextRequest(\"Login as Tax Inspector\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n   \"RequestInfo\":{\n      \"apiId\":\"org.egov.pgr\",\n      \"ver\":\"1.0\",\n      \"ts\":\"13-04-2017 12:13:30\",\n      \"action\":\"POST\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Login as Tax Inspector",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"Get Boundary Values\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"94836\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/user/oauth/token",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"description": ""
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
										"description": ""
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{taxInspector}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Inbox Files for Tax Inspector",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"for(var i=0;i<jsonData.reportData.length;i++){",
											"   var a = (jsonData.reportData[i][4]).split(\":\")[0];",
											"      if(a.has(environment.key1)){",
											"      tests[\"File got transfered\"] = a.has(environment.key1);",
											"      }",
											"}",
											"",
											"postman.setNextRequest(\"Get user work flow for generalAdmin\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/report/pgr/_get",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n       \"apiId\" : \"emp\",\n       \"ver\" : \"1.0\",\n       \"ts\" : \"10-03-2017 00:00:00\",\n       \"action\" : \"create\",\n       \"did\" : \"1\",\n       \"key\" : \"abcdkey\",\n       \"msgId\" : \"20170310130900\",\n       \"requesterId\" : \"rajesh\",\n       \"authToken\" : \"{{access_token}}\"\n      },\n    \"tenantId\": \"{{tenantId}}\",\n    \"reportName\": \"CommonInbox\",\n    \"searchParams\": [\n      {\"name\":\"positionId\",\n        \"input\" : \"{{posId}}\"\n      }\n    ]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get user work flow details for generalAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"successful\");",
											"",
											"pm.environment.set(\"departId\", jsonData.Employee[0].assignments[0].department);",
											"",
											"pm.environment.set(\"designId\", jsonData.Employee[0].assignments[0].designation);",
											"",
											"pm.environment.set(\"posId\", jsonData.Employee[0].assignments[0].position);",
											"",
											"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
											"    postman.setNextRequest(\"Update Property of Open Space from Tax Inspector\");",
											"}",
											"else{",
											"postman.setNextRequest(\"Update Property of Others from Tax Inspector\");    ",
											"}",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/hr-employee/employees/_search?tenantId={{tenantId}}&userName={{generalAdmin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"hr-employee",
										"employees",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "userName",
											"value": "{{generalAdmin}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n       \"apiId\" : \"emp\",\n       \"ver\" : \"1.0\",\n       \"ts\" : \"10-03-2017 00:00:00\",\n       \"action\" : \"create\",\n       \"did\" : \"1\",\n       \"key\" : \"abcdkey\",\n       \"msgId\" : \"20170310130900\",\n       \"requesterId\" : \"rajesh\",\n       \"authToken\" : \"{{access_token}}\"\n      }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Property of Others from Tax Inspector",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"postman.setEnvironmentVariable(\"id\", jsonData.properties[0].propertyDetail.applicationNo);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"",
											"tests[\"Structure Type matches\"] = environment.structureType.has(jsonData.properties[0].propertyDetail.floors[0].units[0].structure);",
											"",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"",
											"postman.setNextRequest(\"Logout as Tax Inspector\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/pt-property/properties/_update",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"properties\":[  \n      {  \n         \"id\":{{key1}},\n         \"tenantId\":\"{{tenantId}}\",\n         \"upicNumber\":null,\n         \"oldUpicNumber\":null,\n         \"vltUpicNumber\":null,\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"id\":{{key1}},\n            \"tenantId\":\"{{tenantId}}\",\n            \"latitude\":null,\n            \"longitude\":null,\n            \"addressId\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"surveyNo\":null\n         },\n         \"owners\":[  \n            {  \n               \"id\":{{key6}},\n               \"userName\":\"{{mobileNo}}\",\n               \"password\":null,\n               \"salutation\":null,\n               \"name\":\"Srinu\",\n               \"gender\":\"MALE\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"emailId\":\"srinu@test.com\",\n               \"altContactNumber\":null,\n               \"pan\":null,\n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"permanentAddress\":null,\n               \"permanentCity\":null,\n               \"permanentPincode\":null,\n               \"correspondenceCity\":null,\n               \"correspondencePincode\":null,\n               \"correspondenceAddress\":null,\n               \"active\":true,\n               \"dob\":null,\n               \"pwdExpiryDate\":\"04-12-2017 19:19:10\",\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"signature\":null,\n               \"accountLocked\":false,\n               \"roles\":[  \n                  {  \n                     \"id\":49,\n                     \"name\":\"Citizen\",\n                     \"code\":\"CITIZEN\",\n                     \"description\":null,\n                     \"auditDetails\":null,\n                     \"tenantId\":null\n                  }\n               ],\n               \"fatherOrHusbandName\":\"P Sudheer\",\n               \"bloodGroup\":null,\n               \"identificationMark\":null,\n               \"photo\":null,\n               \"auditDetails\":{  \n                  \"createdBy\":\"1\",\n                  \"lastModifiedBy\":\"1\",\n                  \"createdTime\":1504619354684,\n                  \"lastModifiedTime\":1504619354684\n               },\n               \"otpReference\":null,\n               \"tenantId\":\"{{tenantId}}\",\n               \"isPrimaryOwner\":false,\n               \"isSecondaryOwner\":false,\n               \"ownerShipPercentage\":70,\n               \"ownerType\":null,\n               \"owner\":{{key6}}\n            }\n         ],\n         \"propertyDetail\":{  \n            \"id\":{{key1}},\n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017 00:00:00\",\n            \"reason\":\"CREATE\",\n            \"status\":\"WORKFLOW\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017 00:00:00\",\n            \"isExempted\":false,\n            \"exemptionReason\":null,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":1000,\n            \"totalBuiltupArea\":1000,\n            \"undividedShare\":0,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":false,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"floors\":[  \n               {  \n                  \"id\":{{key2}},\n                  \"floorNo\":\"4\",\n                  \"units\":[  \n                     {  \n                        \"id\":{{key3}},\n                        \"unitNo\":\"102\",\n                        \"units\":null,\n                        \"unitType\":\"FLAT\",\n                        \"length\":100,\n                        \"width\":10,\n                        \"builtupArea\":1000,\n                        \"assessableArea\":30,\n                        \"bpaBuiltupArea\":0,\n                        \"bpaNo\":null,\n                        \"bpaDate\":null,\n                        \"usage\":\"{{usageType}}\",\n                        \"subUsage\":null,\n                        \"occupancyType\":\"{{occupancyType}}\",\n                        \"occupierName\":null,\n                        \"firmName\":null,\n                        \"rentCollected\":0,\n                        \"structure\":\"{{structureType}}\",\n                        \"age\":\"0TO5\",\n                        \"exemptionReason\":null,\n                        \"isStructured\":false,\n                        \"occupancyDate\":\"01/06/2017 00:00:00\",\n                        \"constCompletionDate\":\"01/06/2017 00:00:00\",\n                        \"manualArv\":0,\n                        \"arv\":0,\n                        \"electricMeterNo\":null,\n                        \"waterMeterNo\":null,\n                        \"parentid\":0,\n                        \"isAuthorised\":true,\n                        \"constructionStartDate\":null,\n                        \"landCost\":0,\n                        \"buildingCost\":0,\n                        \"carpetArea\":50,\n                        \"exemptionArea\":0,\n                        \"auditDetails\":{  \n                           \"createdBy\":\"1\",\n                           \"lastModifiedBy\":\"1\",\n                           \"createdTime\":1504619354684,\n                           \"lastModifiedTime\":1504619354684\n                        }\n                     }\n                  ],\n                  \"auditDetails\":{  \n                     \"createdBy\":\"1\",\n                     \"lastModifiedBy\":\"1\",\n                     \"createdTime\":1504619354684,\n                     \"lastModifiedTime\":1504619354684\n                  }\n               }\n            ],\n            \"documents\":[  \n\n            ],\n            \"stateId\":\"{{key4}}\",\n            \"applicationNo\":\"{{id}}\",\n            \"taxCalculations\":\"[{\\\"toDate\\\": \\\"31/03/2018 23:59:59\\\", \\\"fromDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"unitTaxes\\\": [{\\\"unitNo\\\": \\\"102\\\", \\\"unitTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": null, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103420.8, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}, \\\"floorNumber\\\": \\\"4\\\", \\\"usageFactor\\\": 7.0, \\\"assessableArea\\\": 30.0, \\\"subUsageFactor\\\": null, \\\"structureFactor\\\": 2.0}], \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"propertyTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": 0.0, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103421.0, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}}]\",\n            \"workFlowDetails\":{  \n               \"department\":{{departId}},\n               \"designation\":{{designId}},\n               \"initiatorPosition\":null,\n               \"assignee\":{{posId}},\n               \"action\":\"Forward\",\n               \"status\":\"Clerk Approved\"\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"assessmentDates\":null,\n            \"builderDetails\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null\n         },\n         \"vacantLand\":null,\n         \"assessmentDate\":null,\n         \"occupancyDate\":\"01/06/2017 00:00:00\",\n         \"gisRefNo\":null,\n         \"isAuthorised\":false,\n         \"isUnderWorkflow\":false,\n         \"boundary\":{  \n            \"id\":{{key1}},\n            \"revenueBoundary\":{  \n               \"id\":{{boundaryValue}},\n               \"name\":null\n            },\n            \"locationBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"adminBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"guidanceValueBoundary\" : {{guidanceValueBoundary}},\n            \"auditDetails\":{  \n               \"createdBy\":\"73\",\n               \"lastModifiedBy\":\"73\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            }\n         },\n         \"active\":true,\n         \"channel\":\"SYSTEM\",\n         \"auditDetails\":{  \n            \"createdBy\":\"73\",\n            \"lastModifiedBy\":\"73\",\n            \"createdTime\":1504619354684,\n            \"lastModifiedTime\":1504619354684\n         },\n         \"demands\":[  \n            {  \n               \"id\":\"{{key5}}\",\n               \"tenantId\":null,\n               \"consumerCode\":null,\n               \"consumerType\":null,\n               \"businessService\":null,\n               \"owner\":null,\n               \"taxPeriodFrom\":null,\n               \"taxPeriodTo\":null,\n               \"demandDetails\":[  \n\n               ],\n               \"minimumAmountPayable\":0,\n               \"auditDetail\":null\n            }\n         ],\n         \"sequenceNo\":123\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1504621997325,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Property of Open Space from Tax Inspector",
							"request": {
								"url": "{{url}}/pt-property/properties/_update",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"properties\":[  \n      {  \n         \"id\":{{key1}},\n         \"tenantId\":\"{{tenantId}}\",\n         \"upicNumber\":null,\n         \"oldUpicNumber\":null,\n         \"vltUpicNumber\":null,\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"id\":{{key1}},\n            \"tenantId\":\"{{tenantId}}\",\n            \"latitude\":null,\n            \"longitude\":null,\n            \"addressId\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"surveyNo\":null\n         },\n         \"owners\":[  \n            {  \n               \"id\":{{key6}},\n               \"userName\":\"{{mobileNo}}\",\n               \"password\":null,\n               \"salutation\":null,\n               \"name\":\"Srinu\",\n               \"gender\":\"MALE\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"emailId\":\"srinu@test.com\",\n               \"altContactNumber\":null,\n               \"pan\":null,\n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"permanentAddress\":null,\n               \"permanentCity\":null,\n               \"permanentPincode\":null,\n               \"correspondenceCity\":null,\n               \"correspondencePincode\":null,\n               \"correspondenceAddress\":null,\n               \"active\":true,\n               \"dob\":null,\n               \"pwdExpiryDate\":\"04-12-2017 19:19:10\",\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"signature\":null,\n               \"accountLocked\":false,\n               \"roles\":[  \n                  {  \n                     \"id\":49,\n                     \"name\":\"Citizen\",\n                     \"code\":\"CITIZEN\",\n                     \"description\":null,\n                     \"auditDetails\":null,\n                     \"tenantId\":null\n                  }\n               ],\n               \"fatherOrHusbandName\":\"P Sudheer\",\n               \"bloodGroup\":null,\n               \"identificationMark\":null,\n               \"photo\":null,\n               \"auditDetails\":{  \n                  \"createdBy\":\"1\",\n                  \"lastModifiedBy\":\"1\",\n                  \"createdTime\":1504619354684,\n                  \"lastModifiedTime\":1504619354684\n               },\n               \"otpReference\":null,\n               \"tenantId\":\"{{tenantId}}\",\n               \"isPrimaryOwner\":false,\n               \"isSecondaryOwner\":false,\n               \"ownerShipPercentage\":70,\n               \"ownerType\":null,\n               \"owner\":{{key6}}\n            }\n         ],\n         \"propertyDetail\":{  \n            \"id\":{{key1}},\n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017 00:00:00\",\n            \"reason\":\"CREATE\",\n            \"status\":\"WORKFLOW\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017 00:00:00\",\n            \"isExempted\":false,\n            \"exemptionReason\":null,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":1000,\n            \"totalBuiltupArea\":1000,\n            \"undividedShare\":0,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":false,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"documents\":[  \n\n            ],\n            \"stateId\":\"{{key4}}\",\n            \"applicationNo\":\"{{id}}\",\n            \"taxCalculations\":\"[{\\\"toDate\\\": \\\"31/03/2018 23:59:59\\\", \\\"fromDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"unitTaxes\\\": [{\\\"unitNo\\\": \\\"102\\\", \\\"unitTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": null, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103420.8, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}, \\\"floorNumber\\\": \\\"4\\\", \\\"usageFactor\\\": 7.0, \\\"assessableArea\\\": 30.0, \\\"subUsageFactor\\\": null, \\\"structureFactor\\\": 2.0}], \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"propertyTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": 0.0, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103421.0, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}}]\",\n            \"workFlowDetails\":{  \n               \"department\":{{departId}},\n               \"designation\":{{designId}},\n               \"initiatorPosition\":null,\n               \"assignee\":{{posId}},\n               \"action\":\"Forward\",\n               \"status\":\"Clerk Approved\"\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"assessmentDates\":null,\n            \"builderDetails\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null\n         },\n         \"vacantLand\":{\n                \"id\": {{key7}},\n                \"surveyNumber\": \"surveynumber2\",\n                \"pattaNumber\": \"pattano1\",\n                \"marketValue\": 10748,\n                \"capitalValue\": 4522,\n                \"layoutApprovedAuth\": \"laa2\",\n                \"layoutPermissionNo\": \"lpn2\",\n                \"layoutPermissionDate\": \"10/05/2017 00:00:00\",\n                \"resdPlotArea\": 475,\n                \"nonResdPlotArea\": 658,\n                \"auditDetails\": {\n                    \"createdBy\": \"13322\",\n                    \"lastModifiedBy\": \"13322\",\n                    \"createdTime\": 1505456248896,\n                    \"lastModifiedTime\": 1505456248896\n                }\n            },\n         \"assessmentDate\":null,\n         \"occupancyDate\":\"01/06/2017 00:00:00\",\n         \"gisRefNo\":null,\n         \"isAuthorised\":false,\n         \"isUnderWorkflow\":false,\n         \"boundary\":{  \n            \"id\":{{key1}},\n            \"revenueBoundary\":{  \n               \"id\":{{boundaryValue}},\n               \"name\":null\n            },\n            \"locationBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"adminBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"guidanceValueBoundary\" : {{guidanceValueBoundary}},\n            \"auditDetails\":{  \n               \"createdBy\":\"73\",\n               \"lastModifiedBy\":\"73\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            }\n         },\n         \"active\":true,\n         \"channel\":\"SYSTEM\",\n         \"auditDetails\":{  \n            \"createdBy\":\"73\",\n            \"lastModifiedBy\":\"73\",\n            \"createdTime\":1504619354684,\n            \"lastModifiedTime\":1504619354684\n         },\n         \"demands\":[  \n            {  \n               \"id\":\"{{key5}}\",\n               \"tenantId\":null,\n               \"consumerCode\":null,\n               \"consumerType\":null,\n               \"businessService\":null,\n               \"owner\":null,\n               \"taxPeriodFrom\":null,\n               \"taxPeriodTo\":null,\n               \"demandDetails\":[  \n\n               ],\n               \"minimumAmountPayable\":0,\n               \"auditDetail\":null\n            }\n         ],\n         \"sequenceNo\":123\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1504621997325,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Logout as Tax Inspector",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n   \"RequestInfo\":{\n      \"apiId\":\"org.egov.pgr\",\n      \"ver\":\"1.0\",\n      \"ts\":\"13-04-2017 12:13:30\",\n      \"action\":\"POST\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Login as General Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"Get Inbox Files for General Admin\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"94836\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/user/oauth/token",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"description": ""
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0",
										"description": ""
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{generalAdmin}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read",
											"type": "text"
										},
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"description": "",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Inbox Files for General Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"for(var i=0;i<jsonData.reportData.length;i++){",
											"   var a = (jsonData.reportData[i][4]).split(\":\")[0];",
											"   if(a.has(environment.key1)){",
											"   tests[\"File got transfered\"] = a.has(environment.key1);",
											"   }",
											"}",
											"",
											"postman.setNextRequest(\"Get user work flow details for employee\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/report/pgr/_get",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n       \"apiId\" : \"emp\",\n       \"ver\" : \"1.0\",\n       \"ts\" : \"10-03-2017 00:00:00\",\n       \"action\" : \"create\",\n       \"did\" : \"1\",\n       \"key\" : \"abcdkey\",\n       \"msgId\" : \"20170310130900\",\n       \"requesterId\" : \"rajesh\",\n       \"authToken\" : \"{{access_token}}\"\n      },\n    \"tenantId\": \"{{tenantId}}\",\n    \"reportName\": \"CommonInbox\",\n    \"searchParams\": [\n      {\"name\":\"positionId\",\n        \"input\" : \"{{posId}}\"\n      }\n    ]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get user work flow details for employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status is success\"] = jsonData.ResponseInfo.status.has(\"successful\");",
											"",
											"pm.environment.set(\"departId\", jsonData.Employee[0].assignments[0].department);",
											"",
											"pm.environment.set(\"designId\", jsonData.Employee[0].assignments[0].designation);",
											"",
											"pm.environment.set(\"posId\", jsonData.Employee[0].assignments[0].position);",
											"",
											"if(environment.propertyType.has(\"PTYPE_OPEN_LAND\")){",
											"    postman.setNextRequest(\"Update Property of Open Space from General Admin\")",
											"}",
											"else{",
											"postman.setNextRequest(\"Update Property of others from General Admin\");}"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/hr-employee/employees/_search?tenantId={{tenantId}}&userName={{username}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"hr-employee",
										"employees",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true,
											"description": ""
										},
										{
											"key": "userName",
											"value": "{{username}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"RequestInfo\": {\n       \"apiId\" : \"emp\",\n       \"ver\" : \"1.0\",\n       \"ts\" : \"10-03-2017 00:00:00\",\n       \"action\" : \"create\",\n       \"did\" : \"1\",\n       \"key\" : \"abcdkey\",\n       \"msgId\" : \"20170310130900\",\n       \"requesterId\" : \"rajesh\",\n       \"authToken\" : \"{{access_token}}\"\n      }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Property of Open Space for General Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"postman.setEnvironmentVariable(\"id\", jsonData.properties[0].propertyDetail.applicationNo);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"",
											"postman.setEnvironmentVariable(\"upicNumber\",jsonData.properties[0].upicNumber);",
											"",
											"postman.setNextRequest(\"Logout as General Admin\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/pt-property/properties/_update",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"properties\":[  \n      {  \n         \"id\":{{key1}},\n         \"tenantId\":\"{{tenantId}}\",\n         \"upicNumber\":null,\n         \"oldUpicNumber\":null,\n         \"vltUpicNumber\":null,\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"id\":{{key1}},\n            \"tenantId\":\"{{tenantId}}\",\n            \"latitude\":null,\n            \"longitude\":null,\n            \"addressId\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"surveyNo\":null\n         },\n         \"owners\":[  \n            {  \n               \"id\":{{key6}},\n               \"userName\":\"{{mobileNo}}\",\n               \"password\":null,\n               \"salutation\":null,\n               \"name\":\"Srinu\",\n               \"gender\":\"MALE\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"emailId\":\"srinu@test.com\",\n               \"altContactNumber\":null,\n               \"pan\":null,\n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"permanentAddress\":null,\n               \"permanentCity\":null,\n               \"permanentPincode\":null,\n               \"correspondenceCity\":null,\n               \"correspondencePincode\":null,\n               \"correspondenceAddress\":null,\n               \"active\":true,\n               \"dob\":null,\n               \"pwdExpiryDate\":\"04-12-2017 19:19:10\",\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"signature\":null,\n               \"accountLocked\":false,\n               \"roles\":[  \n                  {  \n                     \"id\":49,\n                     \"name\":\"Citizen\",\n                     \"code\":\"CITIZEN\",\n                     \"description\":null,\n                     \"auditDetails\":null,\n                     \"tenantId\":null\n                  }\n               ],\n               \"fatherOrHusbandName\":\"P Sudheer\",\n               \"bloodGroup\":null,\n               \"identificationMark\":null,\n               \"photo\":null,\n               \"auditDetails\":{  \n                  \"createdBy\":\"1\",\n                  \"lastModifiedBy\":\"1\",\n                  \"createdTime\":1504619354684,\n                  \"lastModifiedTime\":1504619354684\n               },\n               \"otpReference\":null,\n               \"tenantId\":\"{{tenantId}}\",\n               \"isPrimaryOwner\":false,\n               \"isSecondaryOwner\":false,\n               \"ownerShipPercentage\":70,\n               \"ownerType\":null,\n               \"owner\":{{key6}}\n            }\n         ],\n         \"propertyDetail\":{  \n            \"id\":{{key1}},\n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017 00:00:00\",\n            \"reason\":\"CREATE\",\n            \"status\":\"WORKFLOW\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017 00:00:00\",\n            \"isExempted\":false,\n            \"exemptionReason\":null,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":1000,\n            \"totalBuiltupArea\":1000,\n            \"undividedShare\":0,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":false,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"documents\":[  \n\n            ],\n            \"stateId\":\"{{key4}}\",\n            \"applicationNo\":\"{{id}}\",\n            \"taxCalculations\":\"[{\\\"toDate\\\": \\\"31/03/2018 23:59:59\\\", \\\"fromDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"unitTaxes\\\": [{\\\"unitNo\\\": \\\"102\\\", \\\"unitTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": null, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103420.8, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}, \\\"floorNumber\\\": \\\"4\\\", \\\"usageFactor\\\": 7.0, \\\"assessableArea\\\": 30.0, \\\"subUsageFactor\\\": null, \\\"structureFactor\\\": 2.0}], \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"propertyTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": 0.0, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103421.0, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}}]\",\n            \"workFlowDetails\":{  \n               \"department\":\"department\",\n               \"designation\":\"designation\",\n               \"initiatorPosition\":{{posId}},\n               \"assignee\":{{posId}},\n               \"action\":\"Approve\",\n               \"status\":\"Tax Inspector Approved\"\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"assessmentDates\":null,\n            \"builderDetails\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null\n         },\n         \"vacantLand\":{\n                \"id\": {{key7}},\n                \"surveyNumber\": \"surveynumber2\",\n                \"pattaNumber\": \"pattano1\",\n                \"marketValue\": 10748,\n                \"capitalValue\": 4522,\n                \"layoutApprovedAuth\": \"laa2\",\n                \"layoutPermissionNo\": \"lpn2\",\n                \"layoutPermissionDate\": \"10/05/2017 00:00:00\",\n                \"resdPlotArea\": 475,\n                \"nonResdPlotArea\": 658,\n                \"auditDetails\": {\n                    \"createdBy\": \"1\",\n                    \"lastModifiedBy\": \"1\",\n                    \"createdTime\": 1505456248896,\n                    \"lastModifiedTime\": 1505456248896\n                }\n            },\n         \"assessmentDate\":null,\n         \"occupancyDate\":\"01/06/2017 00:00:00\",\n         \"gisRefNo\":null,\n         \"isAuthorised\":false,\n         \"isUnderWorkflow\":false,\n         \"boundary\":{  \n            \"id\":{{key1}},\n            \"revenueBoundary\":{  \n               \"id\":{{boundaryValue}},\n               \"name\":null\n            },\n            \"locationBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"adminBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"guidanceValueBoundary\" : {{guidanceValueBoundary}},\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            }\n         },\n         \"active\":true,\n         \"channel\":\"SYSTEM\",\n         \"auditDetails\":{  \n            \"createdBy\":\"1\",\n            \"lastModifiedBy\":\"1\",\n            \"createdTime\":1504619354684,\n            \"lastModifiedTime\":1504619354684\n         },\n         \"demands\":[  \n            {  \n               \"id\":\"{{key5}}\",\n               \"tenantId\":null,\n               \"consumerCode\":null,\n               \"consumerType\":null,\n               \"businessService\":null,\n               \"owner\":null,\n               \"taxPeriodFrom\":null,\n               \"taxPeriodTo\":null,\n               \"demandDetails\":[  \n\n               ],\n               \"minimumAmountPayable\":0,\n               \"auditDetail\":null\n            }\n         ],\n         \"sequenceNo\":123\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1504621997325,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Property of others from General Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"postman.setEnvironmentVariable(\"id\", jsonData.properties[0].propertyDetail.applicationNo);",
											"",
											"tests[\"Status is success\"] = jsonData.responseInfo.status.has(\"SUCCESSFUL\");",
											"",
											"tests[\"Property Type matches\"] = environment.propertyType.has(jsonData.properties[0].propertyDetail.propertyType);",
											"",
											"tests[\"Structure Type matches\"] = environment.structureType.has(jsonData.properties[0].propertyDetail.floors[0].units[0].structure);",
											"",
											"tests[\"Usage Type matches\"] = environment.usageType.has(jsonData.properties[0].propertyDetail.usage);",
											"",
											"postman.setEnvironmentVariable(\"upicNumber\",jsonData.properties[0].upicNumber);",
											"",
											"postman.setNextRequest(\"Logout as General Admin\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/pt-property/properties/_update",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"properties\":[  \n      {  \n         \"id\":{{key1}},\n         \"tenantId\":\"{{tenantId}}\",\n         \"upicNumber\":null,\n         \"oldUpicNumber\":null,\n         \"vltUpicNumber\":null,\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"id\":{{key1}},\n            \"tenantId\":\"{{tenantId}}\",\n            \"latitude\":null,\n            \"longitude\":null,\n            \"addressId\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"surveyNo\":null\n         },\n         \"owners\":[  \n            {  \n               \"id\":{{key6}},\n               \"userName\":\"{{mobileNo}}\",\n               \"password\":null,\n               \"salutation\":null,\n               \"name\":\"Srinu\",\n               \"gender\":\"MALE\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"emailId\":\"srinu@test.com\",\n               \"altContactNumber\":null,\n               \"pan\":null,\n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"permanentAddress\":null,\n               \"permanentCity\":null,\n               \"permanentPincode\":null,\n               \"correspondenceCity\":null,\n               \"correspondencePincode\":null,\n               \"correspondenceAddress\":null,\n               \"active\":true,\n               \"dob\":null,\n               \"pwdExpiryDate\":\"04-12-2017 19:19:10\",\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"signature\":null,\n               \"accountLocked\":false,\n               \"roles\":[  \n                  {  \n                     \"id\":49,\n                     \"name\":\"Citizen\",\n                     \"code\":\"CITIZEN\",\n                     \"description\":null,\n                     \"auditDetails\":null,\n                     \"tenantId\":null\n                  }\n               ],\n               \"fatherOrHusbandName\":\"P Sudheer\",\n               \"bloodGroup\":null,\n               \"identificationMark\":null,\n               \"photo\":null,\n               \"auditDetails\":{  \n                  \"createdBy\":\"1\",\n                  \"lastModifiedBy\":\"1\",\n                  \"createdTime\":1504619354684,\n                  \"lastModifiedTime\":1504619354684\n               },\n               \"otpReference\":null,\n               \"tenantId\":\"{{tenantId}}\",\n               \"isPrimaryOwner\":false,\n               \"isSecondaryOwner\":false,\n               \"ownerShipPercentage\":70,\n               \"ownerType\":null,\n               \"owner\":{{key6}}\n            }\n         ],\n         \"propertyDetail\":{  \n            \"id\":{{key1}},\n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017 00:00:00\",\n            \"reason\":\"CREATE\",\n            \"status\":\"WORKFLOW\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017 00:00:00\",\n            \"isExempted\":false,\n            \"exemptionReason\":null,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":1000,\n            \"totalBuiltupArea\":1000,\n            \"undividedShare\":0,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":false,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"floors\":[  \n               {  \n                  \"id\":{{key2}},\n                  \"floorNo\":\"4\",\n                  \"units\":[  \n                     {  \n                        \"id\":{{key3}},\n                        \"unitNo\":\"102\",\n                        \"units\":null,\n                        \"unitType\":\"FLAT\",\n                        \"length\":100,\n                        \"width\":10,\n                        \"builtupArea\":1000,\n                        \"assessableArea\":30,\n                        \"bpaBuiltupArea\":0,\n                        \"bpaNo\":null,\n                        \"bpaDate\":null,\n                        \"usage\":\"{{usageType}}\",\n                        \"subUsage\":null,\n                        \"occupancyType\":\"{{occupancyType}}\",\n                        \"occupierName\":null,\n                        \"firmName\":null,\n                        \"rentCollected\":0,\n                        \"structure\":\"{{structureType}}\",\n                        \"age\":\"0TO5\",\n                        \"exemptionReason\":null,\n                        \"isStructured\":false,\n                        \"occupancyDate\":\"01/06/2017 00:00:00\",\n                        \"constCompletionDate\":\"01/06/2017 00:00:00\",\n                        \"manualArv\":0,\n                        \"arv\":0,\n                        \"electricMeterNo\":null,\n                        \"waterMeterNo\":null,\n                        \"parentid\":0,\n                        \"isAuthorised\":true,\n                        \"constructionStartDate\":null,\n                        \"landCost\":0,\n                        \"buildingCost\":0,\n                        \"carpetArea\":50,\n                        \"exemptionArea\":0,\n                        \"auditDetails\":{  \n                           \"createdBy\":\"1\",\n                           \"lastModifiedBy\":\"1\",\n                           \"createdTime\":1504619354684,\n                           \"lastModifiedTime\":1504619354684\n                        }\n                     }\n                  ],\n                  \"auditDetails\":{  \n                     \"createdBy\":\"1\",\n                     \"lastModifiedBy\":\"1\",\n                     \"createdTime\":1504619354684,\n                     \"lastModifiedTime\":1504619354684\n                  }\n               }\n            ],\n            \"documents\":[  \n\n            ],\n            \"stateId\":\"{{key4}}\",\n            \"applicationNo\":\"{{id}}\",\n            \"taxCalculations\":\"[{\\\"toDate\\\": \\\"31/03/2018 23:59:59\\\", \\\"fromDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"unitTaxes\\\": [{\\\"unitNo\\\": \\\"102\\\", \\\"unitTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": null, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103420.8, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}, \\\"floorNumber\\\": \\\"4\\\", \\\"usageFactor\\\": 7.0, \\\"assessableArea\\\": 30.0, \\\"subUsageFactor\\\": null, \\\"structureFactor\\\": 2.0}], \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"propertyTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": 0.0, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103421.0, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}}]\",\n            \"workFlowDetails\":{  \n               \"department\":\"department\",\n               \"designation\":\"designation\",\n               \"initiatorPosition\":{{posId}},\n               \"assignee\":{{posId}},\n               \"action\":\"Approve\",\n               \"status\":\"Tax Inspector Approved\"\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"assessmentDates\":null,\n            \"builderDetails\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null\n         },\n         \"vacantLand\":null,\n         \"assessmentDate\":null,\n         \"occupancyDate\":\"01/06/2017 00:00:00\",\n         \"gisRefNo\":null,\n         \"isAuthorised\":false,\n         \"isUnderWorkflow\":false,\n         \"boundary\":{  \n            \"id\":{{key1}},\n            \"revenueBoundary\":{  \n               \"id\":{{boundaryValue}},\n               \"name\":null\n            },\n            \"locationBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"adminBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"guidanceValueBoundary\" : {{guidanceValueBoundary}},\n            \"auditDetails\":{  \n               \"createdBy\":\"73\",\n               \"lastModifiedBy\":\"73\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            }\n         },\n         \"active\":true,\n         \"channel\":\"SYSTEM\",\n         \"auditDetails\":{  \n            \"createdBy\":\"73\",\n            \"lastModifiedBy\":\"73\",\n            \"createdTime\":1504619354684,\n            \"lastModifiedTime\":1504619354684\n         },\n         \"demands\":[  \n            {  \n               \"id\":\"{{key5}}\",\n               \"tenantId\":null,\n               \"consumerCode\":null,\n               \"consumerType\":null,\n               \"businessService\":null,\n               \"owner\":null,\n               \"taxPeriodFrom\":null,\n               \"taxPeriodTo\":null,\n               \"demandDetails\":[  \n\n               ],\n               \"minimumAmountPayable\":0,\n               \"auditDetail\":null\n            }\n         ],\n         \"sequenceNo\":123\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1504621997325,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Logout as General Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/user/_logout?access_token={{access_token}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"_logout"
									],
									"query": [
										{
											"key": "access_token",
											"value": "{{access_token}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n   \"RequestInfo\":{\n      \"apiId\":\"org.egov.pgr\",\n      \"ver\":\"1.0\",\n      \"ts\":\"13-04-2017 12:13:30\",\n      \"action\":\"POST\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "UserSearch",
					"request": {
						"url": "{{url}}/user/_search",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"RequestInfo\":{\n      \"authToken\":\"{{access_token}}\",\n      \"ts\":\"2017-07-10 00:00:00\",\n      \"ver\":\"1.0\",\n      \"requesterId\":\"rajesh\",\n      \"action\":\"create\",\n      \"msgId\":\"20170310130900\",\n      \"apiId\":\"emp\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\"\n   },\n    \"tenantId\" : \"{{tenantId}}\",\n    \"id\":[3137\n      ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Depreciation Values",
					"request": {
						"url": {
							"raw": "{{url}}/pt-property/property/depreciations/_search?tenantId={{tenantId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pt-property",
								"property",
								"depreciations",
								"_search"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"RequestInfo\": {\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"yosadhara\",\n   \"authToken\": \"{{access_token}}\",\n   \"apiId\": \"\",\n   \"ver\": \"1.0\",\n   \"ts\": \"1234567890\",\n   \"key\": \"abcdkey\"\n    }\n }"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Sub Usage Type Details",
					"request": {
						"url": {
							"raw": "{{url}}/pt-property/property/usages/_search?tenantId={{tenantId}}&parent={{usageType}}&pageSize=500",
							"host": [
								"{{url}}"
							],
							"path": [
								"pt-property",
								"property",
								"usages",
								"_search"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}",
									"equals": true,
									"description": ""
								},
								{
									"key": "parent",
									"value": "{{usageType}}",
									"equals": true,
									"description": ""
								},
								{
									"key": "pageSize",
									"value": "500",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"RequestInfo\": {\n           \"apiId\": \"org.egov.ptis\", \n           \"ver\": \"1.0\",\n           \"ts\": \"20934234234234\",\n           \"action\": \"asd\",\n           \"did\": \"4354648646\", \n           \"key\": \"xyz\",\n           \"msgId\": \"654654\",\n           \"requesterId\": \"61\",\n           \"authToken\": \"{{access_token}}\"\n        }\n}        \n        "
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Reject Property application by tax inspector",
					"request": {
						"url": "{{url}}/pt-property/properties/_update",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n   \"properties\":[  \n      {  \n         \"id\":{{key1}},\n         \"tenantId\":\"{{tenantId}}\",\n         \"upicNumber\":null,\n         \"oldUpicNumber\":null,\n         \"vltUpicNumber\":null,\n         \"creationReason\":\"NEWPROPERTY\",\n         \"address\":{  \n            \"id\":{{key1}},\n            \"tenantId\":\"{{tenantId}}\",\n            \"latitude\":null,\n            \"longitude\":null,\n            \"addressId\":null,\n            \"addressNumber\":\"{{doorNo}}\",\n            \"addressLine1\":null,\n            \"addressLine2\":null,\n            \"landmark\":null,\n            \"city\":\"Roha Municipal Council\",\n            \"pincode\":\"445566\",\n            \"detail\":null,\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"surveyNo\":null\n         },\n         \"owners\":[  \n            {  \n               \"id\":{{key6}},\n               \"userName\":\"{{mobileNo}}\",\n               \"password\":null,\n               \"salutation\":null,\n               \"name\":\"Srinu\",\n               \"gender\":\"MALE\",\n               \"mobileNumber\":\"{{mobileNo}}\",\n               \"emailId\":\"srinu@test.com\",\n               \"altContactNumber\":null,\n               \"pan\":null,\n               \"aadhaarNumber\":\"{{aadhaarNo}}\",\n               \"permanentAddress\":null,\n               \"permanentCity\":null,\n               \"permanentPincode\":null,\n               \"correspondenceCity\":null,\n               \"correspondencePincode\":null,\n               \"correspondenceAddress\":null,\n               \"active\":true,\n               \"dob\":null,\n               \"pwdExpiryDate\":\"04-12-2017 19:19:10\",\n               \"locale\":\"en_IN\",\n               \"type\":\"CITIZEN\",\n               \"signature\":null,\n               \"accountLocked\":false,\n               \"roles\":[  \n                  {  \n                     \"id\":49,\n                     \"name\":\"Citizen\",\n                     \"code\":\"CITIZEN\",\n                     \"description\":null,\n                     \"auditDetails\":null,\n                     \"tenantId\":null\n                  }\n               ],\n               \"fatherOrHusbandName\":\"P Sudheer\",\n               \"bloodGroup\":null,\n               \"identificationMark\":null,\n               \"photo\":null,\n               \"auditDetails\":{  \n                  \"createdBy\":\"1\",\n                  \"lastModifiedBy\":\"1\",\n                  \"createdTime\":1504619354684,\n                  \"lastModifiedTime\":1504619354684\n               },\n               \"otpReference\":null,\n               \"tenantId\":\"{{tenantId}}\",\n               \"isPrimaryOwner\":false,\n               \"isSecondaryOwner\":false,\n               \"ownerShipPercentage\":70,\n               \"ownerType\":null,\n               \"owner\":{{key6}}\n            }\n         ],\n         \"propertyDetail\":{  \n            \"id\":{{key1}},\n            \"source\":\"MUNICIPAL_RECORDS\",\n            \"regdDocNo\":\"rdn2\",\n            \"regdDocDate\":\"15/02/2017 00:00:00\",\n            \"reason\":\"CREATE\",\n            \"status\":\"WORKFLOW\",\n            \"isVerified\":true,\n            \"verificationDate\":\"25/05/2017 00:00:00\",\n            \"isExempted\":false,\n            \"exemptionReason\":null,\n            \"propertyType\":\"{{propertyType}}\",\n            \"category\":null,\n            \"usage\":\"{{usageType}}\",\n            \"department\":null,\n            \"apartment\":null,\n            \"siteLength\":12,\n            \"siteBreadth\":15,\n            \"sitalArea\":1000,\n            \"totalBuiltupArea\":1000,\n            \"undividedShare\":0,\n            \"noOfFloors\":1,\n            \"isSuperStructure\":false,\n            \"landOwner\":null,\n            \"floorType\":null,\n            \"woodType\":null,\n            \"roofType\":null,\n            \"wallType\":null,\n            \"floors\":[  \n               {  \n                  \"id\":{{key2}},\n                  \"floorNo\":\"4\",\n                  \"units\":[  \n                     {  \n                        \"id\":{{key3}},\n                        \"unitNo\":\"102\",\n                        \"units\":null,\n                        \"unitType\":\"FLAT\",\n                        \"length\":100,\n                        \"width\":10,\n                        \"builtupArea\":1000,\n                        \"assessableArea\":30,\n                        \"bpaBuiltupArea\":0,\n                        \"bpaNo\":null,\n                        \"bpaDate\":null,\n                        \"usage\":\"{{usageType}}\",\n                        \"subUsage\":null,\n                        \"occupancyType\":\"{{occupancyType}}\",\n                        \"occupierName\":null,\n                        \"firmName\":null,\n                        \"rentCollected\":0,\n                        \"structure\":\"{{structureType}}\",\n                        \"age\":\"0TO5\",\n                        \"exemptionReason\":null,\n                        \"isStructured\":false,\n                        \"occupancyDate\":\"01/06/2017 00:00:00\",\n                        \"constCompletionDate\":\"01/06/2017 00:00:00\",\n                        \"manualArv\":0,\n                        \"arv\":0,\n                        \"electricMeterNo\":null,\n                        \"waterMeterNo\":null,\n                        \"parentid\":0,\n                        \"isAuthorised\":true,\n                        \"constructionStartDate\":null,\n                        \"landCost\":0,\n                        \"buildingCost\":0,\n                        \"carpetArea\":50,\n                        \"exemptionArea\":0,\n                        \"auditDetails\":{  \n                           \"createdBy\":\"1\",\n                           \"lastModifiedBy\":\"1\",\n                           \"createdTime\":1504619354684,\n                           \"lastModifiedTime\":1504619354684\n                        }\n                     }\n                  ],\n                  \"auditDetails\":{  \n                     \"createdBy\":\"1\",\n                     \"lastModifiedBy\":\"1\",\n                     \"createdTime\":1504619354684,\n                     \"lastModifiedTime\":1504619354684\n                  }\n               }\n            ],\n            \"documents\":[  \n\n            ],\n            \"stateId\":\"{{key4}}\",\n            \"applicationNo\":\"{{id}}\",\n            \"taxCalculations\":\"[{\\\"toDate\\\": \\\"31/03/2018 23:59:59\\\", \\\"fromDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"unitTaxes\\\": [{\\\"unitNo\\\": \\\"102\\\", \\\"unitTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": null, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103420.8, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}, \\\"floorNumber\\\": \\\"4\\\", \\\"usageFactor\\\": 7.0, \\\"assessableArea\\\": 30.0, \\\"subUsageFactor\\\": null, \\\"structureFactor\\\": 2.0}], \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"propertyTaxes\\\": {\\\"totalTax\\\": 41267.0, \\\"manualARV\\\": 0.0, \\\"rebateValue\\\": null, \\\"depreciation\\\": 504.0, \\\"calculatedARV\\\": 103421.0, \\\"effectiveDate\\\": \\\"01/04/2017 00:00:00\\\", \\\"headWiseTaxes\\\": [{\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EDU_CESS\\\", \\\"taxValue\\\": 6206.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"EMP_GUA_CESS\\\", \\\"taxValue\\\": 3103.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"PT_TAX\\\", \\\"taxValue\\\": 31027.0}, {\\\"taxDays\\\": 365, \\\"taxName\\\": \\\"LIB_CESS\\\", \\\"taxValue\\\": 931.0}], \\\"occupancyDate\\\": \\\"01/06/2017\\\", \\\"residentialARV\\\": null, \\\"nonResidentialARV\\\": null}}]\",\n            \"workFlowDetails\":{  \n               \"department\":\"department\",\n               \"designation\":\"designation\",\n               \"initiatorPosition\":null,\n               \"assignee\":{{initiator}},\n               \"action\":\"Rejected\",\n               \"status\":\"Clerk Approved\"\n            },\n            \"auditDetails\":{  \n               \"createdBy\":\"1\",\n               \"lastModifiedBy\":\"1\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            },\n            \"factors\":[  \n               {  \n                  \"name\":\"TOILET\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"ROAD\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"LIFT\",\n                  \"value\":null\n               },\n               {  \n                  \"name\":\"PARKING\",\n                  \"value\":null\n               }\n            ],\n            \"assessmentDates\":null,\n            \"builderDetails\":null,\n            \"bpaNo\":null,\n            \"bpaDate\":null\n         },\n         \"vacantLand\":null,\n         \"assessmentDate\":null,\n         \"occupancyDate\":\"01/06/2017 00:00:00\",\n         \"gisRefNo\":null,\n         \"isAuthorised\":false,\n         \"isUnderWorkflow\":false,\n         \"boundary\":{  \n            \"id\":{{key1}},\n            \"revenueBoundary\":{  \n               \"id\":{{boundaryValue}},\n               \"name\":null\n            },\n            \"locationBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"adminBoundary\":{  \n               \"id\":null,\n               \"name\":null\n            },\n            \"northBoundedBy\":null,\n            \"eastBoundedBy\":null,\n            \"westBoundedBy\":null,\n            \"southBoundedBy\":null,\n            \"guidanceValueBoundary\" : {{guidanceValueBoundary}},\n            \"auditDetails\":{  \n               \"createdBy\":\"73\",\n               \"lastModifiedBy\":\"73\",\n               \"createdTime\":1504619354684,\n               \"lastModifiedTime\":1504619354684\n            }\n         },\n         \"active\":true,\n         \"channel\":\"SYSTEM\",\n         \"auditDetails\":{  \n            \"createdBy\":\"73\",\n            \"lastModifiedBy\":\"73\",\n            \"createdTime\":1504619354684,\n            \"lastModifiedTime\":1504619354684\n         },\n         \"demands\":[  \n            {  \n               \"id\":\"{{key5}}\",\n               \"tenantId\":null,\n               \"consumerCode\":null,\n               \"consumerType\":null,\n               \"businessService\":null,\n               \"owner\":null,\n               \"taxPeriodFrom\":null,\n               \"taxPeriodTo\":null,\n               \"demandDetails\":[  \n\n               ],\n               \"minimumAmountPayable\":0,\n               \"auditDetail\":null\n            }\n         ],\n         \"sequenceNo\":123\n      }\n   ],\n   \"RequestInfo\":{  \n      \"apiId\":\"org.egov.pt\",\n      \"ver\":\"1.0\",\n      \"ts\":1504621997325,\n      \"action\":\"asd\",\n      \"did\":\"4354648646\",\n      \"key\":\"xyz\",\n      \"msgId\":\"654654\",\n      \"requesterId\":\"61\",\n      \"authToken\":\"{{access_token}}\"\n   }\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}