{
	"info": {
		"name": "eGov_Inventory",
		"_postman_id": "a0ddca45-73c5-dead-97b7-aed975348cfe",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Masters",
			"description": "",
			"item": [
				{
					"name": "Material Master",
					"description": "",
					"item": [
						{
							"name": "Functional",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Material\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var materialCode=responseBody.materials[0].code;",
													"",
													"pm.environment.set(\"materialCode\",materialCode);",
													"",
													"",
													"var ResMaterialName=responseBody.materials[0].name;",
													"",
													"pm.environment.set(\"ResMaterialName\",ResMaterialName);",
													"",
													"pm.test(\"MaterialName Matches\", function () {",
													"    pm.expect(ResMaterialName).to.include(pm.environment.get(\"MaterialName\"));",
													"});",
													"",
													"",
													"postman.setNextRequest(\"Search Material\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"MaterialName\",\"MaterialName \"+name1);",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"lotControl\": true,\n      \"serialNumber\": true,\n      \"shelfLifeControl\": true,\n      \"scrapable\": true,\n      \"materialType\": {\n        \"code\": \"MT3\"\n      },\n      \"name\": \"{{MaterialName}}\",\n      \"description\": \"test desc\",\n      \"baseUom\": {\n        \"code\": \"GMS\"\n      },\n      \"inventoryType\": \"Asset\",\n      \"assetCategory\":{\n      \t\"code\":\"null\" \n      },\n      \"storeMapping\": [\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"FM\",\n            \"name\": \"Accounts\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"46130\"\n          },\n          \"active\": true\n        },\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"CD\",\n            \"name\": \"Computer Department\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"42190\"\n          },\n          \"active\": true\n        }\n      ],\n      \"purchaseUom\": {\n        \"code\": \"KGS\"\n      },\n      \"expenseAccount\": {\n        \"glCode\": \"44020\"\n      },\n      \"materialClass\": \"HighUsage\",\n      \"stockingUom\": {\n        \"code\": \"44020\"\n      },\n      \"minQuantity\": \"2\",\n      \"maxQuantity\": \"20\",\n      \"reorderLevel\": \"10\",\n      \"reorderQuantity\": \"8\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResMaterialCode=responseBody.materials[0].code;",
													"",
													"pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"pm.test(\"MaterialCode Matches\", function () {",
													"    pm.expect(ResMaterialCode).to.include(pm.environment.get(\"materialCode\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_search?tenantId={{tenantId}}&code={{materialCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "code",
													"value": "{{materialCode}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var materialClass=requestBody.materials[0].materialClass;",
													"",
													"",
													"pm.environment.set(\"materialClass\",materialClass);",
													"",
													"",
													"postman.setNextRequest(\"Search Update Material\");",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"lotControl\": true,\n      \"serialNumber\": true,\n      \"shelfLifeControl\": true,\n      \"scrapable\": true,\n      \"materialType\": {\n        \"code\": \"MT3\"\n      },\n      \"name\": \"{{MaterialName}}\",\n      \"code\": \"{{materialCode}}\",\n      \"description\": \"test desc\",\n      \"baseUom\": {\n        \"code\": \"GMS\"\n      },\n      \"inventoryType\": \"Asset\",\n      \"assetCategory\":{\n      \t\"code\":\"null\" \n      },\n      \"storeMapping\": [\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"FM\",\n            \"name\": \"Accounts\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"46130\"\n          },\n          \"active\": true\n        },\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"CD\",\n            \"name\": \"Computer Department\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"42190\"\n          },\n          \"active\": true\n        }\n      ],\n      \"purchaseUom\": {\n        \"code\": \"KGS\"\n      },\n      \"expenseAccount\": {\n        \"glCode\": \"44020\"\n      },\n      \"materialClass\": \"HighUsage\",\n      \"stockingUom\": {\n        \"code\": \"44020\"\n      },\n      \"minQuantity\": \"15\",\n      \"maxQuantity\": \"20\",\n      \"reorderLevel\": \"10\",\n      \"reorderQuantity\": \"8\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResmaterialClass=responseBody.materials[0].materialClass;",
													"",
													"pm.environment.set(\"ResmaterialClass\",ResmaterialClass);",
													"",
													"pm.test(\"MaterialClass Matches\", function () {",
													"    pm.expect(ResmaterialClass).to.eql(pm.environment.get(\"materialClass\"));",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Format",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Material\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var materialCode=responseBody.materials[0].code;",
													"",
													"pm.environment.set(\"materialCode\",materialCode);",
													"",
													"",
													"var ResMaterialName=responseBody.materials[0].name;",
													"",
													"pm.environment.set(\"ResMaterialName\",ResMaterialName);",
													"",
													"pm.test(\"MaterialName Matches\", function () {",
													"    pm.expect(ResMaterialName).to.include(pm.environment.get(\"MaterialName\"));",
													"});",
													"",
													"",
													"postman.setNextRequest(\"Search Material\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"MaterialName\",\"MaterialName \"+name1);",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"lotControl\": true,\n      \"serialNumber\": true,\n      \"shelfLifeControl\": true,\n      \"scrapable\": true,\n      \"materialType\": {\n        \"code\": \"MT3\"\n      },\n      \"name\": \"{{MaterialName}}\",\n      \"description\": \"test desc\",\n      \"baseUom\": {\n        \"code\": \"GMS\"\n      },\n      \"inventoryType\": \"Asset\",\n      \"assetCategory\":{\n      \t\"code\":\"null\" \n      },\n      \"storeMapping\": [\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"FM\",\n            \"name\": \"Accounts\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"46130\"\n          },\n          \"active\": true\n        },\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"CD\",\n            \"name\": \"Computer Department\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"42190\"\n          },\n          \"active\": true\n        }\n      ],\n      \"purchaseUom\": {\n        \"code\": \"KGS\"\n      },\n      \"expenseAccount\": {\n        \"glCode\": \"44020\"\n      },\n      \"materialClass\": \"HighUsage\",\n      \"stockingUom\": {\n        \"code\": \"44020\"\n      },\n      \"minQuantity\": \"2\",\n      \"maxQuantity\": \"20\",\n      \"reorderLevel\": \"10\",\n      \"reorderQuantity\": \"8\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResMaterialCode=responseBody.materials[0].code;",
													"",
													"pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"pm.test(\"MaterialCode Matches\", function () {",
													"    pm.expect(ResMaterialCode).to.include(pm.environment.get(\"materialCode\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Material\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_search?tenantId={{tenantId}}&code={{materialCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "code",
													"value": "{{materialCode}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Material",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var materialClass=requestBody.materials[0].materialClass;",
													"",
													"",
													"pm.environment.set(\"materialClass\",materialClass);",
													"",
													"",
													"postman.setNextRequest(\"Search Update Material\");",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materials\": [\n    {\n      \"lotControl\": true,\n      \"serialNumber\": true,\n      \"shelfLifeControl\": true,\n      \"scrapable\": true,\n      \"materialType\": {\n        \"code\": \"MT3\"\n      },\n      \"name\": \"{{MaterialName}}\",\n      \"code\": \"{{materialCode}}\",\n      \"description\": \"test desc\",\n      \"baseUom\": {\n        \"code\": \"GMS\"\n      },\n      \"inventoryType\": \"Asset\",\n      \"assetCategory\":{\n      \t\"code\":\"null\" \n      },\n      \"storeMapping\": [\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"FM\",\n            \"name\": \"Accounts\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"46130\"\n          },\n          \"active\": true\n        },\n        {\n          \"store\": {\n            \"code\": \"STR01\"\n          },\n          \"department\": {\n            \"code\": \"CD\",\n            \"name\": \"Computer Department\"\n          },\n          \"chartofAccount\": {\n            \"glCode\": \"42190\"\n          },\n          \"active\": true\n        }\n      ],\n      \"purchaseUom\": {\n        \"code\": \"KGS\"\n      },\n      \"expenseAccount\": {\n        \"glCode\": \"44020\"\n      },\n      \"materialClass\": \"HighUsage\",\n      \"stockingUom\": {\n        \"code\": \"44020\"\n      },\n      \"minQuantity\": \"15\",\n      \"maxQuantity\": \"20\",\n      \"reorderLevel\": \"10\",\n      \"reorderQuantity\": \"8\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510568486856,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materials/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materials",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Store Master",
					"description": "",
					"item": [
						{
							"name": "Format",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Material\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var storeId=responseBody.stores[0].id;",
													"pm.environment.set(\"storeId\",storeId);",
													"",
													"",
													"postman.setNextRequest(\"Search Store\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
													"",
													"",
													"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"",
													"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": null\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode=responseBody.stores[0].code;",
													"",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"pm.test(\"StoreCode Matches\", function () {",
													"    pm.expect(ResStoreCode).to.include(pm.environment.get(\"storeCode\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}&ids={{storeId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{storeId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var billingAddress=requestBody.stores[0].billingAddress;",
													"",
													"pm.environment.set(\"billingAddress\",billingAddress);",
													"",
													"",
													"postman.setNextRequest(\"Search Update Store\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"update\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":\n    {\n    \t\"id\":\"1\"\n    }\n\n  },\n  \"stores\":[{\n\t\"tenantId\":\"{{tenantId}}\",\n\t\"id\":\"{{storeId}}\",\n  \t\"code\":\"{{storeCode}}\",\n  \t\"name\":\"cosmeticstore\",\n  \t\"description\":\"This is a cosmetic store\",\n  \t\"department\":{\n  \t\"code\":\"dept_123\",\n  \t\"name\":\"Stationary\"\n  \t},\n  \t\"storeInCharge\":{\n  \t\t\"code\":\"employee1\",\n  \t\t\"name\":\"Ram\"\n  \t},\n  \t\"officeLocation\":{\n  \t\t\"code\":\"office234\",\n  \t\t\"name\":\"Kormangala\"\n  \t},\n  \t\"billingAddress\":\"Marathhalli\",\n  \t\"deliveryAddress\":\"BTM Layout\",\n  \t\"contactNo1\":\"9368963246\",\n  \t\"contactNo2\":\"8923618863\",\n  \t\"email\":\"jantastores@gmail.com\",\n  \t\"isCentralStore\":true,\n  \t\"active\":true\n }]\n  \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search Update Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResbillingAddress=responseBody.stores[0].billingAddress;",
													"",
													"pm.environment.set(\"ResbillingAddress\",ResbillingAddress);",
													"",
													"pm.test(\"StoreBillingAddress Matches\", function () {",
													"    pm.expect(ResbillingAddress).to.eql(pm.environment.get(\"billingAddress\"));",
													"});",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}&ids={{storeId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{storeId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.MdmsRes[\"common-masters\"].Department.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             departmentCode = resBody.MdmsRes[\"common-masters\"].Department[rand].code;",
													"             pm.environment.set(\"departmentCode\",departmentCode);",
													"}",
													"",
													"var max = resBody.MdmsRes.inventory.Location.length - 1;",
													"         var rand = 0;",
													"         var LocationCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"             LocationCode = resBody.MdmsRes.inventory.Location[rand].code;",
													"             pm.environment.set(\"LocationCode\",LocationCode);",
													"}",
													"",
													"postman.setNextRequest(\"Create Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n                  \"name\":\"Uom\"\n               },\n               {\n                  \"name\":\"Location\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Create Store without Store Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var ResBody =JSON.parse(responseBody);",
													"var NameerrorMsg=ResBody.Errors[1].message;",
													"",
													"pm.test(\"Store Name is Unique\", function () {",
													"    pm.expect(NameerrorMsg).to.include(\"already exists\");",
													"});",
													"",
													"var CodeerrorMsg=ResBody.Errors[0].message;",
													"",
													"pm.test(\"Store Code is Unique\", function () {",
													"    pm.expect(CodeerrorMsg).to.include(\"already exists\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
													"",
													"",
													"// var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"",
													"// postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Create Store without Mandatory",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var ResBody =JSON.parse(responseBody);",
													"var nullcodeName=ResBody.Errors[0].description;",
													"",
													"pm.test(\"Success Mandatory Error Message\", function () {",
													"    pm.expect(nullcodeName).to.include(\"NotNull\");",
													"});",
													"",
													"// var CodeerrorMsg=ResBody.Errors[0].message;",
													"",
													"// pm.test(\"Store Code is Unique\", function () {",
													"//     pm.expect(CodeerrorMsg).to.include(\"already exists\");",
													"// });",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
													"",
													"",
													"// var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
													"",
													"// postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"stores\": [\n    {\n      \"code\": null,\n      \"name\": null,\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Supplier Master",
					"description": "",
					"item": [
						{
							"name": "Format",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Store\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Bank Master",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\t\t\t\t\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/egf-masters/banks/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"egf-masters",
												"banks",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var supplierId = responseBody.suppliers[0].id;",
													"pm.environment.set(\"supplierId\",supplierId);",
													"",
													"",
													"postman.setNextRequest(\"Search Supplier\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"SBI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResSupplierCode=responseBody.suppliers[0].code;",
													"",
													"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
													"",
													"pm.test(\"SupplierCode Matches\", function () {",
													"    pm.expect(ResSupplierCode).to.include(pm.environment.get(\"SupplierCode\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_search?tenantId={{tenantId}}&codes={{SupplierCode}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "codes",
													"value": "{{SupplierCode}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var PanNo=requestBody.suppliers[0].panNo;",
													"",
													"",
													"pm.environment.set(\"PanNo\",PanNo);",
													"",
													"postman.setNextRequest(\"Search Update Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"update\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n\t\"id\":\"{{supplierId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"ABCDP3456D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"bankcode1\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResPanNo=responseBody.suppliers[0].panNo;",
													"",
													"pm.environment.set(\"ResPanNo\",ResPanNo);",
													"",
													"pm.test(\"PanNo Matches\", function () {",
													"    pm.expect(ResPanNo).to.eql(pm.environment.get(\"PanNo\"));",
													"});",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_search?tenantId={{tenantId}}&ids={{supplierId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{supplierId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Create Supplier\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n                  \"name\":\"Uom\"\n               },\n               {\n                  \"name\":\"Location\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Supplier with unique code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResError = responseBody.Errors[0].description;",
													"pm.environment.set(\"ResError\",ResError);",
													"",
													"pm.test(\"Supplier Code is Unique\", function () {",
													"    pm.expect(ResError).to.include(\"suppliers\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"// postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"SBI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Supplier without mandatory",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResError = responseBody.Errors[0].description;",
													"pm.environment.set(\"ResError\",ResError);",
													"",
													"pm.test(\"Supplier and bank code should not be null\", function () {",
													"    pm.expect(ResError).to.include(\"default message [may not be null]]\");",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"// postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\": null,\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":null,\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Store Mapping Master",
					"description": "",
					"item": [
						{
							"name": "Format",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.MdmsRes.inventory.Material[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"MaterialCode\",MaterialCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Search Store Random\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"// var ResMaterialCode = responseBody.Material[ Math.floor(Math.random() * responseBody.Material.length) ]['code'];",
													"// pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"",
													"",
													"postman.setNextRequest(\"Create Material Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"var requestBody = JSON.parse(request.data);",
													"var Resid=responseBody.materialStoreMappings[0].id;",
													"pm.environment.set(\"Resid\",Resid);",
													"",
													"// var ResMaterialCode=requestBody.materialStoreMappings[0].code;",
													"// pm.environment.set(\"ResMaterialCode\",ResMaterialCode);",
													"",
													"postman.setNextRequest(\"Search Material Store\");",
													"",
													"",
													"",
													"// pm.test(\"Successful POST request\", function () {",
													"//     pm.expect(\"SUCCESSFUL\").to.include(responseBody.status);",
													"// });"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"MaterialCode\",\"MaterialCode\"+name1);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\":\"{{MaterialCode}}\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_search?tenantId={{tenantId}}&ids={{Resid}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{Resid}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Store Random before Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"postman.setNextRequest(\"Create Material Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Material Store",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":[  \n      {  \n         \"id\":\"{{Resid}}\",\n         \"material\":{  \n            \"code\":\"{{MaterialCode}}\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\"\n         },\n         \"active\":true,\n        \"tenantId\":\"{{tenantId}}\"\n\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Update Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t \"requestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_search?tenantId={{tenantId}}&ids={{Resid}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "ids",
													"value": "{{Resid}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Search Store Random\");",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"",
													"postman.setNextRequest(\"Material with invalid code\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Material with invalid code",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTCode=responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTCode\",ResErrorMTCode);",
													"",
													"pm.test(\"Material not found\", function () {",
													"    pm.expect(ResErrorMTCode).to.include(\"Given Material is invalid\");",
													"});",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\":\"testMaterial\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"",
													"var max = resBody.MdmsRes.inventory.Material[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialCode = resBody.MdmsRes.inventory.Material[rand].code;",
													"             pm.environment.set(\"MaterialCode\",MaterialCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Material with invalid Store\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Material with invalid Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorStore=responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorStore\",ResErrorStore);",
													"",
													"pm.test(\"Store not found\", function () {",
													"    pm.expect(ResErrorStore).to.include(\"Store Not Found\");",
													"});",
													"",
													"postman.setNextRequest(\"Material & Store as Null\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\":\"{{MaterialCode}}\"\n         },\n         \"store\":{  \n            \"code\":\"DEE765\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Material & Store as Null",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTStore=responseBody.Errors[0].description;",
													"pm.environment.set(\"ResErrorMTStore\",ResErrorMTStore);",
													"",
													"pm.test(\"Both Material and Store not found\", function () {",
													"    pm.expect(ResErrorMTStore).to.include(\"Please provide correct value\");",
													"});",
													"",
													"postman.setNextRequest(\"Material & Store with invalid value\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\": \"\"\n         },\n         \"store\":{  \n            \"code\": \"\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Material & Store with invalid value",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTStorewtData=responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTStorewtData\",ResErrorMTStorewtData);",
													"",
													"pm.test(\"Both Material and Store data are invalid\", function () {",
													"    pm.expect(ResErrorMTStorewtData).to.include(\"Store Not Found\");",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialStoreMappings\":\n   [  \n      {  \n         \"material\":{  \n            \"code\": \"MHDS22\"\n         },\n         \"store\":{  \n            \"code\": \"TT656\"\n         },\n         \"active\":true,\n         \"tenantId\":\"{{tenantId}}\"\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialstoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialstoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Type Store Mapping Master",
					"description": "",
					"item": [
						{
							"name": "Format",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"var max = resBody.MdmsRes.inventory.MaterialType[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialTypeCode = resBody.MdmsRes.inventory.MaterialType[rand].code;",
													"             pm.environment.set(\"MaterialTypeCode\",MaterialTypeCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Search Store Random\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"postman.setNextRequest(\"Create Type Material Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Type Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResId = responseBody.materialTypeStores[0].id;",
													"pm.environment.set(\"ResId\",ResId);",
													"",
													"postman.setNextRequest(\"Update Type Material Store\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"{{MaterialTypeCode}}\"\n      },\n      \"store\": {\n        \"code\": \"{{ResStoreCode}}\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Type Material Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"postman.setNextRequest(\"Search Material Type Store\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{  \n         \"id\":1\n      }\n   },\n   \"materialTypeStores\":[  \n      {  \n        \"id\":\"{{ResId}}\",\n        \"tenantId\":\"{{tenantId}}\",\n         \"materialType\":{  \n            \"code\":\"{{MaterialTypeCode}}\",\n            \"name\":\"material75\"\n         },\n         \"store\":{  \n            \"code\":\"{{ResStoreCode}}\",\n            \"name\":\"store12\"\n         },\n         \"active\":false,\n         \"chartofAccount\":{  \n           \"id\":1,\n           \"glCode\":\"glcode\"\n         }\n      }\n   ]\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_update?tenantId={{tenantId}}&id={{ResId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "id",
													"value": "{{ResId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Search Material Type Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"create\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_search?tenantId={{tenantId}}&id={{ResId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "id",
													"value": "{{ResId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Search Store Random\");",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Store Random",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResStoreCode = responseBody.stores[ Math.floor(Math.random() * responseBody.stores.length) ]['code'];",
													"pm.environment.set(\"ResStoreCode\",ResStoreCode);",
													"",
													"postman.setNextRequest(\"Material Type with invalid value\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n        \"id\":2\n      }\n }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/stores/_search?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"stores",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Material Type with invalid value",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTtype = responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTtype\",ResErrorMTtype);",
													"",
													"pm.test(\"Material type is invalid\", function () {",
													"    pm.expect(ResErrorMTtype).to.include(\"is invalid\");",
													"});",
													"",
													"postman.setNextRequest(\"MDMS_DATA\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"text123\"\n      },\n      \"store\": {\n        \"code\": \"{{ResStoreCode}}\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MDMS_DATA",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"",
													"var resBody = JSON.parse(responseBody);",
													"",
													"var max = resBody.MdmsRes.inventory.MaterialType[0].code.length - 1;",
													"         var rand = 0;",
													"         var departmentCode = null;",
													"         if(max > -1){",
													"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
													"            MaterialTypeCode = resBody.MdmsRes.inventory.MaterialType[rand].code;",
													"             pm.environment.set(\"MaterialTypeCode\",MaterialTypeCode);",
													"             ",
													"         }",
													"",
													"postman.setNextRequest(\"Material Type with invalid Store\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
										},
										"url": {
											"raw": "{{url}}/egov-mdms-service/v1/_search",
											"host": [
												"{{url}}"
											],
											"path": [
												"egov-mdms-service",
												"v1",
												"_search"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Material Type with invalid Store",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorStore= responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorStore\",ResErrorStore);",
													"",
													"pm.test(\"Store type is invalid\", function () {",
													"    pm.expect(ResErrorStore).to.include(\"not found\");",
													"});",
													"",
													"postman.setNextRequest(\"Material & Store without value\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"{{MaterialTypeCode}}\"\n      },\n      \"store\": {\n        \"code\": \"RRTT44\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Material & Store without value",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ResErrorMTStore= responseBody.Errors[0].message;",
													"pm.environment.set(\"ResErrorMTStore\",ResErrorMTStore);",
													"",
													"pm.test(\"Material & Store type are invalid\", function () {",
													"    pm.expect(ResErrorMTStore).to.include(\"must be not be null or empty\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialTypeStores\": [\n    {\n      \"materialType\": {\n        \"code\": \"\"\n      },\n      \"store\": {\n        \"code\": \"\"\n      },\n      \"chartofAccount\": {\n        \"glCode\": \"4209001\"\n      },\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/materialtypestoremapping/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"materialtypestoremapping",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Transactions",
			"description": "",
			"item": [
				{
					"name": "Indents",
					"description": "",
					"item": [
						{
							"name": "Create Supplier copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var supplierId = responseBody.suppliers[0].id;",
											"pm.environment.set(\"supplierId\",supplierId);",
											"",
											"",
											"postman.setNextRequest(\"Search Supplier\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SupplierCode\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"bankcode1\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"Create Indents\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
											"    postman.setEnvironmentVariable(\"password\",\"demo\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var indentStatus=responseBody.indents[0].indentStatus;",
											"var indentNumber=responseBody.indents[0].indentNumber;",
											"",
											"pm.environment.set(\"indentNumber\",indentNumber);",
											"",
											"pm.test(\"Indent created Successfully\", function () {",
											"    pm.expect(indentStatus).to.include(\"APPROVED\");",
											"});",
											"",
											"postman.setNextRequest(\"Search Indents\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"uom\": {\n            \"code\": \"CUL\"\n          },\n          \"material\": {\n            \"code\": \"MAT19\"\n          },\n          \"indentQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"indentQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody=JSON.parse(responseBody);",
											"",
											"var ResindentNumber=responseBody.indents[0].indentNumber;",
											"pm.environment.set(\"ResindentNumber\",ResindentNumber);",
											"",
											"pm.test(\"Indent Number Matches\", function () {",
											"    pm.expect(ResindentNumber).to.include(pm.environment.get(\"indentNumber\"));",
											"});",
											"",
											"var ResIndentId=responseBody.indents[0].id;",
											"pm.environment.set(\"ResIndentId\",ResIndentId); ",
											"",
											"var ResIndentdetailId=responseBody.indents[0].indentDetails[0].id;",
											"pm.environment.set(\"ResIndentdetailId\",ResIndentdetailId); ",
											"",
											"postman.setNextRequest(\"Update Indents\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_search?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "indentNumber",
											"value": "{{indentNumber}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var requestBody=JSON.parse(request.data);",
											"var indentPurpose=requestBody.indents[0].indentPurpose;",
											"",
											"pm.environment.set(\"indentPurpose\",indentPurpose);",
											"",
											"postman.setNextRequest(\"Search Update Indents\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n  \t\n    {\n    \t\"id\":\"{{ResIndentId}}\",\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"{{ResindentNumber}}\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n        \t\"id\":\"{{ResIndentdetailId}}\",\n          \"uom\": {\n            \"code\": \"CUL\"\n          },\n          \"material\": {\n            \"code\": \"MAT19\"\n          },\n          \"indentQuantity\": \"25\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        },\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\"\n          },\n          \"indentQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "indentNumber",
											"value": "{{indentNumber}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Update Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody=JSON.parse(responseBody);",
											"",
											"var ResindentPurpose =responseBody.indents[0].indentPurpose;",
											"",
											"pm.environment.set(\"ResindentPurpose\",ResindentPurpose);",
											"",
											"pm.test(\"Indent Purpose Matches\", function () {",
											"    pm.expect(ResindentPurpose).to.include(pm.environment.get(\"indentPurpose\"));",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_search?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "indentNumber",
											"value": "{{indentNumber}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Order",
					"description": "",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"swm-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var indentNumber=responseBody.indents[0].indentNumber;",
											"pm.environment.set(\"indentNumber\",indentNumber);",
											"",
											"var indentQuantity=requestBody.indents[0].indentDetails[0].indentQuantity;",
											"pm.environment.set(\"indentQuantity\",indentQuantity);",
											"",
											"postman.setNextRequest(\"Create Supplier\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"indentQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Supplier",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"SBI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"",
											"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											" var name1 = Math.floor(Math.random() * 10000);",
											"",
											" postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "create pricelist"
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
											"",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Purchase Order Generation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"// console.log(JSON.stringify(responseBody));",
											"var ResPriceListPO= responseBody.purchaseOrders[0].purchaseOrderDetails[0].priceList.id;",
											"pm.environment.set(\"ResPriceListPO\",ResPriceListPO);",
											"",
											"",
											" postman.setNextRequest(\"Create Purchase Order\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{ResSupplierCode}}\"\n      },\n      \"rateType\": \"Quotation\",\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_preparepofromindents"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Purchase Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Search Purchase Order\");",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"NOS\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\": {\n            \"id\": \"{{ResPriceListPO}}\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"supplier\": {\n              \"id\": \"100\",\n              \"tenantId\": \"default\",\n              \"type\": \"INDIVIDUAL\",\n              \"code\": \"{{SupplierCode}}\",\n              \"name\": \"Anand And Sons\",\n              \"address\": \"btm layout\",\n              \"status\": \"ACTIVE\",\n              \"inActiveDate\": 15436789,\n              \"active\": true,\n              \"contactNo\": \"0132278956\",\n              \"faxNo\": \"123788890\",\n              \"website\": \"http://www.google.com\",\n              \"email\": \"anand@gmail.com\",\n              \"description\": \"supplier for cosmetics\",\n              \"panNo\": \"DFGPV3459D\",\n              \"tinNo\": \"34676767uiu\",\n              \"cstNo\": \"34676767uiC\",\n              \"vatNo\": \"34676767uiV\",\n              \"gstNo\": \"75AGHFD7890A0Z0\",\n              \"contactPerson\": \"anand dubay\",\n              \"contactPersonNo\": \"8388743488\",\n              \"bankCode\": \"SBI\",\n              \"bankBranch\": \"bankbranch1\",\n              \"acctNo\": \"3161001500005068\",\n              \"ifsc\": \"IFSC38899\",\n              \"micr\": \"MICR983985\",\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 12345677,\n                \"lastModifiedTime\": 12345677\n              }\n            },\n            \"rateType\": \"Quotation\",\n            \"rateContractNumber\": \"{{rateContractNumber}}\",\n            \"rateContractDate\": 1489224710000,\n            \"agreementNumber\": \"DEC11AN1\",\n            \"agreementDate\": 1491903110000,\n            \"agreementStartDate\": 1328367398850,\n            \"agreementEndDate\": 1527771650467,\n            \"active\": true,\n            \"fileStoreId\": \"\",\n            \"priceListDetails\": [\n              {\n                \"id\": \"201\",\n                \"material\": {\n                  \"code\": \"MAT1\"\n                },\n                \"fromDate\": 1328367398850,\n                \"toDate\": 1527771650467,\n                \"ratePerUnit\": 12,\n                \"quantity\": 11,\n                \"uom\": {\n                  \"id\": \"1\",\n                  \"tenantId\": \"default\",\n                  \"code\": \"NOS\",\n                  \"description\": \"Numbers\",\n                  \"baseUom\": true,\n                  \"uomCategory\": \"QUANTITY\",\n                  \"fromDate\": 1508740856,\n                  \"toDate\": 1893436200,\n                  \"conversionFactor\": 1\n                },\n                \"active\": true,\n                \"auditDetails\": {\n                  \"createdBy\": \"22534\",\n                  \"lastModifiedBy\": \"22534\",\n                  \"createdTime\": 1512988123880,\n                  \"lastModifiedTime\": 1512988123880\n                }\n              }\n            ],\n            \"auditDetails\": {\n              \"createdBy\": \"22534\",\n              \"lastModifiedBy\": \"22534\",\n              \"createdTime\": 1512988123880,\n              \"lastModifiedTime\": 1512988123880\n            }\n          },\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"indentQuantity\": \"{{indentQuantity}}\",\n          \"orderQuantity\": \"{{indentQuantity}}\",\n          \"tenderQuantity\" : 0,\n          \"receivedQuantity\": 0,\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"158\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"tenantId\": \"default\",\n                  \"code\": \"MAT1\",\n                  \"name\": \"SEAL\",\n                  \"description\": \"Seal\",\n                  \"materialType\": {\n                    \"code\": \"MT1\"\n                  },\n                  \"baseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"purchaseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"expenseAccount\": {\n                    \"glCode\": \"44001\"\n                  },\n                  \"minQuantity\": 2,\n                  \"maxQuantity\": 20,\n                  \"stockingUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"reorderLevel\": 10,\n                  \"reorderQuantity\": 12,\n                  \"lotControl\": false,\n                  \"shelfLifeControl\": false,\n                  \"serialNumber\": false\n                },\n                \"uom\": {\n                  \"code\": \"NOS\",\n                  \"baseUom\": false\n                },\n                \"projectCode\": {\n                  \n                },\n                \"asset\": {\n                  \"code\": \"2\"\n                },\n                \"indentQuantity\": 3,\n                \"totalProcessedQuantity\": 0,\n                \"indentIssuedQuantity\": 0,\n                \"poOrderedQuantity\": 0,\n                \"interstoreRequestQuantity\": 0\n              },\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Purchase Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_search?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "indentNumber",
											"value": "{{indentNumber}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Purchase Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"id\": null,\n      \"tenantId\": \"default\",\n      \"store\": {\n        \"code\": \"Electric\"\n      },\n      \"purchaseOrderNumber\": null,\n      \"purchaseOrderDate\": 1511893800000,\n      \"purchaseType\": null,\n      \"rateType\": \"DGSC Rate Contract\",\n      \"supplier\": {\n        \"id\": null,\n        \"tenantId\": null,\n        \"type\": null,\n        \"code\": \"supp1\",\n        \"name\": null,\n        \"address\": null,\n        \"status\": null,\n        \"inActiveDate\": null,\n        \"active\": null,\n        \"contactNo\": null,\n        \"faxNo\": null,\n        \"website\": null,\n        \"email\": null,\n        \"description\": null,\n        \"panNo\": null,\n        \"tinNo\": null,\n        \"cstNo\": null,\n        \"vatNo\": null,\n        \"gstNo\": null,\n        \"contactPerson\": null,\n        \"contactPersonNo\": null,\n        \"bankCode\": null,\n        \"bankName\": null,\n        \"bankBranch\": null,\n        \"acctNo\": null,\n        \"ifsc\": null,\n        \"micr\": null,\n        \"auditDetails\": null\n      },\n      \"advanceAmount\": \"1000\",\n      \"advancePercentage\": null,\n      \"expectedDeliveryDate\": 1511980200000,\n      \"deliveryTerms\": \"delivery term\",\n      \"paymentTerms\": \"payment term\",\n      \"remarks\": \"remark\",\n      \"status\": null,\n      \"workFlowDetails\": null,\n      \"stateId\": null,\n      \"purchaseOrderDetails\": [\n        {\n          \"id\": null,\n          \"tenantId\": \"default\",\n          \"material\": {\n            \"id\": null,\n            \"tenantId\": null,\n            \"code\": \"MAT2\",\n            \"name\": null,\n            \"description\": null,\n            \"oldCode\": null,\n            \"materialType\": null,\n            \"baseUom\": null,\n            \"inventoryType\": null,\n            \"status\": null,\n            \"inActiveDate\": null,\n            \"purchaseUom\": null,\n            \"expenseAccount\": null,\n            \"minQuantity\": null,\n            \"maxQuantity\": null,\n            \"stockingUom\": null,\n            \"materialClass\": null,\n            \"reorderLevel\": null,\n            \"reorderQuantity\": null,\n            \"lotControl\": null,\n            \"shelfLifeControl\": null,\n            \"serialNumber\": null,\n            \"model\": null,\n            \"manufacturePartNo\": null,\n            \"techincalSpecs\": null,\n            \"termsOfDelivery\": null,\n            \"scrapable\": null,\n            \"assetCategory\": null,\n            \"storeMapping\": null,\n            \"auditDetails\": null\n          },\n          \"purchaseOrderNumber\": null,\n          \"orderNumber\": null,\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"priceList\": {\n            \"id\": \"1\",\n            \"tenantId\": null,\n            \"supplier\": {\n              \"id\": \"4\",\n              \"tenantId\": \"default\",\n              \"type\": \"INDIVIDUAL\",\n              \"code\": \"supp1\",\n              \"name\": \"vinoth\",\n              \"address\": \"bangalore\",\n              \"status\": \"ACTIVE\",\n              \"inActiveDate\": null,\n              \"active\": true,\n              \"contactNo\": \"9999999999\",\n              \"faxNo\": null,\n              \"website\": null,\n              \"email\": null,\n              \"description\": null,\n              \"panNo\": null,\n              \"tinNo\": null,\n              \"cstNo\": null,\n              \"vatNo\": null,\n              \"gstNo\": null,\n              \"contactPerson\": null,\n              \"contactPersonNo\": null,\n              \"bankCode\": \"APV\",\n              \"bankName\": null,\n              \"bankBranch\": \"b3\",\n              \"acctNo\": \"9999999999999999\",\n              \"ifsc\": \"9999999999\",\n              \"micr\": null,\n              \"auditDetails\": {\n                \"createdBy\": \"1\",\n                \"lastModifiedBy\": \"1\",\n                \"createdTime\": 1,\n                \"lastModifiedTime\": 1\n              }\n            },\n            \"rateType\": \"DGSC Rate Contract\",\n            \"rateContractNumber\": \"RC1\",\n            \"rateContractDate\": 1509474600000,\n            \"agreementNumber\": \"AG1\",\n            \"agreementDate\": 1509474600000,\n            \"agreementStartDate\": 1509474600000,\n            \"agreementEndDate\": 1512585000000,\n            \"active\": true,\n            \"fileStoreId\": \"\",\n            \"priceListDetails\": [],\n            \"auditDetails\": {\n              \"createdBy\": \"1\",\n              \"lastModifiedBy\": \"1\",\n              \"createdTime\": 1,\n              \"lastModifiedTime\": 1\n            }\n          },\n          \"orderQuantity\": \"3\",\n          \"receivedQuantity\": null,\n          \"unitPrice\": \"2\",\n          \"description\": null,\n          \"indentNumber\": \"1\",\n          \"indentQuantity\": 20,\n          \"tenderQuantity\": \"13\",\n          \"tenderAvailableQuantity\": null,\n          \"purchaseIndentDetails\": [\n            {\n              \"id\": null,\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"1\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"id\": null,\n                  \"tenantId\": null,\n                  \"code\": \"MAT2\",\n                  \"name\": null,\n                  \"description\": null,\n                  \"oldCode\": null,\n                  \"materialType\": null,\n                  \"baseUom\": null,\n                  \"inventoryType\": null,\n                  \"status\": null,\n                  \"inActiveDate\": null,\n                  \"purchaseUom\": null,\n                  \"expenseAccount\": null,\n                  \"minQuantity\": null,\n                  \"maxQuantity\": null,\n                  \"stockingUom\": null,\n                  \"materialClass\": null,\n                  \"reorderLevel\": null,\n                  \"reorderQuantity\": null,\n                  \"lotControl\": null,\n                  \"shelfLifeControl\": null,\n                  \"serialNumber\": null,\n                  \"model\": null,\n                  \"manufacturePartNo\": null,\n                  \"techincalSpecs\": null,\n                  \"termsOfDelivery\": null,\n                  \"scrapable\": null,\n                  \"assetCategory\": null,\n                  \"storeMapping\": null,\n                  \"auditDetails\": null\n                },\n                \"uom\": {\n                  \"id\": null,\n                  \"tenantId\": null,\n                  \"name\": null,\n                  \"code\": \"NOS\",\n                  \"description\": null,\n                  \"baseUom\": false,\n                  \"uomCategory\": null,\n                  \"fromDate\": null,\n                  \"toDate\": null,\n                  \"conversionFactor\": null,\n                  \"active\": null,\n                  \"auditDetails\": null\n                },\n                \"parentIndentLine\": null,\n                \"orderNumber\": null,\n                \"projectCode\": {\n                  \"id\": null,\n                  \"tenantId\": null,\n                  \"code\": null,\n                  \"name\": null,\n                  \"description\": null,\n                  \"status\": null,\n                  \"active\": null,\n                  \"projectValue\": null,\n                  \"completionDate\": null,\n                  \"auditDetails\": null\n                },\n                \"asset\": {\n                  \"anticipatedLife\": null,\n                  \"orderNumber\": null,\n                  \"orderDate\": null,\n                  \"wipReferenceNo\": null,\n                  \"acquiredFrom\": null,\n                  \"warrantyAvailable\": null,\n                  \"warrantyExpiryDate\": null,\n                  \"defectLiabilityPeriod\": null,\n                  \"securityDepositRetained\": null,\n                  \"securityDepositRealized\": null,\n                  \"acquisitionDate\": null,\n                  \"originalValue\": null,\n                  \"assetAccount\": null,\n                  \"accumulatedDepreciationAccount\": null,\n                  \"revaluationReserveAccount\": null,\n                  \"depreciationExpenseAccount\": null,\n                  \"titleDocumentsAvalable\": null,\n                  \"locationDetails\": null,\n                  \"totalArea\": null,\n                  \"address\": null,\n                  \"longitude\": null,\n                  \"latitude\": null,\n                  \"landSurveyNo\": null,\n                  \"quantity\": null,\n                  \"tenantId\": null,\n                  \"id\": null,\n                  \"name\": null,\n                  \"code\": null,\n                  \"oldCode\": null,\n                  \"departmentCode\": null,\n                  \"assetCategory\": null,\n                  \"modeOfAcquisition\": null,\n                  \"status\": null,\n                  \"grossValue\": null,\n                  \"accumulatedDepreciation\": null,\n                  \"description\": null,\n                  \"dateOfCreation\": null,\n                  \"remarks\": null,\n                  \"version\": null,\n                  \"assetReference\": null,\n                  \"enableYearWiseDepreciation\": null,\n                  \"assetAttributes\": null,\n                  \"depreciationRate\": null,\n                  \"yearWiseDepreciationRate\": null,\n                  \"fundSource\": null,\n                  \"location\": null,\n                  \"openingDate\": null,\n                  \"landDetails\": null\n                },\n                \"indentQuantity\": 20,\n                \"totalProcessedQuantity\": null,\n                \"indentIssuedQuantity\": null,\n                \"poOrderedQuantity\": null,\n                \"interstoreRequestQuantity\": null,\n                \"deliveryTerms\": null,\n                \"remarks\": null\n              },\n              \"quantity\": 20,\n              \"auditDetails\": {\n                \"createdBy\": null,\n                \"lastModifiedBy\": null,\n                \"createdTime\": 1512399949140,\n                \"lastModifiedTime\": 1512399949140\n              }\n            }\n          ],\n          \"totalAmount\": \"6\",\n          \"usedQuantity\": \"3\"\n        },\n        {\n          \"id\": null,\n          \"tenantId\": \"default\",\n          \"material\": {\n            \"id\": null,\n            \"tenantId\": null,\n            \"code\": \"MAT1\",\n            \"name\": null,\n            \"description\": null,\n            \"oldCode\": null,\n            \"materialType\": null,\n            \"baseUom\": null,\n            \"inventoryType\": null,\n            \"status\": null,\n            \"inActiveDate\": null,\n            \"purchaseUom\": null,\n            \"expenseAccount\": null,\n            \"minQuantity\": null,\n            \"maxQuantity\": null,\n            \"stockingUom\": null,\n            \"materialClass\": null,\n            \"reorderLevel\": null,\n            \"reorderQuantity\": null,\n            \"lotControl\": null,\n            \"shelfLifeControl\": null,\n            \"serialNumber\": null,\n            \"model\": null,\n            \"manufacturePartNo\": null,\n            \"techincalSpecs\": null,\n            \"termsOfDelivery\": null,\n            \"scrapable\": null,\n            \"assetCategory\": null,\n            \"storeMapping\": null,\n            \"auditDetails\": null\n          },\n          \"purchaseOrderNumber\": null,\n          \"orderNumber\": null,\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"priceList\": {\n            \"id\": \"1\",\n            \"tenantId\": null,\n            \"supplier\": {\n              \"id\": \"4\",\n              \"tenantId\": \"default\",\n              \"type\": \"INDIVIDUAL\",\n              \"code\": \"supp1\",\n              \"name\": \"vinoth\",\n              \"address\": \"bangalore\",\n              \"status\": \"ACTIVE\",\n              \"inActiveDate\": null,\n              \"active\": true,\n              \"contactNo\": \"9999999999\",\n              \"faxNo\": null,\n              \"website\": null,\n              \"email\": null,\n              \"description\": null,\n              \"panNo\": null,\n              \"tinNo\": null,\n              \"cstNo\": null,\n              \"vatNo\": null,\n              \"gstNo\": null,\n              \"contactPerson\": null,\n              \"contactPersonNo\": null,\n              \"bankCode\": \"APV\",\n              \"bankName\": null,\n              \"bankBranch\": \"b3\",\n              \"acctNo\": \"9999999999999999\",\n              \"ifsc\": \"9999999999\",\n              \"micr\": null,\n              \"auditDetails\": {\n                \"createdBy\": \"1\",\n                \"lastModifiedBy\": \"1\",\n                \"createdTime\": 1,\n                \"lastModifiedTime\": 1\n              }\n            },\n            \"rateType\": \"DGSC Rate Contract\",\n            \"rateContractNumber\": \"RC1\",\n            \"configurable\":true,\n            \"rateContractDate\": 1509474600000,\n            \"agreementNumber\": \"AG1\",\n            \"agreementDate\": 1509474600000,\n            \"agreementStartDate\": 1509474600000,\n            \"agreementEndDate\": 1512585000000,\n            \"active\": true,\n            \"fileStoreId\": \"\",\n            \"priceListDetails\": [],\n            \"auditDetails\": {\n              \"createdBy\": \"1\",\n              \"lastModifiedBy\": \"1\",\n              \"createdTime\": 1,\n              \"lastModifiedTime\": 1\n            }\n          },\n          \"orderQuantity\": \"4\",\n          \"receivedQuantity\": null,\n          \"unitPrice\": \"1\",\n          \"description\": null,\n          \"indentNumber\": \"2\",\n          \"indentQuantity\": 5,\n          \"tenderQuantity\": \"23\",\n          \"tenderAvailableQuantity\": null,\n          \"purchaseIndentDetails\": [\n            {\n              \"id\": null,\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"2\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"id\": null,\n                  \"tenantId\": null,\n                  \"code\": \"MAT1\",\n                  \"name\": null,\n                  \"description\": null,\n                  \"oldCode\": null,\n                  \"materialType\": null,\n                  \"baseUom\": null,\n                  \"inventoryType\": null,\n                  \"status\": null,\n                  \"inActiveDate\": null,\n                  \"purchaseUom\": null,\n                  \"expenseAccount\": null,\n                  \"minQuantity\": null,\n                  \"maxQuantity\": null,\n                  \"stockingUom\": null,\n                  \"materialClass\": null,\n                  \"reorderLevel\": null,\n                  \"reorderQuantity\": null,\n                  \"lotControl\": null,\n                  \"shelfLifeControl\": null,\n                  \"serialNumber\": null,\n                  \"model\": null,\n                  \"manufacturePartNo\": null,\n                  \"techincalSpecs\": null,\n                  \"termsOfDelivery\": null,\n                  \"scrapable\": null,\n                  \"assetCategory\": null,\n                  \"storeMapping\": null,\n                  \"auditDetails\": null\n                },\n                \"uom\": {\n                  \"id\": null,\n                  \"tenantId\": null,\n                  \"name\": null,\n                  \"code\": \"NOS\",\n                  \"description\": null,\n                  \"baseUom\": false,\n                  \"uomCategory\": null,\n                  \"fromDate\": null,\n                  \"toDate\": null,\n                  \"conversionFactor\": null,\n                  \"active\": null,\n                  \"auditDetails\": null\n                },\n                \"parentIndentLine\": null,\n                \"orderNumber\": null,\n                \"projectCode\": {\n                  \"id\": null,\n                  \"tenantId\": null,\n                  \"code\": null,\n                  \"name\": null,\n                  \"description\": null,\n                  \"status\": null,\n                  \"active\": null,\n                  \"projectValue\": null,\n                  \"completionDate\": null,\n                  \"auditDetails\": null\n                },\n                \"asset\": {\n                  \"anticipatedLife\": null,\n                  \"orderNumber\": null,\n                  \"orderDate\": null,\n                  \"wipReferenceNo\": null,\n                  \"acquiredFrom\": null,\n                  \"warrantyAvailable\": null,\n                  \"warrantyExpiryDate\": null,\n                  \"defectLiabilityPeriod\": null,\n                  \"securityDepositRetained\": null,\n                  \"securityDepositRealized\": null,\n                  \"acquisitionDate\": null,\n                  \"originalValue\": null,\n                  \"assetAccount\": null,\n                  \"accumulatedDepreciationAccount\": null,\n                  \"revaluationReserveAccount\": null,\n                  \"depreciationExpenseAccount\": null,\n                  \"titleDocumentsAvalable\": null,\n                  \"locationDetails\": null,\n                  \"totalArea\": null,\n                  \"address\": null,\n                  \"longitude\": null,\n                  \"latitude\": null,\n                  \"landSurveyNo\": null,\n                  \"quantity\": null,\n                  \"tenantId\": null,\n                  \"id\": null,\n                  \"name\": null,\n                  \"code\": null,\n                  \"oldCode\": null,\n                  \"departmentCode\": null,\n                  \"assetCategory\": null,\n                  \"modeOfAcquisition\": null,\n                  \"status\": null,\n                  \"grossValue\": null,\n                  \"accumulatedDepreciation\": null,\n                  \"description\": null,\n                  \"dateOfCreation\": null,\n                  \"remarks\": null,\n                  \"version\": null,\n                  \"assetReference\": null,\n                  \"enableYearWiseDepreciation\": null,\n                  \"assetAttributes\": null,\n                  \"depreciationRate\": null,\n                  \"yearWiseDepreciationRate\": null,\n                  \"fundSource\": null,\n                  \"location\": null,\n                  \"openingDate\": null,\n                  \"landDetails\": null\n                },\n                \"indentQuantity\": 5,\n                \"totalProcessedQuantity\": null,\n                \"indentIssuedQuantity\": null,\n                \"poOrderedQuantity\": null,\n                \"interstoreRequestQuantity\": null,\n                \"deliveryTerms\": null,\n                \"remarks\": null\n              },\n              \"quantity\": 5,\n              \"auditDetails\": {\n                \"createdBy\": null,\n                \"lastModifiedBy\": null,\n                \"createdTime\": 1512399949159,\n                \"lastModifiedTime\": 1512399949159\n              }\n            }\n          ],\n          \"totalAmount\": \"4\",\n          \"usedQuantity\": \"2\"\n        }\n      ],\n      \"fileStoreId\": null,\n      \"designation\": null,\n      \"auditDetails\": null,\n      \"indentNumbers\": [\n        \"1\",\n        \"2\"\n      ]\n    }\n  ],\n  \"page\": null,\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512400062615,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}\n"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Search Update Purchase Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"RequestInfo\":{  \n      \"apiId\":\"emp\",\n      \"ver\":\"1.0\",\n      \"ts\":1234567890,\n      \"action\":\"search\",\n      \"did\":\"1\",\n      \"key\":\"abcdkey\",\n      \"msgId\":\"20170310130900\",\n      \"requesterId\":\"rajesh\",\n      \"authToken\":\"{{access_token}}\",\n      \"userInfo\":{\n      \t\"id\":2\n      }\n }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_search?tenantId={{tenantId}}&indentNumber={{indentNumber}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "indentNumber",
											"value": "{{indentNumber}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Material Receipt",
					"description": "",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
											"",
											"postman.setNextRequest(\"MDMS_DATA\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
											"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
											"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}",
											"",
											"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
											"    postman.setEnvironmentVariable(\"username\",\"uday\");",
											"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "password",
											"type": "text",
											"value": "{{password}}"
										},
										{
											"key": "grant_type",
											"type": "text",
											"value": "password"
										},
										{
											"key": "scope",
											"type": "text",
											"value": "read"
										},
										{
											"key": "tenantId",
											"type": "text",
											"value": "{{tenantId}}"
										}
									]
								},
								"url": {
									"raw": "{{url}}/user/oauth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"oauth",
										"token"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "MDMS_DATA",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var resBody = JSON.parse(responseBody);",
											"",
											"",
											"var max = resBody.MdmsRes.inventory.Material.length - 1;",
											"         var rand = 0;",
											"         var materialCode = null;",
											"         var UomCode = null;",
											"         if(max > -1){",
											"             rand = Math.min( max, Math.floor(Math.random() * (max - 0 + 1) + 0) );",
											"             materialCode = resBody.MdmsRes.inventory.Material[rand].code;",
											"             pm.environment.set(\"materialCode\",materialCode);",
											"             ",
											"             UomCode = resBody.MdmsRes.inventory.Material[rand].baseUom.code;",
											"             pm.environment.set(\"UomCode\",UomCode);",
											"}",
											"",
											"postman.setNextRequest(\"Create Indents\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n  \"RequestInfo\":{  \n     \"apiId\":\"inventory-services\",\n      \"ver\":null,\n      \"ts\":null,\n      \"action\":null,\n      \"did\":null,\n      \"key\":null,\n      \"msgId\":\"search with from and to values\",\n      \"authToken\":\"{{access_token}}\"\n   },\n   \"MdmsCriteria\":{  \n     \"tenantId\":\"{{tenantId}}\",\n      \"moduleDetails\":[  \n        {  \n           \"moduleName\":\"inventory\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Material\"\n               },\n                {  \n                 \"name\":\"MaterialType\"\n               },\n               {\n               \t \"name\":\"Uom\"\n               }\n            ]\n         },\n         {  \n           \"moduleName\":\"common-masters\",\n            \"masterDetails\":[  \n              {  \n                 \"name\":\"Department\"\n               }\n            ]\n         }\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{url}}/egov-mdms-service/v1/_search",
									"host": [
										"{{url}}"
									],
									"path": [
										"egov-mdms-service",
										"v1",
										"_search"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Indents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var indentNumber=responseBody.indents[0].indentNumber;",
											"pm.environment.set(\"indentNumber\",indentNumber);",
											"",
											"var indentQuantity=requestBody.indents[0].indentDetails[0].indentQuantity;",
											"pm.environment.set(\"indentQuantity\",indentQuantity);",
											"",
											"postman.setNextRequest(\"Create Supplier\");",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"indents\": [\n    {\n      \"issueStore\": {\n        \"code\": \"MED001\"\n      },\n      \"indentDate\": 1512412200000,\n      \"indentNumber\": \"\",\n      \"indentType\": \"Indent\",\n      \"expectedDeliveryDate\": 1512412200000,\n      \"narration\": \"fgfd\",\n      \"materialHandOverTo\": \"fdgdf\",\n      \"designation\": \"\",\n      \"indentDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"indentQuantity\": \"3\",\n          \"asset\": {\n            \"code\": \"2\"\n          }\n        }\n      ],\n      \"indentPurpose\": \"Consumption\",\n      \"inventoryType\": \"Asset\",\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1511527847642,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/indents/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"indents",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Supplier",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Pricelists\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"SBI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"suppliers",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Pricelists",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"var requestBody = JSON.parse(request.data);",
											"",
											"var ResSupplierCode = responseBody.priceLists[0].supplier.code;",
											"pm.environment.set(\"ResSupplierCode\",ResSupplierCode);",
											"",
											"",
											"var unitPrice=requestBody.priceLists[0].priceListDetails[0].ratePerUnit;",
											"pm.environment.set(\"unitPrice\",unitPrice);",
											"",
											"",
											"postman.setNextRequest(\"Create Store\");",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											" var name1 = Math.floor(Math.random() * 10000);",
											"",
											" postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
											"",
											"function randomPreviousDate(){",
											"   var startDate = new Date(2012,0,1).getTime();",
											"   var endDate =  new Date(2015,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"function randomFutureDate(){",
											"   var startDate = new Date().getTime();",
											"   var endDate =  new Date(2019,0,1).getTime();",
											"   var spaces = (endDate - startDate);",
											"   var timestamp = Math.round(Math.random() * spaces);",
											"   timestamp += startDate;",
											"   return new Date(timestamp);",
											"}",
											"",
											"",
											"var PreviousTime = new randomPreviousDate().getTime();",
											"",
											"var FutureTime = new randomFutureDate().getTime();",
											"",
											"pm.environment.set(\"PreviousTime\",PreviousTime);",
											"pm.environment.set(\"FutureTime\",FutureTime);",
											"",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"pricelists",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": "create pricelist"
							},
							"response": []
						},
						{
							"name": "Create Store",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"postman.setNextRequest(\"Create Purchase Order Generation\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var name1 = Math.floor(Math.random() * 10000);",
											"",
											"postman.setEnvironmentVariable(\"storeCode\",\"storeCode\"+name1);",
											"",
											"",
											"var name2 = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(0, 5);",
											"",
											"postman.setEnvironmentVariable(\"storeName\",\"Store Name \"+name2);",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"stores\": [\n    {\n      \"code\": \"{{storeCode}}\",\n      \"name\": \"{{storeName}}\",\n      \"department\": {\n        \"code\": \"ADM\"\n      },\n      \"description\": \"test\",\n      \"officeLocation\": {\n        \"code\": \"LOC1\"\n      },\n      \"isCentralStore\": true,\n      \"billingAddress\": \"mumbai\",\n      \"deliveryAddress\": \"mumbai\",\n      \"storeInCharge\": {\n        \"code\": \"658039\"\n      },\n      \"contactNo1\": \"\",\n      \"email\": \"\",\n      \"active\": true,\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510742992622,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n      \"id\":1,\n      \"tenantId\":\"default\",\n      \"userName\":\"ramesh\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/stores/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"stores",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Purchase Order Generation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"// console.log(JSON.stringify(responseBody));",
											"var ResPriceListPO= responseBody.purchaseOrders[0].purchaseOrderDetails[0].priceList.id;",
											"pm.environment.set(\"ResPriceListPO\",ResPriceListPO);",
											"",
											"",
											" postman.setNextRequest(\"Create Purchase Order\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"purchaseOrders\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{ResSupplierCode}}\"\n      },\n      \"rateType\": \"Quotation\",\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513579003518,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_preparepofromindents?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_preparepofromindents"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Purchase Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody=JSON.parse(responseBody);",
											"",
											"var PODetailsID=responseBody.purchaseOrders[0].purchaseOrderDetails[0].id;",
											"pm.environment.set(\"PODetailsID\",PODetailsID);",
											"",
											"var PONumber=responseBody.purchaseOrders[0].purchaseOrderNumber;",
											"pm.environment.set(\"PONumber\",PONumber);",
											"",
											"",
											"postman.setNextRequest(\"Create Material Receipt Note\");",
											"",
											"",
											"",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var today = new Date().getTime();",
											"pm.environment.set(\"today\", today);",
											"",
											"var orderQuantity = pm.environment.get(\"indentQuantity\");",
											"var rQ = (orderQuantity) - 1;",
											"pm.environment.set(\"receivedQuantity\", rQ);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1513930422037,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  },\n  \"purchaseOrders\": [\n    {\n      \"store\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"purchaseType\": \"Indent\",\n      \"tenantId\": \"{{tenantId}}\",\n      \"purchaseOrderDate\": \"{{today}}\",\n      \"rateType\": \"Quotation\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"purchaseOrderDetails\": [\n        {\n          \"tenantId\": \"{{tenantId}}\",\n          \"material\": {\n            \"tenantId\": \"{{tenantId}}\",\n            \"code\": \"{{materialCode}}\",\n            \"name\": \"SEAL\",\n            \"description\": \"Seal\",\n            \"materialType\": {\n              \"code\": \"MAT1\"\n            },\n            \"baseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"purchaseUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"expenseAccount\": {\n              \"glCode\": \"44001\"\n            },\n            \"minQuantity\": 2,\n            \"maxQuantity\": 20,\n            \"stockingUom\": {\n              \"id\": \"1\",\n              \"tenantId\": \"default\",\n              \"code\": \"NOS\",\n              \"description\": \"Numbers\",\n              \"baseUom\": true,\n              \"uomCategory\": \"QUANTITY\",\n              \"fromDate\": 1508740856,\n              \"toDate\": 1893436200,\n              \"conversionFactor\": 1\n            },\n            \"reorderLevel\": 10,\n            \"reorderQuantity\": 12,\n            \"lotControl\": false,\n            \"shelfLifeControl\": false,\n            \"serialNumber\": false\n          },\n          \"uom\": {\n            \"id\": \"1\",\n            \"tenantId\": \"default\",\n            \"code\": \"NOS\",\n            \"description\": \"Numbers\",\n            \"baseUom\": true,\n            \"uomCategory\": \"QUANTITY\",\n            \"fromDate\": 1508740856,\n            \"toDate\": 1893436200,\n            \"conversionFactor\": 1\n          },\n          \"priceList\": {\n            \"id\": \"{{ResPriceListPO}}\",\n            \"tenantId\": \"{{tenantId}}\",\n            \"supplier\": {\n              \"id\": \"100\",\n              \"tenantId\": \"default\",\n              \"type\": \"INDIVIDUAL\",\n              \"code\": \"{{SupplierCode}}\",\n              \"name\": \"Anand And Sons\",\n              \"address\": \"btm layout\",\n              \"status\": \"ACTIVE\",\n              \"inActiveDate\": 15436789,\n              \"active\": true,\n              \"contactNo\": \"0132278956\",\n              \"faxNo\": \"123788890\",\n              \"website\": \"http://www.google.com\",\n              \"email\": \"anand@gmail.com\",\n              \"description\": \"supplier for cosmetics\",\n              \"panNo\": \"DFGPV3459D\",\n              \"tinNo\": \"34676767uiu\",\n              \"cstNo\": \"34676767uiC\",\n              \"vatNo\": \"34676767uiV\",\n              \"gstNo\": \"75AGHFD7890A0Z0\",\n              \"contactPerson\": \"anand dubay\",\n              \"contactPersonNo\": \"8388743488\",\n              \"bankCode\": \"SBI\",\n              \"bankBranch\": \"bankbranch1\",\n              \"acctNo\": \"3161001500005068\",\n              \"ifsc\": \"IFSC38899\",\n              \"micr\": \"MICR983985\",\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 12345677,\n                \"lastModifiedTime\": 12345677\n              }\n            },\n            \"rateType\": \"Quotation\",\n            \"rateContractNumber\": \"{{rateContractNumber}}\",\n            \"rateContractDate\": 1489224710000,\n            \"agreementNumber\": \"DEC11AN1\",\n            \"agreementDate\": 1491903110000,\n            \"agreementStartDate\": 1328367398850,\n            \"agreementEndDate\": 1527771650467,\n            \"active\": true,\n            \"fileStoreId\": \"\",\n            \"priceListDetails\": [\n              {\n                \"id\": \"201\",\n                \"material\": {\n                  \"code\": \"MAT1\"\n                },\n                \"fromDate\": 1328367398850,\n                \"toDate\": 1527771650467,\n                \"ratePerUnit\": 12,\n                \"quantity\": 11,\n                \"uom\": {\n                  \"id\": \"1\",\n                  \"tenantId\": \"default\",\n                  \"code\": \"NOS\",\n                  \"description\": \"Numbers\",\n                  \"baseUom\": true,\n                  \"uomCategory\": \"QUANTITY\",\n                  \"fromDate\": 1508740856,\n                  \"toDate\": 1893436200,\n                  \"conversionFactor\": 1\n                },\n                \"active\": true,\n                \"auditDetails\": {\n                  \"createdBy\": \"22534\",\n                  \"lastModifiedBy\": \"22534\",\n                  \"createdTime\": 1512988123880,\n                  \"lastModifiedTime\": 1512988123880\n                }\n              }\n            ],\n            \"auditDetails\": {\n              \"createdBy\": \"22534\",\n              \"lastModifiedBy\": \"22534\",\n              \"createdTime\": 1512988123880,\n              \"lastModifiedTime\": 1512988123880\n            }\n          },\n          \"unitPrice\": 12,\n          \"indentNumber\": \"{{indentNumber}}\",\n          \"indentQuantity\": \"{{indentQuantity}}\",\n          \"orderQuantity\": \"{{indentQuantity}}\",\n          \"tenderQuantity\" : 0,\n          \"receivedQuantity\": \"{{receivedQuantity}}\",\n          \"usedQuantity\": 0,\n          \"purchaseIndentDetails\": [\n            {\n              \"tenantId\": \"default\",\n              \"indentDetail\": {\n                \"id\": \"158\",\n                \"tenantId\": \"default\",\n                \"material\": {\n                  \"tenantId\": \"default\",\n                  \"code\": \"MAT1\",\n                  \"name\": \"SEAL\",\n                  \"description\": \"Seal\",\n                  \"materialType\": {\n                    \"code\": \"MT1\"\n                  },\n                  \"baseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"purchaseUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"expenseAccount\": {\n                    \"glCode\": \"44001\"\n                  },\n                  \"minQuantity\": 2,\n                  \"maxQuantity\": 20,\n                  \"stockingUom\": {\n                    \"id\": \"1\",\n                    \"tenantId\": \"default\",\n                    \"code\": \"NOS\",\n                    \"description\": \"Numbers\",\n                    \"baseUom\": true,\n                    \"uomCategory\": \"QUANTITY\",\n                    \"fromDate\": 1508740856,\n                    \"toDate\": 1893436200,\n                    \"conversionFactor\": 1\n                  },\n                  \"reorderLevel\": 10,\n                  \"reorderQuantity\": 12,\n                  \"lotControl\": false,\n                  \"shelfLifeControl\": false,\n                  \"serialNumber\": false\n                },\n                \"uom\": {\n                  \"code\": \"NOS\",\n                  \"baseUom\": false\n                },\n                \"projectCode\": {\n                  \n                },\n                \"asset\": {\n                  \"code\": \"2\"\n                },\n                \"indentQuantity\": 3,\n                \"totalProcessedQuantity\": 0,\n                \"indentIssuedQuantity\": 0,\n                \"poOrderedQuantity\": 0,\n                \"interstoreRequestQuantity\": 0\n              },\n              \"quantity\": 3,\n              \"auditDetails\": {\n                \"createdBy\": \"22534\",\n                \"lastModifiedBy\": \"22534\",\n                \"createdTime\": 1514354899171,\n                \"lastModifiedTime\": 1514354899171\n              }\n            }\n          ]\n        }\n      ],\n      \"indentNumbers\": [\n        \"{{indentNumber}}\"\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/purchaseorders/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"purchaseorders",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Material Receipt Note",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var responseBody = JSON.parse(responseBody);",
											"",
											"var materialReceiptMRN = responseBody.MaterialReceipt[0].mrnNumber;",
											"pm.environment.set(\"materialReceiptMRN\",materialReceiptMRN);",
											"",
											"postman.setNextRequest(\"Search Material Receipt Note\");",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510290513893,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\": {\n      \"id\": 73\n    }\n  },\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"{{storeCode}}\"\n      },\n      \"receiptDate\": \"{{today}}\",\n      \"receiptType\": \"PURCHASE RECEIPT\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"supplierBillNo\": \"AB-PO-2017\",\n      \"supplierBillDate\": 1512365762000,\n      \"challanNo\": \"CD-LK-2017\",\n      \"challanDate\": 1512365762000,\n      \"description\": \"description for receipt\",\n      \"paymentTerms\": \"paymentTerms for receipt\",\n      \"receivedBy\": \"Bimal\",\n      \"designation\": \"ASST-ENG\",\n      \"inspectedBy\": \"ramesh\",\n      \"inspectionDate\": 45698756,\n      \"inspectionRemarks\": \"inspection remarks for receipt\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"{{materialCode}}\"\n          },\n          \"uom\": {\n            \"code\": \"{{UomCode}}\"\n          },\n          \"receivedQty\": \"{{receivedQuantity}}\",\n          \"acceptedQty\": \"{{receivedQuantity}}\",\n          \"unitRate\": 5,\n          \"isScrapItem\":\"true\",\n          \"rejectionRemark\": \"rejection remark for receipt detail\",\n          \"purchaseOrderDetail\": {\n            \"id\": \"{{PODetailsID}}\"\n          },\n         \"receiptDetailsAddnInfo\": [\n            {\n              \"quantity\": \"{{receivedQuantity}}\",\n              \"manufactureDate\": 12345698,\n              \"lotNo\":\"LOT-01\",\n              \"serialNo\": \"SR-02\",\n              \"expiryDate\": 1544509979000,\n              \"batchNo\": \"BA-NO-2017\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{url}}/inventory-services/receiptnotes/_create?tenantId={{tenantId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"receiptnotes",
										"_create"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Material Receipt Note",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"RequestInfo\": {\n    \"apiId\": \"emp\",\n    \"ver\": \"1.0\",\n    \"ts\": \"12345677\",\n    \"action\": \"create\",\n    \"did\": \"1\",\n    \"key\": \"abcdkey\",\n    \"msgId\": \"20170310130900\",\n    \"requesterId\": \"rajesh\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{\n    \t\"id\":1,\n    \t\"tenantId\":\"default\",\n    \t\"username\":\"abc\"\n    }\n  }\n}\n"
								},
								"url": {
									"raw": "{{url}}/inventory-services/receiptnotes/_search?tenantId={{tenantId}}&mrnNumber={{materialReceiptMRN}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"inventory-services",
										"receiptnotes",
										"_search"
									],
									"query": [
										{
											"key": "tenantId",
											"value": "{{tenantId}}",
											"equals": true
										},
										{
											"key": "mrnNumber",
											"value": "{{materialReceiptMRN}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Opening Balance",
					"description": "",
					"item": [
						{
							"name": "Format",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Opening Balance\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var mrnNumber = responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"mrnNumber\",mrnNumber);",
													"",
													"",
													"postman.setNextRequest(\"Search Opening Balance\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"ABC\"\n      },\n      \"financialYear\": \"2040\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT2\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"receivedQty\": \"5\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"ABCD\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"lotNo\":123,\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var requestBody=JSON.parse(request.data);",
													"",
													"var ResmrnNumber=responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"ResmrnNumber\",ResmrnNumber);",
													"",
													"pm.test(\"MrnNumber Matches\", function () {",
													"    pm.expect(ResmrnNumber).to.include(pm.environment.get(\"mrnNumber\"));",
													"});",
													"",
													"var materialReceiptId=responseBody.materialReceipt[0].id;",
													"pm.environment.set(\"materialReceiptId\",materialReceiptId);",
													"",
													"var receiptDetailsid=responseBody.materialReceipt[0].receiptDetails[0].id;",
													"pm.environment.set(\"receiptDetailsid\",receiptDetailsid);",
													"",
													"var receiptDetailsAddnInfoId=responseBody.materialReceipt[0].receiptDetails[0].receiptDetailsAddnInfo[0].id;",
													"pm.environment.set(\"receiptDetailsAddnInfoId\",receiptDetailsAddnInfoId);",
													"",
													"",
													"// pm.environment.set(\"receiptDetails\",responseBody.materialReceipt[0].receiptDetails[0].id);",
													"",
													"",
													"postman.setNextRequest(\"Update Opening Balance\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_search?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Update Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"postman.setNextRequest(\"Search Update Opening Balance\");",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialReceipt\": [\n    {\n    \"id\": \"{{materialReceiptId}}\",\n    \"mrnNumber\": \"{{mrnNumber}}\",\n      \"receivingStore\": {\n        \"code\": \"ABC\"\n      },\n      \"financialYear\": \"2040\",\n      \"receiptDetails\": [\n        {\n        \t\"id\":\"{{receiptDetailsid}}\",\n          \"material\": {\n            \"code\": \"MAT2\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"mrnNumber\": \"{{mrnNumber}}\",\n          \"receivedQty\": \"70\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"ABCD\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"id\":\"{{receiptDetailsAddnInfoId}}\",\n            \t\"lotNo\":\"333\",\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_update?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Search Update Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var receivedQty=responseBody.materialReceipt[0].receiptDetails[0].receivedQty;",
													"pm.environment.set(\"receivedQty\",receivedQty);",
													"",
													"// pm.test(\"receivedQty Matches\", function () {",
													"//     pm.expect(receivedQty).to.include(\"receivedQty\");",
													"// });",
													"",
													"pm.test(\"receivedQty Matches\", function () {",
													"    pm.expect(receivedQty).to.eql(pm.environment.get(\"receivedQty\"));",
													"});",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_search?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Opening Balance\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"narasappa\");",
													"    postman.setEnvironmentVariable(\"password\",\"demo\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var mrnNumber = responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"mrnNumber\",mrnNumber);",
													"",
													"",
													"postman.setNextRequest(\"Search Opening Balance\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"materialReceipt\": [\n    {\n      \"receivingStore\": {\n        \"code\": \"ABC\"\n      },\n      \"financialYear\": \"2010\",\n      \"receiptDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT2\",\n            \"description\": \"\"\n          },\n          \"uom\": {\n            \"code\": \"NOS\"\n          },\n          \"receivedQty\": \"5\",\n          \"unitRate\": \"5\",\n          \"remarks\": \"ABCD\",\n          \"receiptDetailsAddnInfo\": [\n            {\n            \t\"lotNo\":123,\n              \"receivedDate\": \"1510117560000\",\n              \"expiryDate\": \"1544520710000\"\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510549656506,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n   \n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Search Opening Balance",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"var requestBody=JSON.parse(request.data);",
													"",
													"var ResmrnNumber=responseBody.materialReceipt[0].mrnNumber;",
													"pm.environment.set(\"ResmrnNumber\",ResmrnNumber);",
													"",
													"pm.test(\"MrnNumber Matches\", function () {",
													"    pm.expect(ResmrnNumber).to.include(pm.environment.get(\"mrnNumber\"));",
													"});",
													"",
													"var materialReceiptId=responseBody.materialReceipt[0].id;",
													"pm.environment.set(\"materialReceiptId\",materialReceiptId);",
													"",
													"var receiptDetailsid=responseBody.materialReceipt[0].receiptDetails[0].id;",
													"pm.environment.set(\"receiptDetailsid\",receiptDetailsid);",
													"",
													"var receiptDetailsAddnInfoId=responseBody.materialReceipt[0].receiptDetails[0].receiptDetailsAddnInfo[0].id;",
													"pm.environment.set(\"receiptDetailsAddnInfoId\",receiptDetailsAddnInfoId);",
													"",
													"",
													"// pm.environment.set(\"receiptDetails\",responseBody.materialReceipt[0].receiptDetails[0].id);",
													"",
													"",
													"postman.setNextRequest(\"Update Opening Balance\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1510400603623,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\",\n    \"userInfo\":{  \n         \"id\":1,\n         \"userName\":\"testUser\",\n         \"name\":\"test user\"\n      }\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/openingbalance/_search?tenantId={{tenantId}}&mrnNumber={{mrnNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"openingbalance",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "mrnNumber",
													"value": "{{mrnNumber}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Price Lists",
					"description": "",
					"item": [
						{
							"name": "Format",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Create Pricelists\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// var responseBody = JSON.parse(responseBody);",
													"",
													"// var supplierId = responseBody.suppliers[0].id;",
													"// pm.environment.set(\"supplierId\",supplierId);",
													"",
													"",
													"postman.setNextRequest(\"Search Supplier\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"SupplierCode\",\"SUPPLIERCODE\"+name1);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"RequestInfo\": {\n   \"apiId\": \"emp\",\n   \"ver\": \"1.0\",\n   \"ts\": \"12345677\",\n   \"action\": \"create\",\n   \"did\": \"1\",\n   \"key\": \"abcdkey\",\n   \"msgId\": \"20170310130900\",\n   \"requesterId\": \"rajesh\",\n   \"authToken\": \"{{access_token}}\"\n\n  \n },\n \"suppliers\":\n[  {\n\"tenantId\":\"{{tenantId}}\",\n \t\"type\":\"INDIVIDUAL\",\n \t\"code\":\"{{SupplierCode}}\",\n \t\"active\":\"true\",\n \t\"name\":\"Anand And Sons\",\n \t\"address\":\"btm layout\",\n \t\"status\":\"ACTIVE\",\n \t\"inActiveDate\":\"15436789\",\n \t\"contactNo\":\"0132278956\",\n \t\"faxNo\":\"123788890\",\n \t\"website\":\"http://www.google.com\",\n \t\"email\":\"anand@gmail.com\",\n \t\"description\":\"supplier for cosmetics\",\n \t\"panNo\":\"DFGPV3459D\",\n \t\"tinNo\":\"34676767uiu\",\n \t\"cstNo\":\"34676767uiC\",\n \t\"vatNo\":\"34676767uiV\",\n \t\"gstNo\":\"75AGHFD7890A0Z0\",\n \t\"contactPerson\":\"anand dubay\",\n \t\"contactPersonNo\":\"8388743488\",\n \t\"bankCode\":\"SBI\",\n   \"bankBranch\":\"bankbranch1\",\n \t\"acctNo\":\"3161001500005068\",\n \t\"ifsc\":\"IFSC38899\",\n \t\"micr\":\"MICR983985\"\n \t}\n\n]\n \n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/suppliers/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"suppliers",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Create Pricelists",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var rateContractNumber = responseBody.priceLists[0].rateContractNumber;",
													"pm.environment.set(\"rateContractNumber\",rateContractNumber);",
													"",
													"var RespricelistId = responseBody.priceLists[0].id;",
													"pm.environment.set(\"RespricelistId\",RespricelistId);",
													"",
													"var RespricelistDetailsId = responseBody.priceLists[0].priceListDetails[0].id;",
													"pm.environment.set(\"RespricelistDetailsId\",RespricelistDetailsId);",
													"",
													"",
													"postman.setNextRequest(\"Search Pricelists\");",
													"",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Search Pricelists",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResrateContractNumber=responseBody.priceLists[0].rateContractNumber;",
													"",
													"pm.environment.set(\"ResrateContractNumber,ResrateContractNumber\");",
													"",
													"pm.test(\"RateContractNumber Matches\", function () {",
													"    pm.expect(ResrateContractNumber).to.include(pm.environment.get(\"rateContractNumber\"));",
													"});",
													"",
													"postman.setNextRequest(\"Update Pricelists\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512989173575,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_search?tenantId={{tenantId}}&rateContractNumber={{rateContractNumber}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "rateContractNumber",
													"value": "{{rateContractNumber}}",
													"equals": true
												}
											]
										},
										"description": "search Pricelists"
									},
									"response": []
								},
								{
									"name": "Update Pricelists",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var requestBody=JSON.parse(request.data);",
													"var ReqrateType=requestBody.priceLists[0].rateType;",
													"pm.environment.set(\"ReqrateType\",ReqrateType);",
													"",
													"",
													"postman.setNextRequest(\"Search Update Pricelists\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n    \t\"id\":\"{{RespricelistId}}\",\n      \"supplier\": {\n        \"code\": \"{{SupplierCode}}\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{FutureTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"Quotation\",\n      \"priceListDetails\": [\n        {\n        \t\"id\":\"{{RespricelistDetailsId}}\",\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"123\",\n          \"quantity\": 20,\n          \"active\": true\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_update?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_update"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "update Pricelists"
									},
									"response": []
								},
								{
									"name": "Search Update Pricelists",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var responseBody=JSON.parse(responseBody);",
													"",
													"var ResrateType=responseBody.priceLists[0].rateType;",
													"",
													"pm.environment.set(\"ResrateType\",ResrateType);",
													"",
													"pm.test(\"RateType Matches\", function () {",
													"    pm.expect(ResrateType).to.eql(pm.environment.get(\"rateType\"));",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512989173575,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_search?tenantId={{tenantId}}&rateType={{ReqrateType}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_search"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												},
												{
													"key": "rateType",
													"value": "{{ReqrateType}}",
													"equals": true
												}
											]
										},
										"description": "search Pricelists"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Functional",
							"description": "",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
													"",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Username is valid\"] = jsonData.UserRequest.userName.has(request.data[\"username\"]);",
													"",
													"postman.setNextRequest(\"Pricelist without unique rateContractNumber\");"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"if(environment.url.has(\"http://egov-micro-dev.egovernments.org\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"default\")){",
													"    postman.setEnvironmentVariable(\"username\",\"sanjeev\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.roha\")){",
													"    postman.setEnvironmentVariable(\"username\",\"kartik\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}",
													"",
													"if(environment.url.has(\"http://egov-micro-qa.egovernments.org\") && environment.tenantId.has(\"mh.rohatest\")){",
													"    postman.setEnvironmentVariable(\"username\",\"uday\");",
													"    postman.setEnvironmentVariable(\"password\",\"12345678\");",
													"}"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"type": "text",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"type": "text",
													"value": "{{password}}"
												},
												{
													"key": "grant_type",
													"type": "text",
													"value": "password"
												},
												{
													"key": "scope",
													"type": "text",
													"value": "read"
												},
												{
													"key": "tenantId",
													"type": "text",
													"value": "{{tenantId}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}/user/oauth/token",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"oauth",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Pricelist without unique rateContractNumber",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorrateContractNumber = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorrateContractNumber\",ErrorrateContractNumber);",
													"",
													"pm.test(\"Rate contract No is unique\", function () {",
													"    pm.expect(ErrorrateContractNumber).to.include(\"already exists\");",
													"});",
													"",
													"postman.setNextRequest(\"Pricelist with future date\");",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// var name1 = Math.floor(Math.random() * 10000);",
													"",
													"// postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"3333\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{PreviousTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Pricelist with future date",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorDate = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorDate\",ErrorDate);",
													"",
													"pm.test(\"field agreementStartDate should be Less than or Equal to Current Date.\", function () {",
													"    pm.expect(ErrorDate).to.include(\"Less than or Equal\");",
													"});",
													"",
													"",
													"postman.setNextRequest(\"Pricelist without rate type\");",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"// function randomPreviousDate(){",
													"//   var startDate = new Date(2012,0,1).getTime();",
													"//   var endDate =  new Date(2015,0,1).getTime();",
													"//   var spaces = (endDate - startDate);",
													"//   var timestamp = Math.round(Math.random() * spaces);",
													"//   timestamp += startDate;",
													"//   return new Date(timestamp);",
													"// }",
													"",
													"// function randomFutureDate(){",
													"//   var startDate = new Date().getTime();",
													"//   var endDate =  new Date(2019,0,1).getTime();",
													"//   var spaces = (endDate - startDate);",
													"//   var timestamp = Math.round(Math.random() * spaces);",
													"//   timestamp += startDate;",
													"//   return new Date(timestamp);",
													"// }",
													"",
													"",
													"// var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"// var FutureTime = new randomFutureDate().getTime();",
													"",
													"// pm.environment.set(\"PreviousTime\",PreviousTime);",
													"// pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"1766142421000\",\n      \"agreementEndDate\": \"1766142421000\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Pricelist without rate type",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorRatetype = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorRatetype\",ErrorRatetype);",
													"",
													"pm.test(\"Rate Type is mandatory\", function () {",
													"    pm.expect(ErrorRatetype).to.include(\"may not be null\");",
													"});",
													"",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{PreviousTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": null,\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"11\"\n        }\n      ],\n      \"tenantId\": \"default\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								},
								{
									"name": "Pricelist without quantity",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var responseBody = JSON.parse(responseBody);",
													"",
													"var ErrorQuantity = responseBody.Errors[0].message;",
													"pm.environment.set(\"ErrorQuantity\",ErrorQuantity);",
													"",
													"pm.test(\"quantity is mandatory\", function () {",
													"    pm.expect(ErrorQuantity).to.include(\"greater than zero\");",
													"});",
													"",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var name1 = Math.floor(Math.random() * 10000);",
													"",
													"postman.setEnvironmentVariable(\"rateContractNumber\",\"rateContractNumber \"+name1);",
													"",
													"function randomPreviousDate(){",
													"   var startDate = new Date(2012,0,1).getTime();",
													"   var endDate =  new Date(2015,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"function randomFutureDate(){",
													"   var startDate = new Date().getTime();",
													"   var endDate =  new Date(2019,0,1).getTime();",
													"   var spaces = (endDate - startDate);",
													"   var timestamp = Math.round(Math.random() * spaces);",
													"   timestamp += startDate;",
													"   return new Date(timestamp);",
													"}",
													"",
													"",
													"var PreviousTime = new randomPreviousDate().getTime();",
													"",
													"var FutureTime = new randomFutureDate().getTime();",
													"",
													"pm.environment.set(\"PreviousTime\",PreviousTime);",
													"pm.environment.set(\"FutureTime\",FutureTime);",
													"",
													"",
													"",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priceLists\": [\n    {\n      \"supplier\": {\n        \"code\": \"JK002\"\n      },\n      \"rateContractNumber\": \"{{rateContractNumber}}\",\n      \"rateContractDate\": 1489224710000,\n      \"agreementNumber\": \"DEC11AN1\",\n      \"agreementDate\": 1491903110000,\n      \"agreementStartDate\": \"{{PreviousTime}}\",\n      \"agreementEndDate\": \"{{PreviousTime}}\",\n      \"active\": true,\n      \"fileStoreId\": \"\",\n      \"rateType\": \"One Time Tender\",\n      \"priceListDetails\": [\n        {\n          \"material\": {\n            \"code\": \"MAT1\"\n          },\n          \"uom\": {\n            \"code\": \"CM\",\n            \"conversionFactor\": 1\n          },\n          \"ratePerUnit\": \"12\",\n          \"quantity\": \"\"\n        }\n      ],\n      \"tenantId\": \"{{tenantId}}\"\n    }\n  ],\n  \"RequestInfo\": {\n    \"apiId\": \"org.egov.pt\",\n    \"ver\": \"1.0\",\n    \"ts\": 1512988123880,\n    \"action\": \"asd\",\n    \"did\": \"4354648646\",\n    \"key\": \"xyz\",\n    \"msgId\": \"654654\",\n    \"requesterId\": \"61\",\n    \"authToken\": \"{{access_token}}\"\n  }\n}"
										},
										"url": {
											"raw": "{{url}}/inventory-services/pricelists/_create?tenantId={{tenantId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"inventory-services",
												"pricelists",
												"_create"
											],
											"query": [
												{
													"key": "tenantId",
													"value": "{{tenantId}}",
													"equals": true
												}
											]
										},
										"description": "create pricelist"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}