swagger: '2.0'
info:
  version: 0.0.0
  title: eGov PTIS Masters (Leases And Agreements System)
  description: eGov PTIS Masters manages all the masters belongs to property tax.
  contact:
    name:  Ramakrishna (Ramki)
    email: ramakrishna@egovernments.org
host: phoenix-qa.egovernments.org
schemes:
  - https
basePath: '/[API endpoint]'
paths:
    /departments/_search:
      post:
        summary: Get the list of departments
        description: departments
        tags: 
          - Department
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
              format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the Department
            maxLength: 128
          - name: category
            type: string
            in: query
            description: category of the Department
            maxLength: 16
          - name: name
            type: string
            in: query
            description: name of the Department
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the Department
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the Department
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the Department
            maxLength: 512
          - name: createdBy
            type: string
            in: query
            description: created by of the Department
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the Department
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the Department
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the Department
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: Department retrieved Successfully
            schema:
              $ref: '#/definitions/DepartmentResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /departments/_create:
      post:
        summary: Create  new  departments
        description: Create  new departments
        tags: 
          - Department
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: departmentRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/DepartmentRequest'
        responses:
          201:
            description: Department created Successfully
            schema:
              $ref: '#/definitions/DepartmentResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /departments/{id}/_update:
      post:
        summary: Update any of the departments
        description: Update any of the departments
        tags: 
          - Department
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the Department
            required: true
            type: integer
            format: int64
          - name: departmentRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/DepartmentRequest'
        responses:
          200:
            description: Department updated Successfully
            schema:
              $ref: '#/definitions/DepartmentResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /floortypes/_search:
      post:
        summary: Get the list of floortypes
        description: floortypes
        tags: 
          - FloorType
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the FloorType
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the FloorType
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the FloorType
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the FloorType
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the FloorType
            maxLength: 512
          - name: createdBy
            type: string
            in: query
            description: created by of the FloorType
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the FloorType
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the FloorType
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the FloorType
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: FloorType retrieved Successfully
            schema:
              $ref: '#/definitions/FloorTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /floortypes/_create:
      post:
        summary: Create  new  floortypes
        description: Create  new floortypes
        tags: 
          - FloorType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: floorTypeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/FloorTypeRequest'
        responses:
          201:
            description: FloorType created Successfully
            schema:
              $ref: '#/definitions/FloorTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /floortypes/{id}/_update:
      post:
        summary: Update any of the floortypes
        description: Update any of the floortypes
        tags: 
          - FloorType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the FloorType
            required: true
            type: integer
            format: int64
          - name: floorTypeRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/FloorTypeRequest'
        responses:
          200:
            description: FloorType updated Successfully
            schema:
              $ref: '#/definitions/FloorTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /occuapancymasters/_search:
      post:
        summary: Get the list of occuapancymasters
        description: occuapancymasters
        tags: 
          - OccuapancyMaster
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the OccuapancyMaster
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the OccuapancyMaster
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the OccuapancyMaster
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the OccuapancyMaster
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the OccuapancyMaster
            maxLength: 512
          - name: factor
            type: number
            format: double
            in: query
            description: factor of the OccuapancyMaster
          - name: active
            type: boolean
            in: query
            description: Whether OccuapancyMaster is Active or not. If the value is TRUE, then OccuapancyMaster is active,If the value is FALSE then OccuapancyMaster is inactive,Default value is TRUE
          - name: orderNumber
            type: integer
            format: int32
            in: query
            description: order number of the OccuapancyMaster
          - name: createdBy
            type: string
            in: query
            description: created by of the OccuapancyMaster
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the OccuapancyMaster
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the OccuapancyMaster
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the OccuapancyMaster
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: OccuapancyMaster retrieved Successfully
            schema:
              $ref: '#/definitions/OccuapancyMasterResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /occuapancymasters/_create:
      post:
        summary: Create  new  occuapancymasters
        description: Create  new occuapancymasters
        tags: 
          - OccuapancyMaster
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: occuapancyMasterRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/OccuapancyMasterRequest'
        responses:
          201:
            description: OccuapancyMaster created Successfully
            schema:
              $ref: '#/definitions/OccuapancyMasterResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /occuapancymasters/{id}/_update:
      post:
        summary: Update any of the occuapancymasters
        description: Update any of the occuapancymasters
        tags: 
          - OccuapancyMaster
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the OccuapancyMaster
            required: true
            type: integer
            format: int64
          - name: occuapancyMasterRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/OccuapancyMasterRequest'
        responses:
          200:
            description: OccuapancyMaster updated Successfully
            schema:
              $ref: '#/definitions/OccuapancyMasterResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /propertytypes/_search:
      post:
        summary: Get the list of propertytypes
        description: propertytypes
        tags: 
          - PropertyType
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the PropertyType
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the PropertyType
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the PropertyType
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the PropertyType
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the PropertyType
            maxLength: 512
          - name: factor
            type: number
            format: double
            in: query
            description: factor of the PropertyType
          - name: active
            type: boolean
            in: query
            description: Whether PropertyType is Active or not. If the value is TRUE, then PropertyType is active,If the value is FALSE then PropertyType is inactive,Default value is TRUE
          - name: orderNumber
            type: integer
            format: int32
            in: query
            description: order number of the PropertyType
          - name: createdBy
            type: string
            in: query
            description: created by of the PropertyType
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the PropertyType
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the PropertyType
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the PropertyType
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: PropertyType retrieved Successfully
            schema:
              $ref: '#/definitions/PropertyTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /propertytypes/_create:
      post:
        summary: Create  new  propertytypes
        description: Create  new propertytypes
        tags: 
          - PropertyType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: propertyTypeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/PropertyTypeRequest'
        responses:
          201:
            description: PropertyType created Successfully
            schema:
              $ref: '#/definitions/PropertyTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /propertytypes/{id}/_update:
      post:
        summary: Update any of the propertytypes
        description: Update any of the propertytypes
        tags: 
          - PropertyType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the PropertyType
            required: true
            type: integer
            format: int64
          - name: propertyTypeRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/PropertyTypeRequest'
        responses:
          200:
            description: PropertyType updated Successfully
            schema:
              $ref: '#/definitions/PropertyTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /rooftypes/_search:
      post:
        summary: Get the list of rooftypes
        description: rooftypes
        tags: 
          - RoofType
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the RoofType
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the RoofType
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the RoofType
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the RoofType
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the RoofType
            maxLength: 512
          - name: createdBy
            type: string
            in: query
            description: created by of the RoofType
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the RoofType
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the RoofType
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the RoofType
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: RoofType retrieved Successfully
            schema:
              $ref: '#/definitions/RoofTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /rooftypes/_create:
      post:
        summary: Create  new  rooftypes
        description: Create  new rooftypes
        tags: 
          - RoofType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: roofTypeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/RoofTypeRequest'
        responses:
          201:
            description: RoofType created Successfully
            schema:
              $ref: '#/definitions/RoofTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /rooftypes/{id}/_update:
      post:
        summary: Update any of the rooftypes
        description: Update any of the rooftypes
        tags: 
          - RoofType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the RoofType
            required: true
            type: integer
            format: int64
          - name: roofTypeRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/RoofTypeRequest'
        responses:
          200:
            description: RoofType updated Successfully
            schema:
              $ref: '#/definitions/RoofTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /structureclasses/_search:
      post:
        summary: Get the list of structureclasses
        description: structureclasses
        tags: 
          - StructureClass
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the StructureClass
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the StructureClass
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the StructureClass
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the StructureClass
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the StructureClass
            maxLength: 512
          - name: factor
            type: number
            format: double
            in: query
            description: factor of the StructureClass
          - name: active
            type: boolean
            in: query
            description: Whether StructureClass is Active or not. If the value is TRUE, then StructureClass is active,If the value is FALSE then StructureClass is inactive,Default value is TRUE
          - name: orderNumber
            type: integer
            format: int32
            in: query
            description: order number of the StructureClass
          - name: createdBy
            type: string
            in: query
            description: created by of the StructureClass
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the StructureClass
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the StructureClass
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the StructureClass
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: StructureClass retrieved Successfully
            schema:
              $ref: '#/definitions/StructureClassResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /structureclasses/_create:
      post:
        summary: Create  new  structureclasses
        description: Create  new structureclasses
        tags: 
          - StructureClass
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: structureClassRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/StructureClassRequest'
        responses:
          201:
            description: StructureClass created Successfully
            schema:
              $ref: '#/definitions/StructureClassResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /structureclasses/{id}/_update:
      post:
        summary: Update any of the structureclasses
        description: Update any of the structureclasses
        tags: 
          - StructureClass
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the StructureClass
            required: true
            type: integer
            format: int64
          - name: structureClassRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/StructureClassRequest'
        responses:
          200:
            description: StructureClass updated Successfully
            schema:
              $ref: '#/definitions/StructureClassResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /usagemasters/_search:
      post:
        summary: Get the list of usagemasters
        description: usagemasters
        tags: 
          - UsageMaster
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the UsageMaster
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the UsageMaster
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the UsageMaster
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the UsageMaster
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the UsageMaster
            maxLength: 512
          - name: factor
            type: number
            format: double
            in: query
            description: factor of the UsageMaster
          - name: active
            type: boolean
            in: query
            description: Whether UsageMaster is Active or not. If the value is TRUE, then UsageMaster is active,If the value is FALSE then UsageMaster is inactive,Default value is TRUE
          - name: isResidential
            type: boolean
            in: query
            description: is residential of the UsageMaster
          - name: orderNumber
            type: integer
            format: int32
            in: query
            description: order number of the UsageMaster
          - name: createdBy
            type: string
            in: query
            description: created by of the UsageMaster
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the UsageMaster
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the UsageMaster
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the UsageMaster
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: UsageMaster retrieved Successfully
            schema:
              $ref: '#/definitions/UsageMasterResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /usagemasters/_create:
      post:
        summary: Create  new  usagemasters
        description: Create  new usagemasters
        tags: 
          - UsageMaster
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: usageMasterRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/UsageMasterRequest'
        responses:
          201:
            description: UsageMaster created Successfully
            schema:
              $ref: '#/definitions/UsageMasterResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /usagemasters/{id}/_update:
      post:
        summary: Update any of the usagemasters
        description: Update any of the usagemasters
        tags: 
          - UsageMaster
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the UsageMaster
            required: true
            type: integer
            format: int64
          - name: usageMasterRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/UsageMasterRequest'
        responses:
          200:
            description: UsageMaster updated Successfully
            schema:
              $ref: '#/definitions/UsageMasterResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /walltypes/_search:
      post:
        summary: Get the list of walltypes
        description: walltypes
        tags: 
          - WallType
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the WallType
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the WallType
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the WallType
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the WallType
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the WallType
            maxLength: 512
          - name: createdBy
            type: string
            in: query
            description: created by of the WallType
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the WallType
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the WallType
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the WallType
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: WallType retrieved Successfully
            schema:
              $ref: '#/definitions/WallTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /walltypes/_create:
      post:
        summary: Create  new  walltypes
        description: Create  new walltypes
        tags: 
          - WallType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: wallTypeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/WallTypeRequest'
        responses:
          201:
            description: WallType created Successfully
            schema:
              $ref: '#/definitions/WallTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /walltypes/{id}/_update:
      post:
        summary: Update any of the walltypes
        description: Update any of the walltypes
        tags: 
          - WallType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the WallType
            required: true
            type: integer
            format: int64
          - name: wallTypeRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/WallTypeRequest'
        responses:
          200:
            description: WallType updated Successfully
            schema:
              $ref: '#/definitions/WallTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

    /woodtypes/_search:
      post:
        summary: Get the list of woodtypes
        description: woodtypes
        tags: 
          - WoodType
        parameters:
          - name: requestInfo
            in: body
            description: Common Request info for the Services
            schema:
              $ref: '#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: ids
            type: array
            items: 
              type: integer
            format: int64
            in: query
            maxItems: 50
            description: comma seperated list of Ids 
          - name: tenantId
            type: string
            in: query
            description: tenant id of the WoodType
            maxLength: 128
          - name: name
            type: string
            in: query
            description: name of the WoodType
            maxLength: 128
          - name: code
            type: string
            in: query
            description: code of the WoodType
            maxLength: 16
          - name: nameLocal
            type: string
            in: query
            description: name local of the WoodType
            maxLength: 256
          - name: description
            type: string
            in: query
            description: description of the WoodType
            maxLength: 512
          - name: createdBy
            type: string
            in: query
            description: created by of the WoodType
            maxLength: 16
          - name: createdDate
            type: string
            format: date
            in: query
            description: created date of the WoodType
          - name: lastModifiedBy
            type: string
            in: query
            description: last modified by of the WoodType
            maxLength: 16
          - name: lastModifiedDate
            type: string
            format: date
            in: query
            description: last modified date of the WoodType
          - name: pageSize
            type: integer
            format: int32
            in: query
            description: Number of records in a per page in  the Search Results, Default value is 20
          - name: offSet
            type: integer
            format: int32
            in: query
            description: page number of the Search Results, Default value is 0
        responses:
          200:
            description: WoodType retrieved Successfully
            schema:
              $ref: '#/definitions/WoodTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /woodtypes/_create:
      post:
        summary: Create  new  woodtypes
        description: Create  new woodtypes
        tags: 
          - WoodType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: woodTypeRequest
            in: body
            description: Create  new 
            schema:
              $ref: '#/definitions/WoodTypeRequest'
        responses:
          201:
            description: WoodType created Successfully
            schema:
              $ref: '#/definitions/WoodTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'
    /woodtypes/{id}/_update:
      post:
        summary: Update any of the woodtypes
        description: Update any of the woodtypes
        tags: 
          - WoodType
        parameters:
          - name: tenantId
            in: query
            description: Unique id for a tenant.
            required: true
            type: string
            format: varchar
          - name: id
            in: path
            description: Unique id of the WoodType
            required: true
            type: integer
            format: int64
          - name: woodTypeRequest
            in: body
            description: common Request info
            schema:
              $ref: '#/definitions/WoodTypeRequest'
        responses:
          200:
            description: WoodType updated Successfully
            schema:
              $ref: '#/definitions/WoodTypeResponse'
          400:
            description: Invalid Input
            schema:
              $ref: '#/definitions/ErrorResponse'

definitions:

    Department:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the Department
        tenantId:
          type: string
          description: tenant id of the Department
          maxLength: 128
          minLength: 4
        category:
          type: string
          description: category of the Department
          maxLength: 16
          minLength: 4
        name:
          type: string
          description: name of the Department
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the Department
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the Department
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the Department
          maxLength: 512
          minLength: 8
        createdBy:
          type: string
          description: created by of the Department
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the Department
        lastModifiedBy:
          type: string
          description: last modified by of the Department
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the Department
      required:
      - id
      - tenantId
      - category
      - name
      - code
    DepartmentRequest:
      description: Contract class to receive request. Array of Department items  are used in case of create . Where as single Department item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        departments:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/Department'
    DepartmentResponse:
      description: Contract class to send response. Array of Department items  are used in case of search results or response for create. Where as single Department item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        departments:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/Department'
        page:
          $ref: '#/definitions/Page'

    FloorType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the FloorType
        tenantId:
          type: string
          description: tenant id of the FloorType
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the FloorType
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the FloorType
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the FloorType
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the FloorType
          maxLength: 512
          minLength: 8
        createdBy:
          type: string
          description: created by of the FloorType
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the FloorType
        lastModifiedBy:
          type: string
          description: last modified by of the FloorType
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the FloorType
      required:
      - id
      - tenantId
      - name
      - code
    FloorTypeRequest:
      description: Contract class to receive request. Array of FloorType items  are used in case of create . Where as single FloorType item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        floorTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/FloorType'
    FloorTypeResponse:
      description: Contract class to send response. Array of FloorType items  are used in case of search results or response for create. Where as single FloorType item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        floorTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/FloorType'
        page:
          $ref: '#/definitions/Page'

    OccuapancyMaster:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the OccuapancyMaster
        tenantId:
          type: string
          description: tenant id of the OccuapancyMaster
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the OccuapancyMaster
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the OccuapancyMaster
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the OccuapancyMaster
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the OccuapancyMaster
          maxLength: 512
          minLength: 8
        factor:
          type: number
          format: double
          description: factor of the OccuapancyMaster
        active:
          type: boolean
          description: Whether OccuapancyMaster is Active or not. If the value is TRUE, then OccuapancyMaster is active,If the value is FALSE then OccuapancyMaster is inactive,Default value is TRUE
        orderNumber:
          type: integer
          format: int32
          description: order number of the OccuapancyMaster
        createdBy:
          type: string
          description: created by of the OccuapancyMaster
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the OccuapancyMaster
        lastModifiedBy:
          type: string
          description: last modified by of the OccuapancyMaster
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the OccuapancyMaster
      required:
      - id
      - tenantId
      - name
      - code
    OccuapancyMasterRequest:
      description: Contract class to receive request. Array of OccuapancyMaster items  are used in case of create . Where as single OccuapancyMaster item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        occuapancyMasters:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/OccuapancyMaster'
    OccuapancyMasterResponse:
      description: Contract class to send response. Array of OccuapancyMaster items  are used in case of search results or response for create. Where as single OccuapancyMaster item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        occuapancyMasters:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/OccuapancyMaster'
        page:
          $ref: '#/definitions/Page'

    PropertyType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the PropertyType
        tenantId:
          type: string
          description: tenant id of the PropertyType
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the PropertyType
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the PropertyType
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the PropertyType
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the PropertyType
          maxLength: 512
          minLength: 8
        factor:
          type: number
          format: double
          description: factor of the PropertyType
        active:
          type: boolean
          description: Whether PropertyType is Active or not. If the value is TRUE, then PropertyType is active,If the value is FALSE then PropertyType is inactive,Default value is TRUE
        orderNumber:
          type: integer
          format: int32
          description: order number of the PropertyType
        createdBy:
          type: string
          description: created by of the PropertyType
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the PropertyType
        lastModifiedBy:
          type: string
          description: last modified by of the PropertyType
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the PropertyType
      required:
      - id
      - tenantId
      - name
      - code
    PropertyTypeRequest:
      description: Contract class to receive request. Array of PropertyType items  are used in case of create . Where as single PropertyType item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        propertyTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/PropertyType'
    PropertyTypeResponse:
      description: Contract class to send response. Array of PropertyType items  are used in case of search results or response for create. Where as single PropertyType item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        propertyTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/PropertyType'
        page:
          $ref: '#/definitions/Page'

    RoofType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the RoofType
        tenantId:
          type: string
          description: tenant id of the RoofType
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the RoofType
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the RoofType
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the RoofType
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the RoofType
          maxLength: 512
          minLength: 8
        createdBy:
          type: string
          description: created by of the RoofType
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the RoofType
        lastModifiedBy:
          type: string
          description: last modified by of the RoofType
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the RoofType
      required:
      - id
      - tenantId
      - name
      - code
    RoofTypeRequest:
      description: Contract class to receive request. Array of RoofType items  are used in case of create . Where as single RoofType item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        roofTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/RoofType'
    RoofTypeResponse:
      description: Contract class to send response. Array of RoofType items  are used in case of search results or response for create. Where as single RoofType item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        roofTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/RoofType'
        page:
          $ref: '#/definitions/Page'

    StructureClass:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the StructureClass
        tenantId:
          type: string
          description: tenant id of the StructureClass
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the StructureClass
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the StructureClass
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the StructureClass
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the StructureClass
          maxLength: 512
          minLength: 8
        factor:
          type: number
          format: double
          description: factor of the StructureClass
        active:
          type: boolean
          description: Whether StructureClass is Active or not. If the value is TRUE, then StructureClass is active,If the value is FALSE then StructureClass is inactive,Default value is TRUE
        orderNumber:
          type: integer
          format: int32
          description: order number of the StructureClass
        createdBy:
          type: string
          description: created by of the StructureClass
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the StructureClass
        lastModifiedBy:
          type: string
          description: last modified by of the StructureClass
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the StructureClass
      required:
      - id
      - tenantId
      - name
      - code
    StructureClassRequest:
      description: Contract class to receive request. Array of StructureClass items  are used in case of create . Where as single StructureClass item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        structureClasses:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/StructureClass'
    StructureClassResponse:
      description: Contract class to send response. Array of StructureClass items  are used in case of search results or response for create. Where as single StructureClass item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        structureClasses:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/StructureClass'
        page:
          $ref: '#/definitions/Page'

    UsageMaster:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the UsageMaster
        tenantId:
          type: string
          description: tenant id of the UsageMaster
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the UsageMaster
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the UsageMaster
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the UsageMaster
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the UsageMaster
          maxLength: 512
          minLength: 8
        factor:
          type: number
          format: double
          description: factor of the UsageMaster
        active:
          type: boolean
          description: Whether UsageMaster is Active or not. If the value is TRUE, then UsageMaster is active,If the value is FALSE then UsageMaster is inactive,Default value is TRUE
        isResidential:
          type: boolean
          description: is residential of the UsageMaster
        orderNumber:
          type: integer
          format: int32
          description: order number of the UsageMaster
        createdBy:
          type: string
          description: created by of the UsageMaster
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the UsageMaster
        lastModifiedBy:
          type: string
          description: last modified by of the UsageMaster
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the UsageMaster
      required:
      - id
      - tenantId
      - name
      - code
    UsageMasterRequest:
      description: Contract class to receive request. Array of UsageMaster items  are used in case of create . Where as single UsageMaster item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        usageMasters:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/UsageMaster'
    UsageMasterResponse:
      description: Contract class to send response. Array of UsageMaster items  are used in case of search results or response for create. Where as single UsageMaster item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        usageMasters:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/UsageMaster'
        page:
          $ref: '#/definitions/Page'

    WallType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the WallType
        tenantId:
          type: string
          description: tenant id of the WallType
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the WallType
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the WallType
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the WallType
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the WallType
          maxLength: 512
          minLength: 8
        createdBy:
          type: string
          description: created by of the WallType
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the WallType
        lastModifiedBy:
          type: string
          description: last modified by of the WallType
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the WallType
      required:
      - id
      - tenantId
      - name
      - code
    WallTypeRequest:
      description: Contract class to receive request. Array of WallType items  are used in case of create . Where as single WallType item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        wallTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/WallType'
    WallTypeResponse:
      description: Contract class to send response. Array of WallType items  are used in case of search results or response for create. Where as single WallType item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        wallTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/WallType'
        page:
          $ref: '#/definitions/Page'

    WoodType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique Identifier of the WoodType
        tenantId:
          type: string
          description: tenant id of the WoodType
          maxLength: 128
          minLength: 4
        name:
          type: string
          description: name of the WoodType
          maxLength: 128
          minLength: 4
        code:
          type: string
          description: code of the WoodType
          maxLength: 16
          minLength: 4
        nameLocal:
          type: string
          description: name local of the WoodType
          maxLength: 256
          minLength: 8
        description:
          type: string
          description: description of the WoodType
          maxLength: 512
          minLength: 8
        createdBy:
          type: string
          description: created by of the WoodType
          maxLength: 16
          minLength: 1
        createdDate:
          type: string
          format: date
          description: created date of the WoodType
        lastModifiedBy:
          type: string
          description: last modified by of the WoodType
          maxLength: 16
          minLength: 1
        lastModifiedDate:
          type: string
          format: date
          description: last modified date of the WoodType
      required:
      - id
      - tenantId
      - name
      - code
    WoodTypeRequest:
      description: Contract class to receive request. Array of WoodType items  are used in case of create . Where as single WoodType item is used for update
      properties:
        requestInfo:
          $ref: '#/definitions/RequestInfo'
        woodTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/WoodType'
    WoodTypeResponse:
      description: Contract class to send response. Array of WoodType items  are used in case of search results or response for create. Where as single WoodType item is used for update
      properties:
        responseInfo:
          $ref: '#/definitions/ResponseInfo'
        woodTypes:
          description: Used for search result and create only
          type:  array
          items:
            $ref: '#/definitions/WoodType'
        page:
          $ref: '#/definitions/Page'
          
  RequestInfo:
    type: object
    properties:
      apiId:
        type: string
        description: unique API ID
      ver:
        type: string
        description: API version
      ts:
        type: string
        description: >-
          response timestamp dd-MM-yyyy HH:mm:ss (timezone defaulted to
          +5.30)
      action:
        type: string
        description: api action like GET/POST/PUT/DELETE in case of http calls
      did:
        type: string
        description: device UUID from which API is called
      key:
        type: string
        description: API key (dynamic)
      msgId:
        type: string
        description: 'unique request message id, UUID, for handling API idempotency'
      requesterId:
        type: string
        description: UserId of the user calling
      authToken:
        type: string
        description: //session/jwt/saml token/oauth token
      userInfo:
        $ref: '#/definitions/UserInfo'

    required:
      - apiId
      - ver
      - ts
      
  ResponseInfo:
    type: object
    properties:
      apiId:
        type: string
        description: unique API ID
      ver:
        type: string
        description: API version
      ts:
        type: string
        description: >-
          response timestamp dd-MM-yyyy HH:mm:ss (timezone defaulted to
          +5.30)
      resMsgId:
        type: string
        description: unique response message id (UUID)
      msgId:
        type: string
        description: message id of the request
      status:
        type: string
        description: 'status of request e.g. successful, failed etc'
    required:
      - apiId
      - ver
      - ts
      - status
      
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      description:
        type: string
      filelds:
        type: object
    required:
      - code
      - message
      
  ErrorRes:
    properties:
      ResposneInfo:
        $ref: '#/definitions/ResponseInfo'
      Error:
        $ref: '#/definitions/Error'
    type: object
