---
ReportDefinitions:
- reportName: OutstandingRegister
  summary: Outstanding Register Report
  version: 1.0.0
  moduleName: wcms
  sourceColumns:
  - name: boundaryname
    label: reports.wcms.wardno
    type: string
    source: wcms
  - name: hscno
    label: reports.wcms.consumerno
    type: number
    source: wcms
  - name: consumerName
    label: reports.wcms.consumername
    type: number
    source: wcms
  - name: pipesize
    label: reports.wcms.pipesize
    type: number
    source: wcms
  - name: usage
    label: reports.wcms.usage
    type: number
    source: wcms
  - name: WT_BAL
    label: reports.wcms.outstanding
    type: number
    source: seva
  searchParams:
  - name: fromDate
    label: reports.wcms.fromdate
    type: string
    source: wcms
    isMandatory: false
  - name: toDate
    label: reports.wcms.todate
    type: string
    source: wcms
    isMandatory: false
  query: select * from ((select boundary.name as boundaryname,prop.hscno as hscno,prop.username as consumerName,prop.pipesize as pipesize,ut.data::jsonb->>'name'  as usage,
         'CURRENT' as STATE,SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
         from egwtr_connection_view prop, eg_boundary boundary ,egpt_mstr_usage  ut,egbs_demand demand, egbs_demanddetail dd where prop.wardid=boundary.id and 
         NULLIF(prop.usagetype, '')::int  = ut.id
         and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid group by hscno,state,pipesize,consumerName, usage,boundaryname  )
         UNION
         (select boundary.name as boundaryname,prop.hscno as hscno,prop.username as consumerName,
         prop.pipesize as pipesize,ut.data::jsonb->>'name'  as usage,
         'ARREAR' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
         from egwtr_connection_view prop, eg_boundary boundary,egpt_mstr_usage  ut ,egbs_demand demand, egbs_demanddetail dd where
         prop.wardid=boundary.id  
         and  NULLIF(prop.usagetype, '')::int  = ut.id 
         and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE
          fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid
         group by hscno,state,pipesize,consumerName, usage,boundaryname) )result order by hscno asc;

- reportName: DemandRegister
  summary: Demand Register Report
  version: 1.0.0
  moduleName: wcms
  sourceColumns:
  - name: consumerno
    label: reports.wcms.consumerno
    type: string
    source: wcms
  - name: consumername
    label: reports.wcms.consumername
    type: number
    source: wcms
  - name: billnumber
    label: reports.wcms.billnumber
    type: number
    source: wcms
  - name: arrear
    label: reports.wcms.arrear
    type: number
    source: wcms
  - name: current
    label: reports.wcms.current
    type: number
    source: wcms
  - name: advance
    label: reports.wcms.advance
    type: number
    source: seva
  - name: total
    label: reports.wcms.total
    type: number
    source: seva   
  searchParams:
  - name: fromDate
    label: reports.wcms.fromdate
    type: string
    source: seva
    isMandatory: false
  - name: toDate
    label: reports.wcms.todate
    type: string
    source: seva
    isMandatory: false
  query: select  boundary.name as boundaryName, dcbinfo.hscno as consumerno,dcbinfo.username as consumerName,
         dcbinfo.pipesize as pipesize,null as usage, billdet.billno as BillNumber,(dcbinfo.curr_balance) as  Current,
         dcbinfo.arr_demand as Arrear,dcbinfo.advance_coll as Advance from egwtr_connection_view dcbinfo,eg_boundary boundary,egbs_billdetail billdet where  dcbinfo.wardid=boundary.id and 
         billdet.consumercode=dcbinfo.hscno and dcbinfo.connectionstatus = 'ACTIVE' order by boundary.name;
  
- reportName: DCBReport
  summary: DCB Report
  version: 1.0.0 
  moduleName: wcms
  sourceColumns:
  - name: zoneid
    label: reports.wcms.zoneid
    type: number
    source: wcms
    showColumn: false
  - name: boundaryname
    label: reports.wcms.boundaryname
    type: string
    source: wcms
  - name: countofconsumerno
    label: reports.wcms.consumercount
    type: number
    source: wcms
  - name: WT_DEMAND
    label: reports.wcms.arreardemand
    type: number
    source: wcms
  - name: total_demand
    label: reports.wcms.totaldemand
    type: number
    source: wcms
  - name: WT_COLL
    label: reports.wcms.arrearcollection
    type: number
    source: wcms  
  - name: WT_BAL
    label: reports.wcms.arrearbalance
    type: number
    source: wcms  
  - name: total_balance
    label: reports.wcms.totalbalance
    type: number
    source: wcms   
  searchParams:
  - name: zoneid
    label: reports.wcms.zoneid
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=default&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
  - name: wardid
    label: reports.wcms.ward
    type: singlevaluelist
    source: wcms
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=WARD&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name
    isMandatory: false
  - name: connectiontype
    label: reports.wcms.connectiontype
    type: singlevaluelist
    pattern: 'list://METERED:METERED,NONMETERED:NON-METERED'
    source: wcms
    isMandatory: false  
  query: select * from ((select boundary.name as boundaryname,count(prop.hscno) as countofconsumerno,prop.username as consumerName,
         prop.pipesize as pipesize,ut.data::jsonb->>'name'  as usage,'CURRENT' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
         from egwtr_connection_view prop, eg_boundary boundary ,egpt_mstr_usage  ut,egbs_demand demand, egbs_demanddetail dd where prop.wardid=boundary.id and 
         NULLIF(prop.usagetype, '')::int  = ut.id
         and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid group by hscno,state,pipesize,consumerName, usage ,boundaryname )
         UNION
         (select boundary.name as boundaryname,count(prop.hscno) as countofconsumerno,prop.username as consumerName,
         prop.pipesize as pipesize,ut.data::jsonb->>'name'  as usage,
         'ARREAR' as STATE,SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_COLL,
	 SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
         from egwtr_connection_view prop, eg_boundary boundary,egpt_mstr_usage  ut ,egbs_demand demand, egbs_demanddetail dd where
         prop.wardid=boundary.id  
         and  NULLIF(prop.usagetype, '')::int  = ut.id and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL' ) and prop.tenantid=$tenantid 
         group by hscno,state,pipesize,consumerName, usage,boundaryname))result ;
  
