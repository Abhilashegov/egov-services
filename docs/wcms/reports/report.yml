---
ReportDefinitions:
  # Connection Status Report
- reportName: ConnectionStatusReport
  summary: Connection Status Report
  version: 1.0.0
  moduleName: wcms
  sourceColumns:
  - name: ward
    label: reports.wcms.ward
    type: string
    source: wcms
  - name: connectionNumber
    label: reports.wcms.consumerno
    type: string
    source: wcms
  - name: consumerName 
    label: reports.wcms.consumername
    type: string
    source: wcms
  - name: size
    label: reports.wcms.size
    type: number
    source: wcms
  - name: usage
    label: reports.wcms.usage
    type: string
    source: wcms
  - name: connectionStatus
    label: reports.wcms.connectionstatus
    type: string
    source: wcms
  searchParams:
  - name: zone
    label: reports.wcms.zone
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..code|$..name
    source: wcms
    isMandatory: false
    searchClause: and bndry.id=$zone
  - name: ward
    label: reports.wcms.ward
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=WARD&hierarchyTypeName=REVENUE&pageSize=500|$..code|$..name
    source: wcms
    isMandatory: true
  - name: usage
    label: reports.wcms.usage
    type: singlevaluelist
    pattern: http://localhost:8080/wcms/masters/usagetypes/_search?tenantId=$tenantid&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
    searchClause: and wtrview.usagetype =cast($usage to string)
  - name: subUsage
    label: reports.wcms.subUsage
    type: singlevaluelist
    pattern: http://localhost:8080/wcms/masters/usagetypes/_search?tenantId=$tenantid&isSubUsageType=true&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
  - name: connectionType
    label: reports.wcms.connectiontype
    type: string
    pattern: 'list://METERED:METERED,NONMETERED:NON-METERED'
    source: wcms
    isMandatory: false
    searchClause: and wtrview.billingtype = $connectionType
  - name: consumerNumber
    label: reports.wcms.consumerno
    type: string
    source: wcms
    isMandatory: false
    searchClause: and  wtrview.hscno = $consumerNumber
  - name: fromDate
    label: reports.wcms.fromdate
    type: epoch
    source: wcms
    isMandatory: true
  - name: toDate 
    label: reports.wcms.todate
    type: epoch
    source: wcms
    isMandatory: true
  query: select  bndry.name as ward,
       usgtyp.name as usage ,
       wtrview.hscno as connectionnumber,
       wtrview.username as consumerName,
       wtrview.pipesize as size,
       wtrview.connectionstatus as connectionstatus
       from egwtr_connection_view  wtrview, eg_boundary bndry, egwtr_usage_type usgtyp
       where  bndry.id = wtrview.wardid
        and bndry.id = $ward 
        and wtrview.tenantid = $tenantid
        and usgtyp.tenantid= wtrview.tenantid
        and bndry.tenantid = usgtyp.tenantid
        and usgtyp.id= cast(wtrview.usagetype as int)
        and bndry.tenantid = wtrview.tenantid
        and  wtrview.executiondate >= $fromdate
        and wtrview.executiondate  <= $todate
        and bndry.id = wtrview.zoneid
        order by wtrview.hscno asc;

  # OutstandingRegister
- reportName: OutstandingRegister
  summary: Outstanding Register Report
  version: 1.0.0
  moduleName: wcms
  sourceColumns:
  - name: boundaryname
    label: reports.wcms.wardno
    type: string
    source: wcms
  - name: hscno
    label: reports.wcms.consumerno
    type: number
    source: wcms
  - name: consumerName
    label: reports.wcms.consumername
    type: number
    source: wcms
  - name: pipesize
    label: reports.wcms.pipesize
    type: number
    source: wcms
  - name: usage
    label: reports.wcms.usage
    type: number
    source: wcms
  - name: STATE
    label: reports.wcms.state
    type: number
    source: wcms 
  - name: WT_BAL
    label: reports.wcms.outstanding
    type: number
    source: wcms
    total: true
  searchParams:
  - name: fromDate
    label: reports.wcms.fromdate
    type: epoch
    source: wcms
    isMandatory: false
  - name: toDate
    label: reports.wcms.todate
    type: epoch
    source: wcms
    isMandatory: false
  query: select * from ((select boundary.name as boundaryname,prop.hscno as hscno,prop.username as consumerName,prop.pipesize as pipesize,
        prop.usagetype  as usage,
        'CURRENT' as STATE,SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
        from egwtr_connection_view prop, eg_boundary boundary ,
        egbs_demand demand, egbs_demanddetail dd where prop.wardid=boundary.id and 
         demand.consumercode=prop.hscno 
         and demand.id=dd.demandid  and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid 
         and periodcycle='ANNUAL') 
          and prop.tenantid=$tenantid group by hscno,state,pipesize,usage,consumerName, boundaryname)
         UNION
         (select boundary.name as boundaryname,prop.hscno as hscno,prop.username as consumerName,
         prop.pipesize as pipesize,
         prop.usagetype  as usage,
         'ARREAR' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
         from egwtr_connection_view prop, eg_boundary boundary,
         egbs_demand demand, egbs_demanddetail dd where
         prop.wardid=boundary.id  and dd.taxheadcode = 'WATERCHARGE'
          and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE
          fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') 
         and prop.tenantid=$tenantid
         group by hscno,state,pipesize,consumerName,boundaryname,usage) )result order by hscno asc;
  # DCBReport
- reportName: DCBReport
  summary: DCB Report
  version: 1.0.0 
  moduleName: wcms
  sourceColumns:
  - name: zonename
    label: reports.wcms.zoneid
    type: string
    source: wcms
    linkedReport:
      reportName: DCBReportDrillDown
      linkedColumn: _parent?reportName={reportName}&zoneid={zonename}
  - name: countofconsumerno
    label: reports.wcms.consumercount
    type: number
    source: wcms
  - name: WT_ARREARS_DEMAND
    label: reports.wcms.arreardemand
    type: number
    source: wcms
    total: true
  - name: WT_CURRENT_DEMAND
    label: reports.wcms.currentdemand
    type: number
    source: wcms
    total: true 
  - name: WT_TOTAL_DEMAND
    label: reports.wcms.totaldemand
    type: number
    source: wcms
    total: true
  - name: WT_ARREARS_COLLECTION
    label: reports.wcms.arrearcollection
    type: number
    source: wcms
    total: true
  - name: WT_CURRENT_COLLECTION
    label: reports.wcms.currentcollection
    type: number
    source: wcms
    total: true  
  - name: WT_TOTAL_COLLECTION
    label: reports.wcms.totalcollection
    type: number
    source: wcms
    total: true 
  - name: WT_ARREARS_BALANCE
    label: reports.wcms.arrearbalance
    type: number
    source: wcms
    total: true
  - name: WT_CURRENT_BALANCE
    label: reports.wcms.currentbalance
    type: number
    source: wcms
    total: true  
  - name: WT_TOTAL_BALANCE
    label: reports.wcms.totalbalance
    type: number
    source: wcms
    total: true   

  searchParams:
  - name: zoneid
    label: reports.wcms.zoneid
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
    searchClause: and prop.zoneid = $zoneid
  - name: connectiontype
    label: reports.wcms.connectiontype
    type: singlevaluelist
    pattern: 'list://METERED:METERED,NONMETERED:NON-METERED'
    source: wcms
    isMandatory: false  
    searchClause: and prop.billingtype = $connectiontype
  query: select zonename,countofconsumerno,WT_ARREARS_DEMAND,WT_CURRENT_DEMAND,WT_TOTAL_DEMAND,WT_ARREARS_COLLECTION,WT_CURRENT_COLLECTION,WT_TOTAL_COLLECTION,WT_ARREARS_BALANCE,WT_CURRENT_BALANCE,WT_TOTAL_BALANCE
         from  (select boundary.name as zonename, 
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_CURRENT_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_CURRENT_COLLECTION,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_CURRENT_BALANCE
         from egwtr_connection_view prop 
         join eg_boundary boundary on boundary.boundarytype in (select id from eg_boundary_type where name = 'Zone' and tenantid=$tenantid) 
         join egwtr_usage_type  ut on NULLIF(prop.usagetype, '')::int  = ut.id
         join egbs_demand demand on  demand.consumercode=prop.hscno 
         join egbs_demanddetail dd on demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL')             
         where prop.wardid=boundary.id and prop.tenantid=$tenantid
         FULLJOIN 
         (select boundary.name as zonename, 
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_ARREARS_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_ARREARS_COLLECTION,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_ARREARS_BALANCE
         from egwtr_connection_view prop 
         join eg_boundary boundary on boundary.boundarytype in (select id from eg_boundary_type where name = 'Zone' and tenantid=$tenantid) 
         join egwtr_usage_type  ut on NULLIF(prop.usagetype, '')::int  = ut.id
         join egbs_demand demand on  demand.consumercode=prop.hscno 
         join egbs_demanddetail dd on demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL')             
         where prop.wardid=boundary.id and prop.tenantid=$tenantid
         FULLJOIN
         (select boundary.name as zonename,count(distinct prop.hscno)    
         as countofconsumerno ,  
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_TOTAL_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_TOTAL_COLLECTION,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_TOTAL_BALANCE
         from egwtr_connection_view prop 
         join eg_boundary boundary on boundary.boundarytype in (select id from eg_boundary_type where name = 'Zone' and tenantid=$tenantid) 
         join egwtr_usage_type  ut on NULLIF(prop.usagetype, '')::int  = ut.id
         join egbs_demand demand on  demand.consumercode=prop.hscno 
         join egbs_demanddetail dd on demand.id=dd.demandid and demand.taxperiodfrom <= (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL')             
         where prop.wardid=boundary.id and prop.tenantid=$tenantid
 
  groupBy: group by zonename) $result using (zonename)
  
  # ConsumerReport
- reportName: ConsumerReport
  summary: Consumer Register Report
  version: 1.0.0
  moduleName: wcms
  sourceColumns:
  - name: boundaryname
    label: reports.wcms.wardno
    type: string
    source: wcms
  - name: hscno
    label: reports.wcms.consumerno
    type: number
    source: wcms
  - name: oldhscno
    label: reports.wcms.oldhscno
    type: number
    source: wcms  
  - name: consumerName
    label: reports.wcms.consumername
    type: number
    source: wcms
  - name: connectionAddress
    label: reports.wcms.connectionAddress
    type: number
    source: wcms
  - name: connectiontype
    label: reports.wcms.connectiontype
    type: number
    source: wcms
  - name: usage
    label: reports.wcms.usage
    type: number
    source: wcms  
  - name: connectionstatus
    label: reports.wcms.connectionstatus
    type: number
    source: wcms
  - name: waterSourceType
    label: reports.wcms.waterSourceType
    type: number
    source: wcms    
  - name: pipesize
    label: reports.wcms.pipesize
    type: number
    source: wcms 
  - name: WT_ARREAR_DEMAND
    label: reports.wcms.arreardemand
    type: number
    source: wcms
    total: true
  - name: WT_CURRENT_DEMAND
    label: reports.wcms.currentdemand
    type: number
    source: wcms
    total: true
  - name: WT_TOTAL_DEMAND
    label: reports.wcms.totaldemand
    type: number
    source: wcms
    total: true
  searchParams:
  - name: fromDate
    label: reports.wcms.fromdate
    type: epoch
    source: wcms
    isMandatory: false
  - name: toDate
    label: reports.wcms.todate
    type: epoch
    source: wcms
    isMandatory: false 
  query: select * from (select boundary.name as boundaryname,prop.hscno as hscno, prop.oldhscno as oldhscno, prop.username as consumerName,prop.pipesize as   pipesize,
         ut.name  as usage,prop.address as connectionAddress,
         prop.connectiontype as connectiontype, prop.watersource as waterSourceType,
         prop.connectionstatus as connectionstatus,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_CURRENT_DEMAND         
         from egwtr_connection_view prop, eg_boundary boundary ,egwtr_usage_type  ut,egbs_demand demand, egbs_demanddetail dd where    prop.wardid=boundary.id and 
         NULLIF(prop.usagetype, '')::int  = ut.id
         and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid          
         FULLJOIN 
         (select boundary.name as boundaryname,prop.hscno as hscno, prop.oldhscno as oldhscno, prop.username as consumerName,prop.pipesize as   pipesize,
         ut.name  as usage,prop.address as connectionAddress,
         prop.connectiontype as connectiontype, prop.watersource as waterSourceType,
         prop.connectionstatus as connectionstatus,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_ARREAR_DEMAND         
         from egwtr_connection_view prop, eg_boundary boundary ,egwtr_usage_type  ut,egbs_demand demand, egbs_demanddetail dd where prop.wardid=boundary.id and 
         NULLIF(prop.usagetype, '')::int  = ut.id
         and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid
         FULLJOIN
         (select boundary.name as boundaryname,prop.hscno as hscno, prop.oldhscno as oldhscno, prop.username as consumerName,prop.pipesize as   pipesize,
         ut.name  as usage,prop.address as connectionAddress,
         prop.connectiontype as connectiontype, prop.watersource as waterSourceType,
         prop.connectionstatus as connectionstatus,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_TOTAL_DEMAND         
         from egwtr_connection_view prop, eg_boundary boundary ,egwtr_usage_type  ut,egbs_demand demand, egbs_demanddetail dd where prop.wardid=boundary.id and 
         NULLIF(prop.usagetype, '')::int  = ut.id
         and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom <= (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid
  
  groupBy: group by boundaryname,hscno,oldhscno,consumerName,connectionAddress,connectiontype,usage,connectionstatus,waterSourceType,pipesize) $result using (boundaryname,hscno,oldhscno,consumerName,connectionAddress,connectiontype,usage,connectionstatus,waterSourceType,pipesize)
  
  # DemandRegister
- reportName: DemandRegister
  summary: Demand Register Report
  version: 1.0.0
  moduleName: wcms
  sourceColumns:
  - name: hscno
    label: reports.wcms.consumerno
    type: number
    source: wcms
  - name: consumerName
    label: reports.wcms.consumername
    type: number
    source: wcms
  - name: STATE
    label: reports.wcms.state
    type: number
    source: wcms
  - name: WT_DEMAND
    label: reports.wcms.demand
    type: number
    source: wcms
    total: true
  - name: WT_COLL
    label: reports.wcms.coll
    type: number
    source: wcms
    total: true
  - name: WT_BAL
    label: reports.wcms.Balance
    type: number
    source: wcms
    total: true
  searchParams:
  - name: wardid
    label: reports.wcms.ward
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=WARD&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
    searchClause: and prop.wardid = $wardid
  - name: zoneid
    label: reports.wcms.zoneid
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
    searchClause: and prop.zoneid = $zoneid
  - name: consumerNumber
    label: reports.wcms.consumerno
    type: string
    source: wcms
    isMandatory: false
    searchClause: and prop.hscno = $consumerNumber
  - name: fromDate
    label: reports.wcms.fromdate
    type: epoch
    source: wcms
    isMandatory: false
    searchClause: and prop.executiondate >= $fromDate	
  - name: toDate
    label: reports.wcms.todate
    type: epoch
    source: wcms
    isMandatory: false
    searchClause: and prop.executiondate <= $toDate 
  - name: usage
    label: reports.wcms.usage
    type: singlevaluelist
    pattern: http://localhost:8080/wcms/masters/usagetypes/_search?tenantId=$tenantid&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
    searchClause: and prop.usagetype =cast($usage to string)
  - name: subUsage
    label: reports.wcms.subUsage
    type: singlevaluelist
    pattern: http://localhost:8080/wcms/masters/usagetypes/_search?tenantId=$tenantid&isSubUsageType=true&pageSize=500|$..id|$..name
    source: wcms
    isMandatory: false
    searchClause: and prop.subusagetype =cast($subUsage to string)
  - name: connectionType
    label: reports.wcms.connectiontype
    type: string
    pattern: 'list://METERED:METERED,NONMETERED:NON-METERED'
    source: wcms
    isMandatory: false
    searchClause: and prop.billingtype = $connectionType	
  query: select * from ((select prop.hscno as hscno,prop.username as consumerName,
         'CURRENT' as STATE, SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
         from egwtr_connection_view prop, eg_boundary boundary ,egbs_demand demand,
         egbs_demanddetail dd where    prop.wardid=boundary.id 
         and  demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid 
         UNION
         (select prop.hscno as hscno,prop.username as consumerName,
         'ARREAR' as STATE, SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_BAL
         from egwtr_connection_view prop, eg_boundary boundary ,egbs_demand demand, egbs_demanddetail dd where    prop.wardid=boundary.id and 
         demand.consumercode=prop.hscno 
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL') and prop.tenantid=$tenantid 
         
  groupBy: group by hscno,state,consumerName )
  orderBy: )result order by hscno asc;
  	
  # DCBReportDrillDown
- reportName: DCBReportDrillDown
  summary: DCB Report by Zone
  version: 1.0.0 
  moduleName: wcms
  sourceColumns:
  - name: hscno
    label: reports.wcms.consumerno 
    type: string
    source: wcms
    linkedReport:
      reportName: DCBReportDetails
      linkedColumn: _url?/wc/addDemand/:hscno
  - name: WT_ARREARS_DEMAND
    label: reports.wcms.arreardemand
    type: number
    source: wcms
    total: true
  - name: WT_CURRENT_DEMAND
    label: reports.wcms.currentdemand
    type: number
    source: wcms
    total: true 
  - name: WT_TOTAL_DEMAND
    label: reports.wcms.totaldemand
    type: number
    source: wcms
    total: true
  - name: WT_ARREARS_COLLECTION
    label: reports.wcms.arrearcollection
    type: number
    source: wcms
    total: true
  - name: WT_CURRENT_COLLECTION
    label: reports.wcms.currentcollection
    type: number
    source: wcms
    total: true  
  - name: WT_TOTAL_COLLECTION
    label: reports.wcms.totalcollection
    type: number
    source: wcms
    total: true 
  - name: WT_ARREARS_BALANCE
    label: reports.wcms.arrearbalance
    type: number
    source: wcms
    total: true
  - name: WT_CURRENT_BALANCE
    label: reports.wcms.currentbalance
    type: number
    source: wcms
    total: true  
  - name: WT_TOTAL_BALANCE
    label: reports.wcms.totalbalance
    type: number
    source: wcms
    total: true   

  searchParams:
  - name: zoneid
    label: reports.wcms.zoneid
    type: string    
    source: wcms
    isMandatory: false     
  - name: connectiontype
    label: reports.wcms.connectiontype
    type: singlevaluelist
    pattern: 'list://METERED:METERED,NONMETERED:NON-METERED'
    source: wcms
    isMandatory: false  
    searchClause: and prop.billingtype = $connectiontype
  query: select hscno,WT_ARREARS_DEMAND,WT_CURRENT_DEMAND,WT_TOTAL_DEMAND,WT_ARREARS_COLLECTION,WT_CURRENT_COLLECTION,WT_TOTAL_COLLECTION,WT_ARREARS_BALANCE,WT_CURRENT_BALANCE,WT_TOTAL_BALANCE
         from  (select prop.hscno hscno, 
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_CURRENT_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_CURRENT_COLLECTION,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_CURRENT_BALANCE
         from egwtr_connection_view prop 
         join eg_boundary boundary on boundary.boundarytype in (select id from eg_boundary_type where name = 'Zone' and tenantid=$tenantid) 
         join egwtr_usage_type  ut on NULLIF(prop.usagetype, '')::int  = ut.id
         join egbs_demand demand on  demand.consumercode=prop.hscno 
         join egbs_demanddetail dd on demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL')             
         where prop.wardid=boundary.id and prop.tenantid=$tenantid and boundary.name = $zoneid
         FULLJOIN 
         (select prop.hscno hscno, 
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_ARREARS_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_ARREARS_COLLECTION,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_ARREARS_BALANCE
         from egwtr_connection_view prop 
         join eg_boundary boundary on boundary.boundarytype in (select id from eg_boundary_type where name = 'Zone' and tenantid=$tenantid) 
         join egwtr_usage_type  ut on NULLIF(prop.usagetype, '')::int  = ut.id
         join egbs_demand demand on  demand.consumercode=prop.hscno 
         join egbs_demanddetail dd on demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL')             
         where prop.wardid=boundary.id and prop.tenantid=$tenantid and boundary.name = $zoneid
         FULLJOIN
         (select prop.hscno hscno, 
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount) ELSE NULL END)) AS WT_TOTAL_DEMAND,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.collectionamount) ELSE NULL END)) AS WT_TOTAL_COLLECTION,
         SUM((CASE WHEN dd.taxheadcode = 'WATERCHARGE' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS WT_TOTAL_BALANCE
         from egwtr_connection_view prop 
         join eg_boundary boundary on boundary.boundarytype in (select id from eg_boundary_type where name = 'Zone' and tenantid=$tenantid) 
         join egwtr_usage_type  ut on NULLIF(prop.usagetype, '')::int  = ut.id
         join egbs_demand demand on  demand.consumercode=prop.hscno 
         join egbs_demanddetail dd on demand.id=dd.demandid and demand.taxperiodfrom <= (select fromdate from egbs_taxperiod WHERE
         fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='WC' 
         and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid and periodcycle='ANNUAL')             
         where prop.wardid=boundary.id and prop.tenantid=$tenantid and boundary.name = $zoneid 
 
  groupBy: group by hscno) $result using (hscno)

