# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  title: Asset API
  description: EGovAsset Management aims to improve the efficiency of the Asset Management operations in the ULB.This document covers.
   <h2><b>
   </br>1.Create New Asset Category.
   </br>2.Search for Asset Categories based on search parameter.
   </br>3.Create New Asset for a Asset Category. 
   </br>4.Search for Asset based on search parameter.
   </br>5.Revalution of existing asset.
   </br>6.Search for reevaluated asset.
   </br>7.Sale/Dispose of an existing asset.
   </br>8.Search for Sale/Disposed asset.
   </br>9.Get current value of an asset.
   </b></h2>
  contact:
    name:  Ghanshyam rawat
    email: ghanshyam.rawat@riflexions.com
  version: "1.0.0"

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /assets/_search:
    post:
      summary: Get list of Asset based on below parameter.
      description: >
        Provides a list of asset for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: id
          in: query
          description: Pass List of Unique Asset id then the API will returns list of asset. Maximum length of the input list is 100.
          required: false
          type: array
          items: 
            type: integer
          format: int64
          maxItems: 100
        - name: name
          in: query
          description: Name  of the asset.
          required: false
          type: string
          format: varchar
        - name: code
          in: query
          description: Unique Asset code.
          required: false
          type: string
          format: varchar
        - name: assetCategory
          in: query
          description: AssetCategory id.
          required: false
          type: integer
          format: int64
        - name: department
          in: query
          description: Department id of the user.
          required: false
          type: integer
          format: int64
        - name: locality
          in: query
          description: lacality of the asset.
          required: false
          type: integer
          format: int64
        - name: zone
          in: query
          description: zone of the asset.
          required: false
          type: integer
          format: int64
        - name: revenueWard
          in: query
          description: RevenueWard of the asset.
          required: false
          type: integer
          format: int64
        - name: block
          in: query
          description: block of the asset.
          required: false
          type: integer
          format: int64
        - name: street
          in: query
          description: street of the asset.
          required: false
          type: integer
          format: int64
        - name: electionWard
          in: query
          description: ElectionWard of the asset.
          required: false
          type: integer
          format: int64
        - name: doorNo
          in: query
          description: Door No of the asset.
          required: false
          type: string
        - name: status
          in: query
          description: Asset status description.
          required: false
          type: string
          format: varchar
      tags:
        - Asset
      responses:
        '200':
          description: Successful response, returns list of Asset.
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
        
  /assets/_create:
    post:
      summary: Create New Asset.
      description: The asset master is the database of all the assets owned by the ULB. Each asset belongs to a category. The attributes of the asset category are inherited by the assets within that category..
      parameters:
        - name: Asset
          in: body
          description: Details for the new Asset.
          required: true
          schema:
            $ref: '#/definitions/AssetRequest'
      tags:
        - Asset
      responses:
        '201':
          description: Asset created
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
  
  /assets/_update:
    post:
      summary: Update existing Asset.
      description: The asset master is the database of all the assets owned by the ULB. Each asset belongs to a category. The attributes of the asset category are inherited by the assets within that category. This API allow user to update the existing asset property.
      parameters:
      
        - name: Asset
          in: body
          description: Details for the new Asset.
          required: true
          schema:
            $ref: '#/definitions/AssetRequest'
      tags:
        - Asset
      responses:
        '201':
          description: Asset Updated Successfully
          schema:
            $ref: '#/definitions/AssetResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /assetCategories/_create:
    post:
      summary: Create AssetCategory
      description: To create a new Asset.
      parameters:
        - name: assetCategory
          in: body
          description: Details for the new Aset.
          required: true
          schema:
            $ref: '#/definitions/AssetCategoryRequest'
        - name: tenantId
          in: query
          description: Unique id for tenant.
          required: true
          type: string
          format: varchar
      tags:
        - AssetCategory
      responses:
        '201':
          description: Asset Category Created Successfully
          schema:
            $ref: '#/definitions/AssetCategoryResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
  
  /assetCategories/_search:
     post:
      summary: Get Asset Category List.
      description: >
        Provides a list of asset Category for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request information send into the body of the request service request details.
          required: true
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
       
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: id
          in: query
          description: Pass List of Unique AssetsCategory id then the API will returns list of AssetsCategory. Maximum length of the input list is 100.
          required: false
          type: array
          items: 
            type: integer
          format: int64
          maxItems: 100
        - name: code
          in: query
          description: Unique code of AssetCategory.
          required: false
          type: string
          format: varchar
        - name: name
          in: query
          description:  AssetCategory name.
          required: false
          type: string
          format: varchar
        - name: assetCategoryType
          in: query
          description: AssetCategory Type List[IMMOVABLE, LAND,MOVABLE].Based on input type api will return the asset category, if the list is null then api should return all type of asset category.
          required: false
          type: array
          items: 
            type: string
          maxItems: 3
      tags:
        - AssetCategory
      responses:
        '200':
          description: Returns list of Asset category.
          schema:
            $ref: '#/definitions/AssetCategoryResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /assets/revaluation/_search:
    post:
      summary: Get list of reevaluated Asset based on below parameter.
      description: >
        Provides a list of asset for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: id
          in: query
          description: Pass List of Unique Revaluation id then the API will returns list of Revaluated asset. Maximum length of the input list is 100.
          required: false
          type: array
          items: 
            type: integer
          format: int64
          maxItems: 100
        - name: assetId
          in: query
          description: Pass List of Unique Asset id then the API will returns list of Revaluated asset. Maximum length of the input list is 100.
          required: false
          type: array
          items: 
            type: integer
          format: int64
          maxItems: 100
        - name: fromDate
          in: query
          description: Get revaluted asset from Date of reevalueation. mandatory if todate is not null.
          required: false
          type: integer
          format: int64
        - name: toDate
          in: query
          description: Get revaluted asset from Date of reevalueation. mandatory if fromdate is not null.
          required: false
          type: integer
          format: int64
      tags:
        - Revaluation
      responses:
        '200':
          description: Successful response, returns list Revaluation Details of Revaluated Asset.
          schema:
            $ref: '#/definitions/RevaluationResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
        
  /assets/revaluation/_create:
    post:
      summary: Reevaluate the asset.
      description: Reevaluate the asset, after revaluation asset value will be change, it can be increase or decrease. Revaluation is applicable if the asset status is Capitalized.
      parameters:
        - name: Revaluation
          in: body
          description: Details of Revaluation.
          required: true
          schema:
            $ref: '#/definitions/RevaluationRequest'
      tags:
        - Revaluation
      responses:
        '201':
          description: Asset is Reevaluated successfully.
          schema:
            $ref: '#/definitions/RevaluationResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
  
  /assets/revaluation/_update:
    post:
      summary: Update existing Reevaluated Asset.
      description: Update existing Reevaluated Asset.
      parameters:
          
        - name: Revaluation
          in: body
          description: Details for update existing asset Revaluation.
          required: true
          schema:
            $ref: '#/definitions/RevaluationRequest'
      tags:
        - Revaluation
      responses:
        '201':
          description: Asset is Reevaluated.
          schema:
            $ref: '#/definitions/RevaluationResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
  
  /assets/dispose/_create:
    post:
      summary: Asset Sale/Disposal.
      description: |
       1. Prior to disposal of an asset, asset will be depreciated.
       2. On save and the amount should be calculated on a pro-rated basis (actual depreciation for the year).
       3. Assets in Capitalized status can only be sold or disposed. 
       4. Once an Asset disposal/sale is completed [Approved], system will mark the asset status as ‘Disposed’.
      parameters:
        - name: Disposal
          in: body
          description: Details of Disposal/Sale.
          required: true
          schema:
            $ref: '#/definitions/DisposalRequest'
      tags:
        - Disposal
      responses:
        '201':
          description: Asset is Dispose/sale.
          schema:
            $ref: '#/definitions/DisposalResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
  
  /assets/dispose/_search:
    post:
      summary: Get list of disposed details of Asset based on below parameter.
      description: >
        Provides a list of asset for given different input params.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: id
          in: query
          description: Pass List of Unique Revaluation id then the API will returns list of disposed asset. Maximum length of the input list is 100.
          required: false
          type: array
          items: 
            type: integer
          format: int64
          maxItems: 100
        - name: assetId
          in: query
          description: Pass List of Unique Asset id then the API will returns list of dispose asset. Maximum length of the input list is 100. if id list is not null then api ignore assetid.
          required: false
          type: array
          items: 
            type: integer
          format: int64
          maxItems: 100
        - name: fromDate
          in: query
          description: Get dispose/Sold asset from Date of disposal/sale. it is mandatory if todate is not null.
          required: false
          type: integer
          format: int64
        - name: toDate
          in: query
          description: Get dispose/Sold asset from Date of disposal/sale. it is mandatory if fromdate is not null.
          required: false
          type: integer
          format: int64
      tags:
        - Disposal
      responses:
        '200':
          description: Successful response, returns list Disposal/Sale Details of disposed/sold Asset.
          schema:
            $ref: '#/definitions/DisposalResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /assets/currentvalue/_search:
    post:
      summary: Get Current value of the asset.
      description: >
       provide asset id,that API will return asset current value.
      parameters:
        - name: requestInfo
          in: body
          description: Request header for the service request details.
          required: true
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: assetId
          in: query
          description: pass asset id in query param, the api will return current value of the asset.
          required: true
          type: integer
          format: int64
         
      tags:
        - AssetCurrentValue
      responses:
        '200':
          description: Successful response, Current value of the asset.
          schema:
            $ref: '#/definitions/AssetCurrentValueResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
        
  /assetstatuses/_search:
    # This is a HTTP operation
    post:
      # Describe this verb here. Note: you can use markdown 
      summary: Get the list of statuses for each object defined in the system for entire Asset module.
      description: |
        Get the status list for a particular object/entity in the HR module.
      # This is array of GET operation parameters:
      parameters:
        - name: requestInfo
          in: body
          description: Commmon request info for getting status.
          required: true
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: objectName
          in: query
          description: Name of the object/entity for which status is searched for.
          required: false
          type: string
          maxLength: 5
        - name: code
          in: query
          description: Name of the status code.
          required: false
          type: string
          maxLength: 20
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response.
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/AssetStatus'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags: 
       - Set Up      
  
definitions:
  Asset:
    description: Hold the asset specific information.
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
      id:
        description: Unique id for the asset.  This will be auto generated.
        type: integer
        format: int64
      name:
        type: string
        description: Name of the Asset.
      code:
        type: string
        description: Unique code for the asset.  This will be auto generated. The format for the asset code will be given by the client in case of auto generation of asset code.
      department:
        $ref: '#/definitions/Department'
      assetCategory:
        $ref: '#/definitions/AssetCategory'
      assetDetails:
        type: string
        description: Asset details.
      modeOfAcquisition:
        type: string
        description: enumeration .
        enum:
          - ACQUIRED
          - CONSTRUCTION
          - PURCHASE
          - TENDER
          - DONATION

      status:
        type: string
        description: asset status from assetstatus master for Object name "Asset Master".
      grossValue:
        type: integer
        format: double
        description: gross value of the asset, applicable only if the status is Capitalized 
      accumulatedDepreciation:
        type: integer
        format: double
        description: gross value of the asset, applicable only if the status is Capitalized 
      description:
        type: string
        description: description of asset
      dateOfCreation:
        type: string
        format: date
        description: Date of asset creation.
      locationDetails:
        $ref: '#/definitions/Location'
      remarks:
        type: string
        description: asset remarks.
      length:
        type: string
        description: Length of the Land and Shop assets.
      width:
        type: string
        description: Width of the Land and Shop assets.
      totalArea:
        type: string
        description: Total area of Land and Shop assets.
      version:
        type: string
        description: version of the assetcategory for which asset is created.
      assetReference:
        description: Parent asset id for an asset.
        type: integer
        format: int64
      enableYearWiseDepreciation:
        description: Enable the year wise Depreciation for an asset. if the value is true then refer the Depreciation rate from yearWiseDepreciationRate object else refer to depreciationRate of asset.
        type: boolean
      assetAttributes:
        type: array
        items:
         $ref: '#/definitions/Attributes'
      depreciationRate:
        type: integer
        format: double
        description: gross value of the asset, applicable only if the status is Capitalized
      yearWiseDepreciationRate:
        type: array
        description: Multiple rows can be specified for each  asset category, but there should not be an overlap in the rates for the same financial year.It is required if enableYearWiseDepreciation is true, if enableYearWiseDepreciation if false then refer Depreciation from depreciationRate of asset.
        items:
          $ref: '#/definitions/YearWiseDepreciation'
      
  Attributes:
    type: object
    description: Additional information of the asset.Hold the data for dynamic custom field in JSON format. There key and value will be LABEL NAME and USER INPUT DATA respactively.
    properties:
      key:
        type: string
        description: LABEL Name or Table name.
      type:
        type: string
        description: type of the field.
      value:
        type: object
        description: value of the field(if data type is text the value will be string, if data type is multivaluelist then value will be list, if datatype is table then value will be the key value pair where key is  column name and value is column value). 
        
  Department:
    type: object
    description: List of departments in the ULB
    properties:
      id:
        type: integer
        format: int64
        description: Unique identifier of the department
      name:
        type: string
        description: Name of the department.
      code:
        type: string
        description: Department code.
        
  AssetCategory:
    type: object
    description: Categories defined under asset category type are shown in the drop down.
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
      id:
        type: integer
        format: int64
        description: Unique identifier of Category
      name:
        type: string
        description: Name of the AssetCategory.
      code:
        type: string
        description: Unique code for the asset category.  This will be auto generated or specified by the user based on implementation specific requirement.
      assetCategoryType:      
        type: string
        description: enumartion.
        enum:
          - LAND
          - MOVABLE
          - IMMOVABLE
      parent:      
        type: integer
        format: int64
        description: Options will be the list of asset category in the master.
      depreciationMethod:
        type: string
        description: Depreciation Method id.
        enum:
          - Straight Line Method
          - Written down Value method
      isAssetAllow:
        type: boolean
        description: if value is true then we can add asset directly in this perticular category.
      assetAccount:
        type: integer
        format: int64
        description: Options are from the  chart of account master for the configured purpose id.
      accumulatedDepreciationAccount:
        type: integer
        format: int64
        description: Options are from the  chart of account master for the configured purpose id.
      revaluationReserveAccount:
        type: integer
        format: int64
        description: Options are from the  chart of account master for the configured purpose id.
      depreciationExpenseAccount:
        type: integer
        format: int64
        description: Options are from the  chart of account master for the configured purpose id.
      unitOfMeasurement:
        type: integer
        format: int64
        description: Options are from UOM.
      version:
        type: string
        description: version of the asset category.
      depreciationRate:
        type: string
        description: Depreciation rate for a asset category. That will always define as percentage
      assetFieldsDefination:
        type: array
        items:
          $ref: '#/definitions/AttributeDefination'
        description: Custom Fields.
    required:
      - assetCategoryType
      - name
      - revaluationReserveAccount
 
 # Year wise depreciation is applicable, if enable year wise Depreciation is true.
  YearWiseDepreciation:
    type: object
    properties:
    #depreciationRate will be float
      depreciationRate:
        type: integer
        format: double
        description: Rate of Depreciation for asset , It will be a float value.
      financialYear:      
        type: string
        description: Required if depreciation rate is specified,Options are the list of financial years.
      assetId:      
        type: integer
        format: int64
        description: id of the asset for which depreciation is required.
      usefulLifeInYears:      
        type: integer
        format: int64
        description: Calculated value based on the percentage.
        
  Location:
    description: Hold the asset location specific information.
    type: object
    properties:
      locality:
        type: integer
        format: int64
        description: Boundary location id.
      zone:
        type: integer
        format: int64
        description: Boundary zone id.
      revenueWard:      
        type: integer
        format: int64
        description: Boundary revenueward id.
      block:
        type: integer
        format: int64
        description: Boundary blick id.
      street:
        type: integer
        format: int64
        description: Boundary street id.
      electionWard:      
        type: integer
        format: int64
        description: Boundary election ward id.
      doorNo:
        type: string
        description: Boundary door number.
      pinCode:      
        type: integer
        format: int32
        description: pin code of the location.
  
  Revaluation:
    description: Hold the asset Revaluation information.
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
      id:
        description: Unique id for the Revaluation.  This will be auto generated.
        type: integer
        format: int64
      assetId:
        description: Unique id of asset.
        type: integer
        format: int64
      currentCapitalizedValue:
        type: integer
        format: double
        description: Current gross value of the asset.
      typeOfChange:      
        type: string
        description: Revaluation value amount INCREASED or DECREASED.
        enum:
          - INCREASED
          - DECREASED
      revaluationAmount:
        type: integer
        format: double
        description: The amount by which the value is increased/decreased.
      valueAfterRevaluation:
        type: integer
        format: double
        description: After revaluation value of the asset.  
      revaluationDate:
        type: integer
        format: int64
        description: Date of revaluation. ( past or current date).
      revaluatedBy:
        type: string
        description: Comments, if any.
      reasonForRevaluation:      
        type: string
        description: Remarks.
      voucherReference:
        type: string
        description: Voucher Number for the asset.
      fixedAssetsWrittenOffAccount:
        type: integer
        format: int64
        description: Options are based on account codes for the specified purpose id.
      function:
        type: integer
        format: int64
        description: Option based on the master.
      fund:
        type: integer
        format: int64
        description: Option based on the master-Defaulted to Capital Fund.
      scheme:
        type: integer
        format: int64
        description: Option based on the selected fund from the master.
      subScheme:
        type: integer
        format: int64
        description: Option based on the selected  scheme from master.
      comments:
        type: string
        description: Comments, if any.
      auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
      status:
        type: string
        description: asset status from assetstatus master for Object name "Revaluation".
    required:
      - tenantId
      - assetId
      - typeOfChange
      - revaluationAmount
      - function
      - fund
          
  Disposal:
    description: Asset sale /Disposal.
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
      id:
        description: Unique id for the Disposal/Sale.  This will be auto generated.
        type: integer
        format: int64
      assetId:
        description: Unique id of asset.
        type: integer
        format: int64
      buyerName:
        type: string
        description: Enter the disposal/Sale party Name.
      buyerAddress:
        type: string
        description: Enter the disposal/Sale party address.
      disposalReason:
        type: string
        description: Enter the disposal/Sale reason.
      disposalDate:
        type: integer
        format: int64
        description: Default the current date and do not allow the user to modify.
      panCardNumber:
        type: string
        description: Applicable If the value selected is sale.
      aadharCardNumber:
        type: string
        description: Applicable If the value selected is sale.
      assetcurrentvalue:
        type: integer
        format: double
        description: calculate the current value of the asset as gross value - accumulated depreciation +or- reevaulation value and allow the user to modify this value.
      saleValue:
        type: integer
        format: double
        description: Enter the sale value of the Asset.
      transactionType:      
        type: string
        description: Transaction type sale or Dispose.
        enum:
          - SALE
          - DISPOSAL
      profLossVoucherReference:
        type: integer
        format: int64
        description: profit and loss Voucher id for the asset .
      assetSaleAccount:
        type: integer
        format: int64
        description: Select the Asset Sale account code- populate it based on purpose code from financials detailed code master.
      status:
        type: string
        description: asset status from assetstatus master for Object name "Disposal".
      auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
          
  AttributeDefination:
    description: Hold the Asset dynamic fields details as list of json object.
    type: object
    properties:
      name:
        type: string
        description: name of the custom dynamic field (label name).
      type:
        type: string
        description: type of the custom field. Valid types are ('string'[text box],'text'[text area],'number'[text box allow numbers only],'datetime'[calender],'singlevaluelist'[drop down for single value selection],'multivaluelist'[drop down for multi value selection],'checkbox','radio','table')
      isActive:
        type: boolean
        description: .
      isMandatory:      
        type: boolean
        description: value will be true if field is mandatory otherwise false.
      values:
        type: string
        description: comma seprated values we can pass if field type is selected as('singlevaluelist','multivaluelist','checkbox','radio').
      localText:
        type: string
        description: .
      regExFormate:      
        type: string
        description: .
      url:      
        type: string
        description: configure if field type are ('singlevaluelist','multivaluelist') and @values is null.
      order:
        type: string
        description: order of the table column.
      columns:
         $ref: '#/definitions/AttributeDefination'
  
  AssetCurrentValue:
    description: Hold the Asset dynamic fields details as list of json object.
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
      assetId:
        description: Unique id of asset.
        type: integer
        format: int64
      assetcurrentvalue:
        type: integer
        format: double
        description: calculate the current value of the asset as gross value - accumulated depreciation +or- reevaulation value.
  
  AssetStatus:
    type: object
    properties:
      tenantId:
        type: string
        description: Unique id for ulb.
      objectName:
        type: string
        description: The Name of the object for which statuses are defined.
        minLength: 3
        maxLength: 50
      values:
        type: array
        items:
          $ref: '#/definitions/StatusValue'
        description: List of status for each object name.
      auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
      - objectName
      - values
  
  StatusValue:
    type: object
    properties:
      code:
        type: string
        description: The unique status code.
        minLength: 3
        maxLength: 20
      description:
        type: string
        description: The description of the status.
        minLength: 3
        maxLength: 250
   

  AssetRequest:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      Assets:
          $ref: '#/definitions/Asset'
    type: object      
 
  AssetResponse:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      Assets:
        type: array
        items:
          $ref: '#/definitions/Asset'
    type: object
    
    
  AssetCategoryRequest:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      AssetCategory:
          $ref: '#/definitions/AssetCategory'
    type: object 
  
  AssetCategoryResponse:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      AssetCategory:
        type: array
        items:
          $ref: '#/definitions/AssetCategory'
    type: object
    
  RevaluationRequest:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      Revaluation:
          $ref: '#/definitions/Revaluation'
    type: object      
 
  RevaluationResponse:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      Revaluations:
        type: array
        items:
          $ref: '#/definitions/Revaluation'
    type: object
    
  DisposalRequest:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      Disposal:
          $ref: '#/definitions/Disposal'
    type: object      
 
  DisposalResponse:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      Disposal:
        type: array
        items:
          $ref: '#/definitions/Disposal'
    type: object
    
  AssetCurrentValueResponse:
    properties:
      ResposneInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      AssetCurrentValue:
        type: array
        items:
          $ref: '#/definitions/AssetCurrentValue'
    type: object  
  
