---
ReportDefinitions:
- reportName: DemandRegister
  summary: Demand Register Report
  version: 1.0.0
  moduleName: property
  sourceColumns:
  - name: revenue
    label: reports.property.revenue
    type: number
    source: property
    showColumn: false
  - name: loc
    label: reports.property.loc
    type: number
    source: property
    showColumn: false
  - name: upicnumber
    label: reports.property.upicnumber
    type: number
    source: collection
  - name: propertyaddress
    label: reports.property.address
    type: number
    source: completed
  - name: STATE
    label: reports.property.state
    type: number
    source: completed
  - name: PT_TAX
    label: reports.property.pttax
    type: string
    source: collection
    total: true
  - name: LIB_CESS
    label: reports.property.libcess
    type: number
    source: seva
    total: true
  - name: EDU_CESS
    label: reports.property.educess
    type: number
    source: seva
    total: true
  - name: VACANT_TAX
    label: reports.property.vacanttax
    type: number
    source: seva
    total: true
  - name: EMP_GUA_CESS
    label: reports.property.empguacess
    type: number
    source: seva
    total: true
  - name: LATE_PENALTY
    label: reports.property.latepenalty
    type: number
    source: seva
    total: true
  - name: ADVANCE
    label: reports.property.advance
    type: number
    source: seva
    total: true
  - name: Total
    label: reports.property.Total
    type: number
    source: seva
    rowTotal: true
    total: true
  searchParams:
  - name: revenueboundary
    label: reports.property.revenueboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name 
    isMandatory: false
    searchClause: and loc.revenueboundary = $revenueboundary
  - name: locationboundary
    label: reports.property.locationboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=LOCALITY&hierarchyTypeName=LOCATION&pageSize=500|$..id|$..name
    isMandatory: false
    searchClause: and loc.locationboundary = $locationboundary
  query: select revenue,loc,
         CASE WHEN (revenue IS NULL) THEN COALESCE(revenue::character varying,'Total Revenue Wise')
              WHEN (loc IS NULL) THEN COALESCE(loc::character varying,'Total Ward Wise')
              WHEN (upicnumber IS NULL) THEN COALESCE(upicnumber,'Total Locality wise')
              ELSE upicnumber END AS upicnumber, 
         state,propertyaddress,sum(pt_tax) as PT_TAX,sum(lib_cess) as LIB_CESS,sum(edu_cess) AS EDU_CESS,sum(vacant_tax) AS VACANT_TAX,sum(emp_gua_cess) AS EMP_GUA_CESS,
         sum(tree_tax) AS TREE_TAX,sum(sewerage_tax) AS SEWERAGE_TAX,sum(late_penalty) AS LATE_PENALTY,sum(advance) AS ADVANCE
         from((select loc.revenueboundary as revenue,loc.locationboundary as loc,prop.upicnumber as upicnumber,concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         'CURRENT' as STATE,
          SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.taxamount ELSE NULL END)) AS TREE_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.taxamount ELSE NULL END)) AS SEWERAGE_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
          SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
          from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
          and prop.id=address.property and loc.property = prop.id 
          and demand.consumercode=prop.upicnumber
          and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and todate>=(select extract ('epoch' from (select * from now()))*1000) 
          and service = 'PT' and tenantid='default' and loc.revenueboundary is not null and loc.locationboundary is not null) 
          UNION 
          (select loc.revenueboundary as revenue,loc.locationboundary as loc,prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
          'ARREAR' as STATE,
           SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
           SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
           SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
           SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.taxamount ELSE NULL END)) AS TREE_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.taxamount ELSE NULL END)) AS SEWERAGE_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
           SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
           from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
           and prop.id=address.property and loc.property = prop.id 
           and demand.consumercode=prop.upicnumber
           and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and todate>=(select extract ('epoch' from (select * from now()))*1000) 
           and service = 'PT' and tenantid='default' and loc.revenueboundary is not null and loc.locationboundary is not null) 
  groupBy: group by revenue,loc,upicnumber,propertyaddress,state)      
  orderBy: ) aa group by rollup(aa.revenue,aa.loc,(aa.upicnumber,aa.state,aa.propertyaddress));
 
- reportName: CollectionRegister
  summary: Outstanding Register Report
  version: 1.0.0
  moduleName: property
  sourceColumns:
  - name: upicnumber
    label: reports.property.upicnumber
    type: number
    source: collection
  - name: propertyaddress
    label: reports.property.address
    type: number
    source: completed
  - name: STATE
    label: reports.property.state
    type: number
    source: completed
  - name: PT_COLL
    label: reports.property.pttax
    type: string
    source: collection
    total: true
  - name: LIB_CESS_COLL
    label: reports.property.libcess
    type: number
    source: seva
    total: true
  - name: EDU_CESS_COLL
    label: reports.property.educess
    type: number
    source: seva
    total: true
  - name: VACANT_TAX_COLL
    label: reports.property.vacanttax
    type: number
    source: seva
    total: true
  - name: EMP_GUA_CESS_COLL
    label: reports.property.empguacess
    type: number
    source: seva
    total: true
  - name: LATE_PENALTY_COLL
    label: reports.property.latepenalty
    type: number
    source: seva
    total: true
  - name: ADVANCE
    label: reports.property.advance
    type: number
    source: seva
    total: true
  - name: Total
    label: reports.property.Total
    type: number
    source: seva
    rowTotal: true
    total: true
  searchParams:
  - name: revenueboundary
    label: reports.property.revenueboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name 
    isMandatory: false
    searchClause: and loc.revenueboundary = $revenueboundary
  - name: locationboundary
    label: reports.property.locationboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=LOCALITY&hierarchyTypeName=LOCATION&pageSize=500|$..id|$..name
    isMandatory: false
    searchClause: and loc.locationboundary = $locationboundary
  query: select * from ((select prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         'CURRENT' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.collectionamount ELSE NULL END)) AS PT_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.collectionamount ELSE NULL END)) AS LIB_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.collectionamount ELSE NULL END)) AS EDU_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.collectionamount ELSE NULL END)) AS VACANT_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.collectionamount ELSE NULL END)) AS EMP_GUA_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.collectionamount ELSE NULL END)) AS TREE_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.collectionamount ELSE NULL END)) AS SEWERAGE_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.collectionamount ELSE NULL END)) AS LATE_PENALTY_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE,
         (select receiptnumber from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber order by receiptdate desc limit 1) as receiptnumber,
         (select (SELECT to_timestamp( TRUNC( CAST(receiptdate AS bigint  ) / 1000 ) )) from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber order by receiptdate desc limit 1) as receiptdate 
         from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id 
         and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service = 'PT' and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid) 
         UNION 
        (select prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
        'ARREAR' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.collectionamount ELSE NULL END)) AS PT_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.collectionamount ELSE NULL END)) AS LIB_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.collectionamount ELSE NULL END)) AS EDU_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.collectionamount ELSE NULL END)) AS VACANT_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.collectionamount ELSE NULL END)) AS EMP_GUA_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.collectionamount ELSE NULL END)) AS TREE_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.collectionamount ELSE NULL END)) AS SEWERAGE_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.collectionamount ELSE NULL END)) AS LATE_PENALTY_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE,
         (select receiptnumber from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber order by receiptdate desc limit 1) as receiptnumber,
         (select (SELECT to_timestamp( TRUNC( CAST(receiptdate AS bigint  ) / 1000 ) )) from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber order by receiptdate desc limit 1) as receiptdate 
         from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id 
         and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service = 'PT' and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid) 
  groupBy: group by upicnumber,propertyaddress,state) 
  orderBy: )result order by upicnumber asc,state asc;
  
- reportName: BalanceRegister
  summary: Balance Register Report
  version: 1.0.0
  moduleName: property
  sourceColumns:
  - name: upicnumber
    label: reports.property.upicnumber
    type: number
    source: collection
  - name: propertyaddress
    label: reports.property.address
    type: number
    source: completed
  - name: STATE
    label: reports.property.state
    type: number
    source: completed
  - name: PT_BAL
    label: reports.property.pttax
    type: string
    source: collection
    total: true
  - name: LIB_CESS_BAL
    label: reports.property.libcess
    type: number
    source: seva
    total: true
  - name: EDU_CESS_BAL
    label: reports.property.educess
    type: number
    source: seva
    total: true
  - name: VACANT_TAX_BAL
    label: reports.property.vacanttax
    type: number
    source: seva
    total: true
  - name: EMP_GUA_CESS_BAL
    label: reports.property.empguacess
    type: number
    source: seva
    total: true
  - name: LATE_PENALTY_BAL
    label: reports.property.latepenalty
    type: number
    source: seva
    total: true
  - name: ADVANCE
    label: reports.property.advance
    type: number
    source: seva
    total: true
  - name: receiptnumber
    label: reports.property.receiptnumber
    type: number
    source: seva
  - name: receiptdate
    label: reports.property.receiptdate
    type: number
    source: seva
  - name: Total
    label: reports.property.total
    type: number
    source: seva
    total: true
    rowTotal: true
  searchParams:
  - name: revenueboundary
    label: reports.property.revenueboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name 
    isMandatory: false
    searchClause: and loc.revenueboundary = $revenueboundary
  - name: locationboundary
    label: reports.property.locationboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=LOCALITY&hierarchyTypeName=LOCATION&pageSize=500|$..id|$..name
    isMandatory: false
    searchClause: and loc.locationboundary = $locationboundary
  query: select * from ((select prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         'CURRENT' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS PT_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LIB_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EDU_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS VACANT_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EMP_GUA_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS TREE_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS SEWERAGE_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LATE_PENALTY_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE,
         (select receiptnumber from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptnumber,
         (select (SELECT to_timestamp( TRUNC( CAST(receiptdate AS bigint  ) / 1000 ) )) from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptdate 
         from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id 
         and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service ='PT' and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid) 
         UNION 
         (select prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         'ARREAR' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS PT_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LIB_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EDU_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS VACANT_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EMP_GUA_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS TREE_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS SEWERAGE_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LATE_PENALTY_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE,
         (select receiptnumber from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptnumber,
         (select (SELECT to_timestamp( TRUNC( CAST(receiptdate AS bigint  ) / 1000 ) )) from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptdate 
         from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id 
         and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service = 'PT'and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid)
  groupBy: group by upicnumber,propertyaddress,state) 
  orderBy: )result order by upicnumber asc,state asc;
 
- reportName: DemandBalanceCollectionReport
  summary: Demand Balance Collection Report
  version: 1.0.0
  moduleName: property
  anyoneSearchParam: true
  searchGroup: revenueboundary || adminboundary &&
  sourceColumns:
  - name: upicnumber
    label: reports.property.upicnumber
    type: number
    source: collection
  - name: propertyaddress
    label: reports.property.address
    type: number
    source: completed
  - name: STATE
    label: reports.property.state
    type: number
    source: completed
  - name: PT_TAX
    label: reports.property.pttax
    type: string
    source: collection
    total: true
  - name: LIB_CESS
    label: reports.property.libcess
    type: number
    source: seva
    total: true
  - name: EDU_CESS
    label: reports.property.educess
    type: number
    source: seva
    total: true
  - name: VACANT_TAX
    label: reports.property.vacanttax
    type: number
    source: seva
    total: true
  - name: EMP_GUA_CESS
    label: reports.property.empguacess
    type: number
    source: seva
    total: true
  - name: LATE_PENALTY
    label: reports.property.latepenalty
    type: number
    source: seva
    total: true
  - name: PT_COLL
    label: reports.property.pttaxcoll
    type: string
    source: collection
    total: true
  - name: LIB_CESS_COLL
    label: reports.property.libcesscoll
    type: number
    source: seva
  - name: EDU_CESS_COLL
    label: reports.property.educesscoll
    type: number
    source: seva
  - name: VACANT_TAX_COLL
    label: reports.property.vacanttaxcoll
    type: number
    source: seva
    total: true
  - name: EMP_GUA_CESS_COLL
    label: reports.property.empguacesscoll
    type: number
    source: seva
    total: true
  - name: LATE_PENALTY_COLL
    label: reports.property.latepenaltycoll
    type: number
    source: seva
    total: true
  - name: PT_BAL
    label: reports.property.pttaxbal
    type: string
    source: collection
    total: true
  - name: LIB_CESS_BAL
    label: reports.property.libcessbal
    type: number
    source: seva
    total: true
  - name: EDU_CESS_BAL
    label: reports.property.educessbal
    type: number
    source: seva
    total: true
  - name: VACANT_TAX_BAL
    label: reports.property.vacanttaxbal
    type: number
    source: seva
    total: true
  - name: EMP_GUA_CESS_BAL
    label: reports.property.empguacessbal
    type: number
    source: seva
    total: true
  - name: LATE_PENALTY_BAL
    label: reports.property.latepenaltybal
    type: number
    source: seva
    total: true
  - name: ADVANCE
    label: reports.property.advance
    type: number
    source: seva
    total: true
  - name: receiptnumber
    label: reports.property.receiptnumber
    type: number
    source: seva
  - name: receiptdate
    label: reports.property.receiptdate
    type: number
    source: seva
  - name: Total
    label: reports.property.total
    type: number
    source: seva
    total: true
    rowTotal: true
  searchParams:
  - name: revenueboundary
    label: reports.property.revenueboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name 
    isMandatory: false
    searchClause: and loc.revenueboundary = $revenueboundary
  - name: locationboundary
    label: reports.property.locationboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=LOCALITY&hierarchyTypeName=LOCATION&pageSize=500|$..id|$..name
    isMandatory: false
    searchClause: and loc.locationboundary = $locationboundary
  query: select * from ((select prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         'CURRENT' as STATE,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.taxamount ELSE NULL END)) AS TREE_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.taxamount ELSE NULL END)) AS SEWERAGE_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.collectionamount ELSE NULL END)) AS PT_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.collectionamount ELSE NULL END)) AS LIB_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.collectionamount ELSE NULL END)) AS EDU_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.collectionamount ELSE NULL END)) AS VACANT_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.collectionamount ELSE NULL END)) AS EMP_GUA_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.collectionamount ELSE NULL END)) AS TREE_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.collectionamount ELSE NULL END)) AS SEWERAGE_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.collectionamount ELSE NULL END)) AS LATE_PENALTY_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS PT_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LIB_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EDU_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS VACANT_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EMP_GUA_CESS_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS TREE_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS SEWERAGE_TAX_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LATE_PENALTY_BAL,
         SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE,
         (select receiptnumber from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptnumber,
         (select (SELECT to_timestamp( TRUNC( CAST(receiptdate AS bigint  ) / 1000 ) )) from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptdate 
         from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id 
         and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service = 'PT' and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid) 
         UNION 
         (select prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         'ARREAR' as STATE,
          SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.taxamount ELSE NULL END)) AS TREE_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.taxamount ELSE NULL END)) AS SEWERAGE_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
          SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.collectionamount ELSE NULL END)) AS PT_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.collectionamount ELSE NULL END)) AS LIB_CESS_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.collectionamount ELSE NULL END)) AS EDU_CESS_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.collectionamount ELSE NULL END)) AS VACANT_TAX_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.collectionamount ELSE NULL END)) AS EMP_GUA_CESS_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.collectionamount ELSE NULL END)) AS TREE_TAX_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.collectionamount ELSE NULL END)) AS SEWERAGE_TAX_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.collectionamount ELSE NULL END)) AS LATE_PENALTY_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS PT_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LIB_CESS_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EDU_CESS_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS VACANT_TAX_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS EMP_GUA_CESS_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS TREE_TAX_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS SEWERAGE_TAX_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN (dd.taxamount-dd.collectionamount) ELSE NULL END)) AS LATE_PENALTY_BAL,
          SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE,
          (select receiptnumber from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptnumber,
          (select (SELECT to_timestamp( TRUNC( CAST(receiptdate AS bigint  ) / 1000 ) )) from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptdate 
          from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
          and prop.id=address.property and loc.property = prop.id 
          and demand.consumercode=prop.upicnumber
          and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service = 'PT' and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid)
  groupBy: group by upicnumber,propertyaddress,state) 
  orderBy: )result order by upicnumber asc,state asc limit 1000;
  
- reportName: AssessmentRegister
  summary:  Assessment Register Report
  version: 1.0.0
  moduleName: property
  sourceColumns:
  - name: upicnumber
    label: reports.property.upicnumber
    type: number
    source: collection
  - name: proptype
    label: reports.property.code
    type: number
    source: collection
  - name: propertyowner
    label: reports.property.propertyowner
    type: number
    source: collection
  - name: propertyaddress
    label: reports.property.address
    type: number
    source: completed
  - name: arv
    label: reports.property.arv
    type: number
    source: completed
  - name: PT_TAX
    label: reports.property.pttax
    type: string
    source: collection
    total: true
  - name: LIB_CESS
    label: reports.property.libcess
    type: number
    source: seva
    total: true
  - name: EDU_CESS
    label: reports.property.educess
    type: number
    source: seva
    total: true
  - name: VACANT_TAX
    label: reports.property.vacanttax
    type: number
    source: seva
    total: true
  - name: EMP_GUA_CESS
    label: reports.property.empguacess
    type: number
    source: seva
    total: true
  - name: LATE_PENALTY
    label: reports.property.latepenalty
    type: number
    source: seva
    total: true
  - name: ADVANCE
    label: reports.property.advance
    type: number
    source: seva
    total: true
  - name: receiptnumber
    label: reports.property.receiptnumber
    type: number
    source: seva
  - name: receiptdate
    label: reports.property.receiptdate
    type: number
    source: seva
  - name: Total
    label: reports.property.total
    type: number
    source: seva
  searchParams:
  - name: revenueboundary
    label: reports.property.revenueboundary
    type: singlevaluelist
    source: property
    pattern: http://egov-location:8080/egov-location/boundarys/boundariesByBndryTypeNameAndHierarchyTypeName?tenantId=$tenantid&boundaryTypeName=ZONE&hierarchyTypeName=REVENUE&pageSize=500|$..id|$..name 
    isMandatory: false
    searchClause: and loc.revenueboundary = $revenueboundary
  query: select prop.upicnumber as upicnumber, (ptype.data::jsonb->>'name') as proptype, u.name propertyowner, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         sum(unit.arv) as arv,
         SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.taxamount ELSE NULL END)) AS TREE_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.taxamount ELSE NULL END)) AS SEWERAGE_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
         (select receiptnumber from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptnumber,
         (select (SELECT to_timestamp( TRUNC( CAST(receiptdate AS bigint  ) / 1000 ) )) from egcl_receiptheader where businessdetails = 'PT' and consumercode = prop.upicnumber and tenantid=$tenantid order by receiptdate desc limit 1) as receiptdate 
         from egpt_property prop, egpt_propertydetails pd, egpt_mstr_propertytype ptype, egpt_address address, egpt_property_owner owner, eg_user u, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc, egpt_unit unit, egpt_floors flr where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id and prop.id=owner.property and owner.owner=u.id and pd.propertytype=ptype.code 
         and unit.floor=flr.id and flr.propertydetails=pd.id
         and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and service = 'PT' and todate>=(select extract ('epoch' from (select * from now()))*1000) and tenantid=$tenantid) 
  groupBy: group by upicnumber, proptype, u.name , propertyaddress, receiptnumber, receiptdate; 
  
select coalesce(revenue :: character varying,'Total Revenue Wise'),coalesce(loc :: character varying,'Total Ward Wise') as Ward,
CASE WHEN ((loc :: character varying != 'Total Ward Wise')) then coalesce(upicnumber,'Total Locality Wise') ELSE NULL::character varying END as upicnumber,
state,propertyaddress,sum(spt_tax),sum(slib_cess),sum(sedu_cess),sum(svacant_tax),sum(semp_gua_cess),sum(stree_tax),sum(ssewerage_tax),sum(slate_penalty),sum(sadvance) 
from (select revenue,loc,upicnumber,propertyaddress,state,SUM(pt_tax) spt_tax,SUM(lib_cess) slib_cess,SUM(edu_cess) sedu_cess,SUM(vacant_tax) svacant_tax,SUM(emp_gua_cess) semp_gua_cess,SUM(tree_tax) stree_tax,SUM(sewerage_tax) ssewerage_tax,SUM(late_penalty) slate_penalty,SUM(advance) sadvance from 
((select loc.revenueboundary as revenue,loc.locationboundary as loc,prop.upicnumber as upicnumber,concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
         'CURRENT' as STATE,
          SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.taxamount ELSE NULL END)) AS TREE_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.taxamount ELSE NULL END)) AS SEWERAGE_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
          SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
          from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
          and prop.id=address.property and loc.property = prop.id 
          and demand.consumercode=prop.upicnumber
          and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and todate>=(select extract ('epoch' from (select * from now()))*1000) 
          and service = 'PT' and tenantid='default' and loc.revenueboundary is not null and loc.locationboundary is not null) group by revenue,loc,upicnumber,propertyaddress,state)  
          UNION 
          (select loc.revenueboundary as revenue,loc.locationboundary as loc,prop.upicnumber as upicnumber, concat(address.addressnumber,',',address.addressline1,',',address.addressline2,',',address.detail,',',address.city,'-',address.pincode) as propertyaddress, 
          'ARREAR' as STATE,
           SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
           SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
           SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
           SUM((CASE WHEN dd.taxheadcode = 'TREE_TAX' THEN dd.taxamount ELSE NULL END)) AS TREE_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'SEWERAGE_TAX' THEN dd.taxamount ELSE NULL END)) AS SEWERAGE_TAX,
           SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
           SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
           from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
           and prop.id=address.property and loc.property = prop.id 
           and demand.consumercode=prop.upicnumber
           and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and todate>=(select extract ('epoch' from (select * from now()))*1000) 
           and service = 'PT' and tenantid='default' and loc.revenueboundary is not null and loc.locationboundary is not null)group by revenue,loc,upicnumber,propertyaddress,state) )result 
           group by revenue,loc,upicnumber,state,propertyaddress order by upicnumber asc,state asc) aa
        group by rollup(revenue,loc,(aa.upicnumber,state,propertyaddress));
        
        
        SELECT count(*) OVER(),ROW_NUMBER() OVER (ORDER BY EGCL_RECEIPTHEADER.RECEIPTNUMBER) AS SERIALNUMBER, EGCL_RECEIPTHEADER.RECEIPTNUMBER AS RECEIPT_NUMBER, EG_DEPARTMENT.NAME AS DEPT_NAME, EGCL_RECEIPTHEADER.TOTALAMOUNT AS RECEIPT_AMOUNT, EGCL_RECEIPTHEADER.CONSUMERCODE AS CONSUMER_CODE,  EGCL_RECEIPTHEADER.RECEIPTTYPE AS RECEIPT_TYPE , EG_BUSINESSDETAILS.NAME AS SERVICE_NAME FROM EGCL_RECEIPTHEADER EGCL_RECEIPTHEADER  INNER JOIN EG_BUSINESSDETAILS EG_BUSINESSDETAILS ON EGCL_RECEIPTHEADER.BUSINESSDETAILS = EG_BUSINESSDETAILS.CODE INNER JOIN EGCL_RECEIPTINSTRUMENT EGCL_RECEIPTINSTRUMENT ON EGCL_RECEIPTHEADER.ID = EGCL_RECEIPTINSTRUMENT.RECEIPTHEADER INNER JOIN EGF_INSTRUMENT EGF_INSTRUMENT ON EGCL_RECEIPTINSTRUMENT.INSTRUMENTHEADER = EGF_INSTRUMENT.ID INNER JOIN EG_DEPARTMENT EG_DEPARTMENT ON  EGCL_RECEIPTHEADER.DEPARTMENT = EG_DEPARTMENT.CODE INNER JOIN EG_USER EGUSER ON EGUSER.ID = EGCL_RECEIPTHEADER.CREATEDBY WHERE   
EGF_INSTRUMENT.INSTRUMENTTYPEID = 'Cash' AND EGCL_RECEIPTHEADER.TENANTID ='default' AND egcl_receiptinstrument.tenantid='default' and EGF_INSTRUMENT.tenantid='default' and EG_BUSINESSDETAILS.tenantid='default' and EGUSER.tenantid='default' and EG_DEPARTMENT.tenantid='default'
OFFSET 100 limit 5;
  
  
 
