---
ReportDefinitions:
- reportName: DemandRegister
  summary: Demand Register Report
  version: 1.0.0
  moduleName: property
  sourceColumns:
  - name: upicnumber
    label: reports.property.upicnumber
    type: number
    source: collection
    showColumn: false
  - name: propertyaddress
    label: reports.property.address
    type: number
    source: completed
  - name: PT_TAX
    label: reports.property.pttax
    type: string
    source: collection
  - name: LIB_CESS
    label: reports.property.libcess
    type: number
    source: seva
  - name: EDU_CESS
    label: reports.property.educess
    type: number
    source: seva
  - name: VACANT_TAX
    label: reports.property.vacanttax
    type: number
    source: seva
  - name: EMP_GUA_CESS
    label: reports.property.empguacess
    type: number
    source: seva
  - name: LATE_PENALTY
    label: reports.property.latepenalty
    type: number
    source: seva
  - name: ADVANCE
    label: reports.property.advance
    type: number
    source: seva
  searchParams:
  - name: revenueboundary
    label: reports.property.revenueboundary
    type: singlevaluelist
    source: property
    pattern: 
    isMandatory: false
    searchClause: and loc.revenueboundary = $revenueboundary
  - name: locationboundary
    label: reports.property.locationboundary
    type: singlevaluelist
    source: property
    pattern:
    isMandatory: false
    searchClause: and loc.locationboundary = $locationboundary
  - name: adminboundary
    label: reports.property.adminboundary
    type: singlevaluelist
    pattern: 
    isMandatory: false
    searchClause: searchClause: And loc.adminboundary =?
    source: collection
  query: select * from ((select prop.upicnumber as upicnumber, address.addressnumber||', '||address.addressline1||', '||address.addressline2||' - '||address.pincode as propertyaddress,
         'CURRENT' as STATE, SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
         SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
         from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE fromdate<=
         (select extract ('epoch' from (select * from now()))*1000) and todate>=(select extract ('epoch' from (select * from now()))*1000)) 
         --and loc.revenueboundary =? And loc.locationboundary =? And loc.adminboundary =?
         UNION 
         (select prop.upicnumber as upicnumber, address.addressnumber||', '||address.addressline1||', '||address.addressline2||' - '||address.pincode as propertyaddress, 
         'ARREAR' as STATE,SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.taxamount ELSE NULL END)) AS PT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.taxamount ELSE NULL END)) AS LIB_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.taxamount ELSE NULL END)) AS EDU_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.taxamount ELSE NULL END)) AS VACANT_TAX,
          SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.taxamount ELSE NULL END)) AS EMP_GUA_CESS,
          SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.taxamount ELSE NULL END)) AS LATE_PENALTY,
          SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
          from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
          and prop.id=address.property and loc.property = prop.id and demand.consumercode=prop.upicnumber
          and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) and 
          todate>=(select extract ('epoch' from (select * from now()))*1000)) 
          --and loc.revenueboundary =? And loc.locationboundary =? And loc.adminboundary =? 
  groupBy: group by upicnumber,propertyaddress,state)        
  orderBy: )result order by upicnumber asc,state desc;
 
 - reportName: CollectionRegister
  summary: Collection Register Report
  version: 1.0.0
  moduleName: property
  sourceColumns:
  - name: upicnumber
    label: reports.property.upicnumber
    type: number
    source: collection
    showColumn: false
  - name: propertyaddress
    label: reports.property.address
    type: number
    source: completed
  - name: PT_TAX
    label: reports.property.pttax
    type: string
    source: collection
  - name: LIB_CESS
    label: reports.property.libcess
    type: number
    source: seva
  - name: EDU_CESS
    label: reports.property.educess
    type: number
    source: seva
  - name: VACANT_TAX
    label: reports.property.vacanttax
    type: number
    source: seva
  - name: EMP_GUA_CESS
    label: reports.property.empguacess
    type: number
    source: seva
  - name: LATE_PENALTY
    label: reports.property.latepenalty
    type: number
    source: seva
  - name: ADVANCE
    label: reports.property.advance
    type: number
    source: seva
  searchParams:
  - name: revenueboundary
    label: reports.property.revenueboundary
    type: singlevaluelist
    source: property
    pattern: 
    isMandatory: false
    searchClause: and loc.revenueboundary = $revenueboundary
  - name: locationboundary
    label: reports.property.locationboundary
    type: singlevaluelist
    source: property
    pattern:
    isMandatory: false
    searchClause: and loc.locationboundary = $locationboundary
  - name: adminboundary
    label: reports.property.adminboundary
    type: singlevaluelist
    pattern: 
    isMandatory: false
    searchClause: And loc.adminboundary =?
    source: property
  query: select * from ((select prop.upicnumber as upicnumber,address.addressnumber||', '||address.addressline1||', '||address.addressline2||' - '||address.pincode as propertyaddress, 
         'CURRENT' as STATE,SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.collectionamount ELSE NULL END)) AS PT_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.collectionamount ELSE NULL END)) AS LIB_CESS_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.collectionamount ELSE NULL END)) AS EDU_CESS_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.collectionamount ELSE NULL END)) AS VACANT_TAX_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.collectionamount ELSE NULL END)) AS EMP_GUA_CESS_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.collectionamount ELSE NULL END)) AS LATE_PENALTY_COLL,
          SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
          from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
          and prop.id=address.property and loc.property = prop.id and demand.consumercode=prop.upicnumber and demand.id=dd.demandid and demand.taxperiodfrom = (select fromdate from egbs_taxperiod WHERE 
          fromdate<=(select extract ('epoch' from (select * from now()))*1000) and todate>=(select extract ('epoch' from (select * from now()))*1000)) 
          --and loc.revenueboundary =? And loc.locationboundary =? And loc.adminboundary =?
          UNION 
         (select prop.upicnumber as upicnumber,address.addressnumber||', '||address.addressline1||', '||address.addressline2||' - '||address.pincode as propertyaddress, 
         'ARREAR' as STATE,SUM((CASE WHEN dd.taxheadcode = 'PT_TAX' THEN dd.collectionamount ELSE NULL END)) AS PT_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'LIB_CESS' THEN dd.collectionamount ELSE NULL END)) AS LIB_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EDU_CESS' THEN dd.collectionamount ELSE NULL END)) AS EDU_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'VACANT_TAX' THEN dd.collectionamount ELSE NULL END)) AS VACANT_TAX_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'EMP_GUA_CESS' THEN dd.collectionamount ELSE NULL END)) AS EMP_GUA_CESS_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'LATE_PENALTY' THEN dd.collectionamount ELSE NULL END)) AS LATE_PENALTY_COLL,
         SUM((CASE WHEN dd.taxheadcode = 'ADVANCE' THEN dd.collectionamount ELSE NULL END)) AS ADVANCE
         from egpt_property prop, egpt_propertydetails pd, egpt_address address, egbs_demand demand, egbs_demanddetail dd, egpt_propertylocation loc where prop.id=pd.property
         and prop.id=address.property and loc.property = prop.id and demand.consumercode=prop.upicnumber
         and demand.id=dd.demandid and demand.taxperiodfrom < (select fromdate from egbs_taxperiod WHERE fromdate<=(select extract ('epoch' from (select * from now()))*1000) 
         and todate>=(select extract ('epoch' from (select * from now()))*1000)) 
         --and loc.revenueboundary =? And loc.locationboundary =? And loc.adminboundary =?
  groupBy: group by upicnumber,propertyaddress,state) 
  orderBy: )result order by upicnumber asc,state desc;
 