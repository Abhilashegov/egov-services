---
ReportDefinitions:
- reportName: GrievanceByType
  summary: Report grouped by Grievance Type and status - based on a date period
  version: 1.0.0
  sourceColumns:
  - name: name
    label: reports.pgr.complainttype.name
    type: string
    source: egpgr_complainttype
  - name: registered
    label: reports.pgr.status.registered
    type: number
    source: seva
  - name: inprocess
    label: reports.pgr.status.inprocess
    type: number
    source: completed
  - name: completed
    label: reports.pgr.status.completed
    type: number
    source: reopened
  - name: rejected
    label: reports.pgr.status.reopened
    type: number
    source: seva
  - name: rejected
    label: reports.pgr.status.rejected
    type: number
    source: seva
  - name: withinsla
    label: reports.pgr.status.withinsla
    type: number
    source: seva
  - name: beyondsla
    label: reports.pgr.status.beyondsla
    type: number
    source: seva
  - name: issla
    label: reports.pgr.status.issla
    type: string
    source: seva
  searchParams:
  - name: fromDate
    label: reports.pgr.datefrom
    type: epoch
    source: seva
  - name: toDate
    label: reports.pgr.dateto
    type: epoch
    source: seva
  - name: complainttype
    label: reports.pgr.complainttype
    type: singlevaluelist
    pattern: http://pgr-master:8080/pgr-master/service/v1/_search?tenantId=default|$..serviceCode|$..serviceName
    source: seva
  query: SELECT ctype.name,count(CASE WHEN cs.status::text = 'REGISTERED'::text THEN
    1 ELSE NULL::integer END) AS registered,count(CASE WHEN cs.status::text = ANY
    (ARRAY['FORWARDED'::character varying::text, 'PROCESSING'::character varying::text,
    'NOTCOMPLETED'::character varying::text]) THEN 1 ELSE NULL::integer END) AS inprocess,count(CASE
    WHEN cs.status::text = ANY (ARRAY['COMPLETED'::character varying::text, 'WITHDRAWN'::character
    varying::text, 'CLOSED'::character varying::text]) THEN 1 ELSE NULL::integer END)
    AS completed,count(CASE WHEN cs.status::text = 'REOPENED'::text THEN 1 ELSE NULL::integer
    END) AS reopened, count(CASE WHEN cs.status::text = 'REJECTED'::text THEN 1 ELSE
    NULL::integer END) AS rejected, sum(CASE WHEN (cs.status::text = ANY (ARRAY['COMPLETED'::character
    varying::text, 'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text]))
    AND (cs.lastmodifieddate - cs.createddate) < ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 WHEN (cs.status::text <> ALL (ARRAY['COMPLETED'::character varying::text,
    'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text])) AND
    (now() - cs.createddate::timestamp with time zone) < ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 ELSE 0 END) AS withinsla, sum(CASE WHEN (cs.status::text = ANY
    (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (cs.lastmodifieddate - cs.createddate)
    > ('01:00:00'::interval * ctype.slahours::double precision) THEN 1 WHEN (cs.status::text
    <> ALL (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (now() - cs.createddate::timestamp
    with time zone) > ('01:00:00'::interval * ctype.slahours::double precision) THEN
    1 ELSE 0 END) AS beyondsla, CASE WHEN bool_or((cs.status::text = ANY (ARRAY['COMPLETED'::character
    varying::text, 'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text]))
    AND (cs.lastmodifieddate - cs.createddate) < ('01:00:00'::interval * ctype.slahours::double
    precision)) THEN 'Yes'::text WHEN bool_or((cs.status::text <> ALL (ARRAY['COMPLETED'::character
    varying::text, 'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text]))
    AND (now() - cs.createddate::timestamp with time zone) < ('01:00:00'::interval
    * ctype.slahours::double precision)) THEN 'Yes'::text ELSE 'No'::text END AS issla
    FROM submission cs, egpgr_complainttype ctype WHERE cs.servicecode = ctype.code
    and ctype.code = $complainttype and cs.createddate >= $fromDate and cs.createddate
    <= $toDate and cs.tenantid = $tenantid GROUP BY ctype.name;
- reportName: DrillDownByDepartment
  summary: Drill Down Report grouped by Department Name - based on a date period
  version: 1.0.0
  sourceColumns:
  - name: name
    label: reports.pgr.department.name
    type: string
    source: eg_department
  - name: registered
    label: reports.pgr.status.registered
    type: number
    source: seva
  - name: inprocess
    label: reports.pgr.status.inprocess
    type: number
    source: completed
  - name: completed
    label: reports.pgr.status.completed
    type: number
    source: reopened
  - name: rejected
    label: reports.pgr.status.reopened
    type: number
    source: seva
  - name: rejected
    label: reports.pgr.status.rejected
    type: number
    source: seva
  - name: withinsla
    label: reports.pgr.status.withinsla
    type: number
    source: seva
  - name: beyondsla
    label: reports.pgr.status.beyondsla
    type: number
    source: seva
  - name: issla
    label: reports.pgr.status.issla
    type: string
    source: seva
  searchParams:
  - name: fromDate
    label: reports.pgr.datefrom
    type: epoch
    source: seva
  - name: toDate
    label: reports.pgr.dateto
    type: epoch
    source: seva
  query: SELECT dept.name, count(CASE WHEN cs.status::text = 'REGISTERED'::text THEN
    1 ELSE NULL::integer END) AS registered, count(CASE WHEN cs.status::text = ANY
    (ARRAY['FORWARDED'::character varying::text, 'PROCESSING'::character varying::text,
    'NOTCOMPLETED'::character varying::text]) THEN 1 ELSE NULL::integer END) AS inprocess,
    count(CASE WHEN cs.status::text = ANY (ARRAY['COMPLETED'::character varying::text,
    'WITHDRAWN'::character varying::text, 'CLOSED'::character varying::text]) THEN
    1 ELSE NULL::integer END) AS completed, count(CASE WHEN cs.status::text = 'REOPENED'::text
    THEN 1 ELSE NULL::integer END) AS reopened, count(CASE WHEN cs.status::text =
    'REJECTED'::text THEN 1 ELSE NULL::integer END) AS rejected, sum(CASE WHEN (cs.status::text
    = ANY (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (cs.lastmodifieddate - cs.createddate)
    < ('01:00:00'::interval * ctype.slahours::double precision) THEN 1 WHEN (cs.status::text
    <> ALL (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (now() - cs.createddate::timestamp
    with time zone) < ('01:00:00'::interval * ctype.slahours::double precision) THEN
    1 ELSE 0 END) AS withinsla, sum(CASE WHEN (cs.status::text = ANY (ARRAY['COMPLETED'::character
    varying::text, 'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text]))
    AND (cs.lastmodifieddate - cs.createddate) > ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 WHEN (cs.status::text <> ALL (ARRAY['COMPLETED'::character varying::text,
    'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text])) AND
    (now() - cs.createddate::timestamp with time zone) > ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 ELSE 0 END) AS beyondsla, CASE WHEN bool_or((cs.status::text
    = ANY (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (cs.lastmodifieddate - cs.createddate)
    < ('01:00:00'::interval * ctype.slahours::double precision)) THEN 'Yes'::text
    WHEN bool_or((cs.status::text <> ALL (ARRAY['COMPLETED'::character varying::text,
    'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text])) AND
    (now() - cs.createddate::timestamp with time zone) < ('01:00:00'::interval * ctype.slahours::double
    precision)) THEN 'Yes'::text ELSE 'No'::text END AS issla FROM submission cs,
    eg_department dept, egpgr_complainttype ctype WHERE cs.department=dept.id and
    cs.servicecode = ctype.code and cs.createddate >= $fromDate and cs.createddate
    <= $toDate GROUP BY dept.name;
- reportName: DrillDownByBoundary
  summary: Drill Down Report grouped by Boundary Name - based on a date period
  version: 1.0.0
  sourceColumns:
  - name: name
    label: reports.pgr.boundary.name
    type: string
    source: egpgr_complainttype
  - name: registered
    label: reports.pgr.status.registered
    type: number
    source: seva
  - name: inprocess
    label: reports.pgr.status.inprocess
    type: number
    source: completed
  - name: completed
    label: reports.pgr.status.completed
    type: number
    source: reopened
  - name: rejected
    label: reports.pgr.status.reopened
    type: number
    source: seva
  - name: rejected
    label: reports.pgr.status.rejected
    type: number
    source: seva
  - name: withinsla
    label: reports.pgr.status.withinsla
    type: number
    source: seva
  - name: beyondsla
    label: reports.pgr.status.beyondsla
    type: number
    source: seva
  - name: issla
    label: reports.pgr.status.issla
    type: string
    source: seva
  searchParams:
  - name: fromDate
    label: reports.pgr.datefrom
    type: epoch
    source: seva
  - name: toDate
    label: reports.pgr.dateto
    type: epoch
    source: seva
  query: SELECT boundary.name, count(CASE WHEN cs.status::text = 'REGISTERED'::text
    THEN 1 ELSE NULL::integer END) AS registered, count(CASE WHEN cs.status::text
    = ANY (ARRAY['FORWARDED'::character varying::text, 'PROCESSING'::character varying::text,
    'NOTCOMPLETED'::character varying::text]) THEN 1 ELSE NULL::integer END) AS inprocess,
    count(CASE WHEN cs.status::text = ANY (ARRAY['COMPLETED'::character varying::text,
    'WITHDRAWN'::character varying::text, 'CLOSED'::character varying::text]) THEN
    1 ELSE NULL::integer END) AS completed, count(CASE WHEN cs.status::text = 'REOPENED'::text
    THEN 1 ELSE NULL::integer END) AS reopened, count(CASE WHEN cs.status::text =
    'REJECTED'::text THEN 1 ELSE NULL::integer END) AS rejected, sum(CASE WHEN (cs.status::text
    = ANY (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (cs.lastmodifieddate - cs.createddate)
    < ('01:00:00'::interval * ctype.slahours::double precision) THEN 1 WHEN (cs.status::text
    <> ALL (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (now() - cs.createddate::timestamp
    with time zone) < ('01:00:00'::interval * ctype.slahours::double precision) THEN
    1 ELSE 0 END) AS withinsla, sum(CASE WHEN (cs.status::text = ANY (ARRAY['COMPLETED'::character
    varying::text, 'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text]))
    AND (cs.lastmodifieddate - cs.createddate) > ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 WHEN (cs.status::text <> ALL (ARRAY['COMPLETED'::character varying::text,
    'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text])) AND
    (now() - cs.createddate::timestamp with time zone) > ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 ELSE 0 END) AS beyondsla, CASE WHEN bool_or((cs.status::text
    = ANY (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (cs.lastmodifieddate - cs.createddate)
    < ('01:00:00'::interval * ctype.slahours::double precision)) THEN 'Yes'::text
    WHEN bool_or((cs.status::text <> ALL (ARRAY['COMPLETED'::character varying::text,
    'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text])) AND
    (now() - cs.createddate::timestamp with time zone) < ('01:00:00'::interval * ctype.slahours::double
    precision)) THEN 'Yes'::text ELSE 'No'::text END AS issla FROM submission cs,
    eg_boundary boundary, egpgr_complainttype ctype WHERE cs.department=boundary.id
    and cs.servicecode = ctype.code and cs.createddate >= '2017-06-01' and cs.createddate
    <= '2017-07-04'GROUP BY boundary.name;
- reportName: GrievanceByFunctionary
  summary: Functionary Report grouped by Functionary Name - based on a date period
  version: 1.0.0
  sourceColumns:
  - name: name
    label: reports.pgr.functionary.name
    type: string
    source: egpgr_user
  - name: registered
    label: reports.pgr.status.registered
    type: number
    source: seva
  - name: inprocess
    label: reports.pgr.status.inprocess
    type: number
    source: completed
  - name: completed
    label: reports.pgr.status.completed
    type: number
    source: reopened
  - name: rejected
    label: reports.pgr.status.reopened
    type: number
    source: seva
  - name: rejected
    label: reports.pgr.status.rejected
    type: number
    source: seva
  - name: withinsla
    label: reports.pgr.status.withinsla
    type: number
    source: seva
  - name: beyondsla
    label: reports.pgr.status.beyondsla
    type: number
    source: seva
  - name: issla
    label: reports.pgr.status.issla
    type: string
    source: seva
  searchParams:
  - name: fromDate
    label: reports.pgr.datefrom
    type: epoch
    source: seva
  - name: toDate
    label: reports.pgr.dateto
    type: epoch
    source: seva
  query: SELECT us.username AS employeename, count(CASE WHEN cs.name::text = 'REGISTERED'::text
    THEN 1 ELSE NULL::integer END) AS registered, count(CASE WHEN cs.name::text =
    ANY (ARRAY['FORWARDED'::character varying::text, 'PROCESSING'::character varying::text,
    'NOTCOMPLETED'::character varying::text]) THEN 1 ELSE NULL::integer END) AS inprocess,
    count(CASE WHEN cs.name::text = ANY (ARRAY['COMPLETED'::character varying::text,
    'WITHDRAWN'::character varying::text, 'CLOSED'::character varying::text]) THEN
    1 ELSE NULL::integer END) AS completed, count(CASE WHEN cs.name::text = 'REOPENED'::text
    THEN 1 ELSE NULL::integer END) AS reopened, count(CASE WHEN cs.name::text = 'REJECTED'::text
    THEN 1 ELSE NULL::integer END) AS rejected, sum(CASE WHEN (cs.status::text = ANY
    (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (cs.lastmodifieddate - cs.createddate)
    < ('01:00:00'::interval * ctype.slahours::double precision) THEN 1 WHEN (cs.status::text
    <> ALL (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (now() - cs.createddate::timestamp
    with time zone) < ('01:00:00'::interval * ctype.slahours::double precision) THEN
    1 ELSE 0 END) AS withinsla, sum(CASE WHEN (cs.status::text = ANY (ARRAY['COMPLETED'::character
    varying::text, 'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text]))
    AND (cs.lastmodifieddate - cs.createddate) > ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 WHEN (cs.status::text <> ALL (ARRAY['COMPLETED'::character varying::text,
    'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text])) AND
    (now() - cs.createddate::timestamp with time zone) > ('01:00:00'::interval * ctype.slahours::double
    precision) THEN 1 ELSE 0 END) AS beyondsla, CASE WHEN bool_or((cs.status::text
    = ANY (ARRAY['COMPLETED'::character varying::text, 'REJECTED'::character varying::text,
    'WITHDRAWN'::character varying::text])) AND (cs.lastmodifieddate - cs.createddate)
    < ('01:00:00'::interval * ctype.slahours::double precision)) THEN 'Yes'::text
    WHEN bool_or((cs.status::text <> ALL (ARRAY['COMPLETED'::character varying::text,
    'REJECTED'::character varying::text, 'WITHDRAWN'::character varying::text])) AND
    (now() - cs.createddate::timestamp with time zone) < ('01:00:00'::interval * ctype.slahours::double
    precision)) THEN 'Yes'::text ELSE 'No'::text END AS issla FROM submission cs,
    egpgr_complainttype ctype, egeis_assignment ass, eg_user us WHERE cs.assignee
    = ass.employeeid and ass.employeeid=us.id and cs.createddate >= $fromDate and
    cs.createddate <= $toDate GROUP BY us.username;
- reportName: AgeingByBoundary
  summary: Ageing report by boundary
  version: 1.0.0
  sourceColumns:
  - name: name
    label: reports.pgr.boundary.name
    type: string
    source: eg_boundary
  - name: greater than 30 (Days)
    label: reports.pgr.ageing.greater.30days
    type: number
    source: submission
  - name: 10-30 (Days)
    label: reports.pgr.ageing.between.10_30days
    type: number
    source: submission
  - name: 5-10 (Days)
    label: reports.pgr.ageing.between.5_10days
    type: number
    source: submission
  - name: 2-5 (Days)
    label: reports.pgr.ageing.between.2_5days
    type: number
    source: submission
  - name: 0-2 (Days)
    label: reports.pgr.ageing.between.0_2days
    type: number
    source: submission
  searchParams:
  - name: fromDate
    label: reports.pgr.datefrom
    type: epoch
    source: seva
  - name: toDate
    label: reports.pgr.dateto
    type: epoch
    source: seva
  - name: grievancestatustype
    label: reports.pgr.grievancestatustype
    type: singlevaluelist
    pattern: 'list://{"Completed": "Completed","Pending": "Pending","Rejected": "Rejected"}'
    source: seva
  query: SELECT boundary.name, count(CASE WHEN (date_part('epoch'::text, cs.lastmodifieddate
    - cs.createddate) / 86400::double precision) > 30::double precision THEN 1 ELSE
    NULL::integer END) AS greater30, count(CASE WHEN (date_part('epoch'::text, cs.lastmodifieddate
    - cs.createddate) / 86400::double precision) >= 10::double precision AND (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) <= 30::double
    precision THEN 1 ELSE NULL::integer END) AS btw10to30, count(CASE WHEN (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) >= 5::double
    precision AND (date_part('epoch'::text, cs.lastmodifieddate - cs.createddate)
    / 86400::double precision) <= 10::double precision THEN 1 ELSE NULL::integer END)
    AS btw5to10, count(CASE WHEN (date_part('epoch'::text, cs.lastmodifieddate - cs.createddate)
    / 86400::double precision) >= 2::double precision AND (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) <= 5::double
    precision THEN 1 ELSE NULL::integer END) AS btw2to5, count(CASE WHEN (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) >= 0::double
    precision AND (date_part('epoch'::text, cs.lastmodifieddate - cs.createddate)
    / 86400::double precision) <= 2::double precision THEN 1 ELSE NULL::integer END)
    AS lsthn2 FROM egpgr_complainttype ctype, submission cs LEFT JOIN eg_boundary
    boundary ON cs.latitude::numeric = boundary.latitude AND cs.longitude::numeric
    = boundary.longitude WHERE cs.createddate >= $fromDate and cs.createddate <= $toDate
    and cs.tenantid = $tenantid AND cs.status::text = 'COMPLETED' GROUP BY boundary.name;
- reportName: AgeingByDepartment
  summary: Ageing report by department
  version: 1.0.0
  sourceColumns:
  - name: name
    label: reports.pgr.department.name
    type: string
    source: eg_department
  - name: greater than 30 (Days)
    label: reports.pgr.ageing.greater.30days
    type: number
    source: submission
  - name: 10-30 (Days)
    label: reports.pgr.ageing.between.10_30days
    type: number
    source: submission
  - name: 5-10 (Days)
    label: reports.pgr.ageing.between.5_10days
    type: number
    source: submission
  - name: 2-5 (Days)
    label: reports.pgr.ageing.between.2_5days
    type: number
    source: submission
  - name: 0-2 (Days)
    label: reports.pgr.ageing.between.0_2days
    type: number
    source: submission
  searchParams:
  - name: fromDate
    label: reports.pgr.datefrom
    type: epoch
    source: seva
  - name: toDate
    label: reports.pgr.dateto
    type: epoch
    source: seva
  - name: grievancestatustype
    label: reports.pgr.grievancestatustype
    type: singlevaluelist
    pattern: 'list://{"Completed": "Completed","Pending": "Pending","Rejected": "Rejected"}'
    source: seva
  query: SELECT dept.name, count(CASE WHEN (date_part('epoch'::text, cs.lastmodifieddate
    - cs.createddate) / 86400::double precision) > 30::double precision THEN 1 ELSE
    NULL::integer END) AS greater30, count(CASE WHEN (date_part('epoch'::text, cs.lastmodifieddate
    - cs.createddate) / 86400::double precision) >= 10::double precision AND (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) <= 30::double
    precision THEN 1 ELSE NULL::integer END) AS btw10to30, count(CASE WHEN (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) >= 5::double
    precision AND (date_part('epoch'::text, cs.lastmodifieddate - cs.createddate)
    / 86400::double precision) <= 10::double precision THEN 1 ELSE NULL::integer END)
    AS btw5to10, count(CASE WHEN (date_part('epoch'::text, cs.lastmodifieddate - cs.createddate)
    / 86400::double precision) >= 2::double precision AND (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) <= 5::double
    precision THEN 1 ELSE NULL::integer END) AS btw2to5, count(CASE WHEN (date_part('epoch'::text,
    cs.lastmodifieddate - cs.createddate) / 86400::double precision) >= 0::double
    precision AND (date_part('epoch'::text, cs.lastmodifieddate - cs.createddate)
    / 86400::double precision) <= 2::double precision THEN 1 ELSE NULL::integer END)
    AS lsthn2 FROM egpgr_complainttype ctype, submission cs, eg_department dept WHERE
    dept.id = cs.department and cs.servicecode = ctype.code and cs.createddate >=
    $fromDate and cs.createddate <= $toDate and cs.tenantid = $tenantid  GROUP BY
    dept.name;
  