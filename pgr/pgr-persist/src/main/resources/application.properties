spring.kafka.consumer.group-id=workflowassignment

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

kafka.topics.pgr.workflowupdated.name=egov.pgr.workflowupdated
kafka.topics.pgr.workflowupdated.id=egov.pgr.workflowupdated1
kafka.topics.pgr.workflowupdated.group=egov.pgr.workflowupdated1

kafka.topics.core.notifications.sms.name=egov.core.notification.sms
kafka.topics.core.notifications.email.name=egov.core.notification.email
kafka.topics.pgr.indexing.name=egov.pgr.indexing

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/devdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.generate-ddl=false

spring.jpa.show-sql=false
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.database=POSTGRESQL
spring.data.jpa.repositories.enabled=true

egov.services.eis.hostname=http://localhost:8085/
egov.services.eis.fetch_assignee.context=eis/position?tenantId={tenant_id}&id={assignee}

user.service.host=http://localhost:8081/
egov.services.user_by_id=user/_search

spring.kafka.consumer.value-deserializer=org.egov.pgr.consumer.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

defaults.escalationHours=48

spring.main.web-environment=false

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

